{"version":3,"sources":["components/forms/user/FormUserEdit.js","consts.js","services/sortService.js","store/sector.js","store/images.js","services/userService.js","img/default_user.jpg","hoc/hoc.js","components/homepage/Homepage.js","components/user/UserPhoto.js","components/forms/user/FormUserDelete.js","components/user/UserDetail.js","components/user/UserInfo.js","components/user/UserList.js","store/project.js","components/forms/project/FormProjectEdit.js","components/forms/project/FormAddUsersProject.js","components/forms/project/FormRemoveUsersProject.js","components/project/ProjectMembers.js","components/sector/SectorDetail.js","components/forms/sector/FormSectorEdit.js","components/forms/sector/FormSectorDelete.js","components/sector/SectorMembers.js","components/sector/SectorList.js","components/meeting/MeetingMembers.js","store/meeting.js","components/forms/meeting/FormAddMembersMeeting.js","components/forms/meeting/FormRemoveMembersMeeting.js","components/forms/meeting/FormEditMeeting.js","components/meeting/timer/ButtonTimerMeeting.js","components/meeting/timer/Timer.js","components/meeting/MeetingDetail.js","components/forms/meeting/items/MeetingAgenda.js","components/forms/meeting/items/RulesMeeting.js","components/forms/meeting/items/Items.js","components/meeting/record/Record.js","store/comments.js","components/forms/meeting/comments/FormCommentCreate.js","components/meeting/comments/CommentList.js","components/meeting/comments/Comment.js","components/project/ProjectList.js","routes.js","components/forms/sector/FormSectorCreate.js","components/forms/user/FormUserCreate.js","components/forms/project/FormProjectCreate.js","components/forms/meeting/FormMeetingCreate.js","components/layout/Dropdown.js","components/forms/login/FormLogin.js","components/layout/Navbar.js","components/layout/AutoComplete.js","components/layout/Layout.js","App.js","serviceWorker.js","store/utility.js","store/authReducers/authReducer.js","index.js","store/user.js","store/auth.js"],"names":["Option","Select","FormUserEdit","props","showDrawer","setState","visible","onClose","fileSelectHandler","event","file","target","files","beforeUpload","global","image","state","sectors","token","handleSubmit","bind","getUserToken","getSectors","this","isJpgOrPng","type","isLt2M","size","message","error","values","sectorID","FormData","typeUserValidate","imageUser","imageID","sector","user","append","name","editImage","saveImage","id","undefined","email","username","ramal","is_administrator","is_participant","description","validateUpdate","updateUser","status","window","location","reload","notification","open","data","typeUser","aux","length","push","key","sort","Form","useForm","form","title","width","bodyStyle","paddingBottom","footer","style","textAlign","onClick","marginRight","validateFields","then","resetFields","catch","info","console","log","color","marginLeft","align","hideRequiredMark","layout","gutter","span","Item","label","rules","required","maxLength","value","map","onChange","TextArea","rows","className","Component","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","BASE_URL_USERS","BASE_URL_IMAGES","BASE_URL_SECTORS","BASE_URL_PROJECTS","BASE_URL_MEETING","BASE_URL_COMMENTS","property","sortOrder","substr","a","b","localeCompare","axios","defaults","headers","Authorization","get","getSector","slug","saveSector","post","editSector","put","deleteSector","delete","getImage","warning","currentUser","module","exports","Hoc","children","Homepage","href","Meta","Card","UserPhoto","DefaultUser","cover","alt","src","hoverable","confirm","Modal","FormUserDelete","showDeleteConfirm","userId","getUserId","getCurrentUser","propsForms","userID","content","okText","okType","cancelText","onOk","deleteUserLogout","success","history","onCancel","deleteUser","danger","DeleteOutlined","withRouter","Content","Layout","UserDetail","column","xxl","xl","lg","md","sm","xs","class","UserInfo","EyeOutlined","placement","closable","pStyle","marginBottom","permission","fontSize","lineHeight","display","DescriptionItem","UserList","users","getUsers","final_users","typePermission","dataSource","pagination","defaultPageSize","bordered","renderItem","actions","avatar","getProjects","getAllProjects","saveProject","project","editProject","projectID","addUsersProject","removeUsersProject","FormProjectEdit","projects","found","find","idProject","height","StopOutlined","SaveOutlined","disabled","placeholder","tags","EditOutlined","FormAddUsersProject","nextTargetKeys","targetKeys","showSearch","getUserNotInProject","prevProps","users_data","ghost","UsergroupAddOutlined","operations","filterOption","inputValue","item","toLowerCase","indexOf","toString","leftColumns","dataIndex","rightColumns","TableTransfer","restProps","showSelectAll","direction","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","selectedKeys","listDisabled","columns","rowSelection","onSelectAll","selected","selectedRows","treeSelectedKeys","filter","diffKeys","difference","onSelect","selectedRowKeys","pointerEvents","onRow","includes","FormRemoveUserProject","getUserInProject","UsergroupDeleteOutlined","ProjectMembers","data_users","FormProjectMembers","SectorDetail","match","params","render","tag","toUpperCase","record","to","FormSectorEdit","initials","SectorDelete","nameSector","SectorMembers","getUsersInSector","FormSectorMembers","SectorList","MeetingMembers","meeting","meetingID","getUsersInMeeting","FormMeetingMembers","getAllMeetings","getMeetings","slugProject","saveMeeting","editMeeting","addUsersMeeting","removeUsersMeeting","addItemsMeeting","FormAddMembersMeeting","getUsersInProjectAndNotInMeeting","meeting_leader","subject_matter","initial_date","initial_hour","FormRemoveMembersMeeting","Input","FormEditMeeting","meetings","format","FormMeetingEdit","locale","initialValues","moment","dateFormatList","use24Hours","ButtonTimerMeeting","start","stop","reset","finish","resume","Timer","useState","ms","seconds","minutes","hour","time","setTime","interv","setInterv","setStatus","updatedMs","updatedSeconds","updatedMinutes","updatedHour","run","setInterval","clearInterval","duration_time","document","getElementById","innerText","finishMeeting","real_hour","atualHour","real_date","atualDate","MeetingDetail","today","Date","getHours","getMinutes","getSeconds","day","getDate","month","getMonth","year","getUTCFullYear","checkTime","CaretRightOutlined","text","agendas","agenda","MeetingAgenda","List","fields","add","remove","field","index","formItemLayout","formItemLayoutWithOutLabel","validateTrigger","whitespace","noStyle","MinusCircleOutlined","margin","PlusOutlined","labelCol","wrapperCol","offset","RulesMeeting","TabPane","Tabs","Items","FormItems","defaultActiveKey","tab","BookOutlined","AccountBookOutlined","OrderedListOutlined","Record","AuditOutlined","getComments","FormCommentCreate","submitting","comment","err","saveComment","setTimeout","handleChange","e","onSubmit","Editor","htmlType","loading","CommentList","comments","imageFinal","comment_list","auxComment","auxUsers","author","header","itemLayout","marginTop","Comment","CommentOutlined","ProjectList","data_meeting","rules_meeting","agendas_meeting","users_meeting","auxRules","auxAgendas","connect","auth","exact","path","component","FormSectorCreate","CreateFormSector","FormUserCreate","is_administrator_valid","type_user","password1","password2","authSignup","CreateFormUser","Password","FormProjectCreate","CreateFormProject","FormMeetingCreate","onSearch","val","projects_list","count","auxProject","pId","CreateFormMeeting","optionFilterProp","input","option","dropdownStyle","maxHeight","overflow","treeData","treeDefaultExpandAll","DropdownNav","overlay","UserOutlined","TeamOutlined","UserAddOutlined","logout","LogoutOutlined","DownOutlined","AppstoreAddOutlined","EnvironmentOutlined","dispatch","FormLogin","visibleForm","cancel","password","onAuth","CollectionCreateForm","authLogin","Header","Navbar","mode","isLogged","Dropdown","getRandomInt","max","min","Math","floor","random","Complete","options","setOptions","dropdownMatchSelectWidth","query","Array","join","split","idx","category","justifyContent","rel","Search","enterButton","Footer","AutoComplete","GithubOutlined","InstagramOutlined","App","onTryAutoSignup","authCheckState","Boolean","hostname","updateObject","oldObject","updateProperties","initialState","authStart","action","authSuccess","authFail","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","app","pt_BR","ReactDOM","navigator","serviceWorker","ready","registration","unregister","JSON","parse","localStorage","getItem","removeItem","checkAuthTimeout","expirationTime","expirationDate","getTime","res","user_type","setItem","stringify"],"mappings":"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","file":"static/js/main.a2950b0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { \n    Input, Button, Form, message, Drawer, Col, Row, Select, InputNumber, notification  \n} from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\n\n\nimport { getUserToken, updateUser } from '../../../store/user';\nimport { saveImage, editImage } from '../../../store/images';\nimport { getSectors } from '../../../store/sector';\nimport { validateUpdate, typeUser, typeUserValidate } from '../../../services/userService';\nimport { sort } from '../../../services/sortService';\n\nconst { Option } = Select;\n\nclass FormUserEdit extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            sectors: [],\n            visible: false,\n            image: null,\n            token: null\n        }\n\n        global.image = null;\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.beforeUpload = this.beforeUpload.bind(this);\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ \n            sectors: sectors,\n            token: token \n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    beforeUpload(file) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        \n        if (!isJpgOrPng) {\n            message.error('Você Só Pode Carregar Arquivos JPG/PNG!');\n        }\n\n        if (!isLt2M) {\n            message.error('Imagem Deve Ser Menor Que 2MB!');\n        }\n\n        return isJpgOrPng && isLt2M;\n    }\n\n    fileSelectHandler = event => {\n        const file = event.target.files[0];\n        \n        if(this.beforeUpload(file)) {\n            global.image = file;\n        } else {\n            \n        }\n    }\n\n    async handleSubmit(values, sectorID) {\n        const token = this.state.token;\n        const image = new FormData();\n        let type = typeUserValidate(values.type);\n        let imageUser = null;\n        let imageID = '';\n        let sector = values.sector;\n\n        if(global.image === null) {\n\n        } else {\n            if(this.props.user.image !== null) {\n                imageID = this.props.user.image;\n                image.append('image', global.image, global.image.name);\n                imageUser = await editImage(token, image, imageID);\n            } else {\n                image.append('image', global.image, global.image.name);\n                imageUser = await saveImage(token, image);\n                imageID = imageUser.id;\n            }\n        }\n\n        if(sector === undefined || sector === null) {\n            sector = sectorID;\n        } else {\n\n        }\n\n        let user = {\n            id: this.props.user.id,\n            email: this.props.user.email,\n            username: this.props.user.username,\n            ramal: values.ramal,\n            name: values.name,\n            sector: sector,\n            is_administrator: !type,\n            is_participant: type,\n            description: values.description,\n            image: imageID\n        };\n\n        user = validateUpdate(user, this.props.user);\n        const status = await updateUser(token, user);\n        global.image = null;\n\n        if(status === true) {\n            window.location.reload(false);\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Erro em Ação',\n                description: 'Erro ao Atualizar o Usuário, Tente Novamente!.',\n            });\n            notification.open({\n                type: 'info',\n                message: 'Ação Requerida',\n                description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n            });\n        }\n    }\n\n    render() {\n        let sectorID = null;\n        let data = { sectors: [] };\n        const type = typeUser(this.props.user.is_administrator);\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            if(this.props.user.sector === null) {\n\n            } else {\n                if(this.props.user.sector === this.state.sectors[aux].name) {\n                    sectorID =  this.state.sectors[aux].id;\n                }\n            }\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n            });\n        }\n        data.sectors.sort(sort('name'));\n        const FormUserEdit = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Edição da Conta de ${ this.props.user.name }` }\n                    width = { 720 } onClose = { this.onClose } visible = { this.state.visible }\n                    bodyStyle = {{ paddingBottom: 80 }}\n                    footer = {\n                        <div style ={{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values, sectorID);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <h4 style = {{ color: 'red', marginLeft: 30 }} align = 'center'> \n                        Caso Não Queira Alterar um Campo, Basta Deixa-lo Em Branco. \n                    </h4>\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 12 }>\n                                <Form.Item \n                                    name = 'name' label = 'Nome' rules = {[{ required: false }]}\n                                >\n                                    <Input maxLength = { 40 } />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'ramal' label = 'Ramal' rules = {[{ required: false }]}\n                                >\n                                    <InputNumber maxLength = { 6 } />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            {\n                                type === 'Administrador' ? (\n                                    <Col span = { 8 }>\n                                        <Form.Item \n                                            name = 'type' label = 'Tipo de Usuário' \n                                            rules = {[{ required: false }]}\n                                        >\n                                            <Select>\n                                                <Option key = '1' value = { 'Administrador' }> \n                                                    Administrador \n                                                </Option>\n                                                <Option key = '2' value = { 'Participante' }>\n                                                    Participante\n                                                </Option>\n                                            </Select>\n                                        </Form.Item>\n                                    </Col>\n                                ): null\n                            }\n                        </Row>\n                        \n                        <Row gutter = { 18 }>\n                            <Col span = { 18 }>\n                                <Form.Item\n                                    name = 'sector' label = 'Setor' rules = {[{ required: false }]}\n                                >\n                                    <Select>\n                                        { data.sectors.map(sector =>\n                                            <Option value = { sector.key } key = { sector.key }> \n                                                { sector.name } \n                                            </Option> \n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <input type = 'file' onChange = { this.fileSelectHandler }/>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 24 }>\n                                <Form.Item \n                                    name = 'description' label = 'Descrição'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <Input.TextArea rows = { 4 } maxLength = { 500 } />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        }\n        return(\n            <div>\n                <Button type = 'ghost' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined /> <b> Editar </b>  \n                </Button>\n                <FormUserEdit />\n            </div>\n        );\n    }\n}\n\nexport default FormUserEdit;","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const BASE_URL_USERS = 'http://0.0.0.0:8000/users/';\nexport const BASE_URL_IMAGES = 'http://0.0.0.0:8000/images/';\nexport const BASE_URL_SECTORS = 'http://0.0.0.0:8000/sectors/';\nexport const BASE_URL_PROJECTS = 'http://0.0.0.0:8000/projects/';\nexport const BASE_URL_MEETING = 'http://0.0.0.0:8000/meetings/';\nexport const BASE_URL_RULES = 'http://0.0.0.0:8000/rules/';\nexport const BASE_URL_AGENDAS = 'http://0.0.0.0:8000/agendas/';\nexport const BASE_URL_COMMENTS = 'http://0.0.0.0:8000/comments/';","export const sort = (property) => {\n    var sortOrder = 1;\n\n    if(property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n    }\n\n    return function (a,b) {\n        if(sortOrder === -1){\n            return b[property].localeCompare(a[property]);\n        }else{\n            return a[property].localeCompare(b[property]);\n        }        \n    }\n}","import axios from 'axios';\n\nimport { BASE_URL_SECTORS } from '../consts';\n\nexport const getSectors = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_SECTORS }`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getSector = async (token, slug) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_SECTORS }detail/${ slug }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveSector = async (token, sector) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.post(`${ BASE_URL_SECTORS }create/`, sector);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editSector = async (token, sector) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.put(`${ BASE_URL_SECTORS }update/${ sector.sectorID }/`, sector);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const deleteSector = async(token, sectorID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_SECTORS }delete/${ sectorID }/`);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};","import axios from 'axios';\n\nimport { BASE_URL_IMAGES } from '../consts';\n\nexport const getImage = async (token, imageID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_IMAGES }detail/${ imageID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveImage = async (token, image) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.post(`${ BASE_URL_IMAGES }create/`, image);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editImage = async (token, image, imageID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.put(`${ BASE_URL_IMAGES }update/${ imageID }/`, image);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};","import { message } from 'antd';\n\nexport const validateFields = (username) => {\n    if(username.length < 3) {\n        message.warning('Os usuários não tem menos que 3 caracteres!');\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport const typeUser = (is_administrator) => {\n    if(is_administrator === true) {\n        return 'Administrador';\n    } else {\n        return 'Participante';\n    }\n}\n\nexport const typeUserValidate = (is_administrator) => {\n    if(is_administrator === 'Administrador') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport const validateUpdate = (user, currentUser) => {\n    if(user.name === '' || user.name === null || user.name === undefined) {\n        user.name = currentUser.name;\n    } if(user.ramal === '' || user.ramal === null || user.ramal === undefined) {\n        user.ramal = currentUser.ramal;\n    } if(user.email === '' || user.email === null || user.email === undefined) {\n        user.email = currentUser.email;\n    } if(user.image === '' || user.image === null || user.image === undefined) {\n        user.image = currentUser.image;\n    } if(user.description === '' || user.description === null || user.description === undefined) {\n        user.description = currentUser.description;\n    } if(user.is_administrator === '' || user.is_administrator === null || user.is_administrator === undefined) {\n        user.is_administrator = currentUser.is_administrator;\n        user.is_participant = !currentUser.is_administrator;\n    }\n    \n    return user;\n}","module.exports = __webpack_public_path__ + \"static/media/default_user.11bee53e.jpg\";","const Hoc = props => props.children;\n\nexport default Hoc;","import React from 'react';\n\nconst Homepage = () => {\n    return (\n        <div className = 'centralContent'>\n            <p className = 'textContent'>\n                Bem Vindo ao sistema de Gerenciamento de Reuniões e Atas (Grata), o \n                software que a sua empresa necessita para alcançar maiores níveis de\n                aproveitamento em seus encontros. Planeje suas reuniões, defina os\n                participantes, gere atas, diminua o desperdício de tempo com papeis e\n                deixe que o Grata ajude você e sua empresa a alcançar seus objetivos\n                estratégicos.\n                <br></br>\n                <br></br>                                \n                O Grata é uma ferramenta Open-Source,\n                ou seja, o código dela é aberto e pode ser encontrado nos repositórios \n                <a href = 'https://github.com/FGAProjects/Grata-Frontend'> FrontEnd </a> \n                e <a href = 'https://github.com/FGAProjects/Grata-Backend'>Backend.</a>\n                <br></br>\n                Caso Deseje uma documentação sobre o projeto, basta clicar neste\n                <a href = 'https://github.com/FGAProjects/TCC'> link</a>.\n                <br></br>\n                Contato com o desenvolvedor via github: \n                <a href = 'https://github.com/MrVictor42'> MrVictor42</a>.\n            </p>\n        </div>\n    );\n}\n\nexport default Homepage;","import React from 'react';\nimport { Card } from 'antd';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nconst { Meta } = Card;\n\nconst UserPhoto = (props) => {\n    let image = null;\n\n    if(props.image === null) {\n        image = DefaultUser;\n    } else {\n        image = props.image;\n    }\n    \n    return(\n        <Card \n            cover = { <img alt = 'avatar' src = { image } /> } \n            hoverable className = 'imgAvatar'>\n            <Meta title = 'Foto do Usuário' description = { `Foto de Perfil de ${ props.user.name }` } />\n        </Card>\n    );\n};\n\nexport default UserPhoto;","import React, { Component } from 'react';\nimport { Button, Modal, notification } from 'antd';\nimport { withRouter } from 'react-router';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport { \n    getUserToken, deleteUser, deleteUserLogout, getCurrentUser, getUserId } \nfrom '../../../store/user';\n\nconst { confirm } = Modal;\n\nclass FormUserDelete extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n            token: null\n        }\n\n        this.showDeleteConfirm = this.showDeleteConfirm.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n\n        this.setState({ \n            currentUser: user,\n            token: token \n        });\n    }\n\n    showDeleteConfirm() {\n        const { currentUser } = this.state;\n        const token = this.state.token;\n        const propsForms = this.props;\n        let name = this.props.user.name\n        let userID = this.props.user.key;\n\n        if(currentUser.name === this.props.user.name) {\n            confirm ({\n                title: 'Exclusão de Conta',\n                content: 'Tem Certeza Que Deseja Excluir Sua Conta, Caro(a) ' + name  + '?',\n                okText: 'Sim',\n                okType: 'danger',\n                cancelText: 'Não',\n            \n                onOk() {\n                    deleteUserLogout(token, userID);\n                    Modal.success({\n                        title: 'Ação Concluída!',\n                        content: 'Conta Excluída Com Sucesso!',\n                    });\n                    propsForms.history.push('/')\n                },\n                onCancel() {\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Cancelada',\n                        description: 'Exclusão de Conta Cancelada Com Sucesso!',\n                    });\n                },\n            });\n        } else {\n            confirm ({\n                title: 'Exclusão de Conta',\n                content: 'Tem Certeza Que Deseja Excluir A Conta de ' + name  + '?',\n                okText: 'Sim',\n                okType: 'danger',\n                cancelText: 'Não',\n            \n                onOk() {\n                    deleteUser(token, userID);\n                    Modal.success({\n                        title: 'Ação Concluída!',\n                        content: 'Conta Excluída Com Sucesso! Atualize a Página!',\n                    });\n                },\n                onCancel() {\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Cancelada',\n                        description: 'Exclusão de Conta Cancelada Com Sucesso!',\n                    });\n                },\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Button type = 'primary' danger onClick = { this.showDeleteConfirm }> \n                <DeleteOutlined /> <b> Excluir Conta </b> \n            </Button>\n        );\n    }\n}\n\nexport default withRouter(FormUserDelete);","import React, { Component } from 'react';\nimport { Layout, Descriptions, Divider } from 'antd';\n\nimport UserPhoto from './UserPhoto';\nimport FormUserEdit from '../forms/user/FormUserEdit';\nimport FormUserDelete from '../forms/user/FormUserDelete';\n\nimport { getCurrentUser, getUserToken, getUserId } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { typeUser } from '../../services/userService';\n\nconst { Content } = Layout;\n\nclass UserDetail extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n            image: null\n        }\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        let imageUser = null;\n\n        if(user.image === null) {\n\n        } else {\n            imageUser = await getImage(token, user.image);\n            this.setState({ image: imageUser.image });\n        }\n\n        this.setState({ currentUser: user });\n    }\n\n    render() {\n        const { currentUser } = this.state;\n        const type = typeUser(currentUser.is_administrator);\n        return (\n            <div className = 'itemsatuais'>\n                <h1 className = 'h1Content'> Informações Pré-Cadastradas de { currentUser.name } </h1>\n                <div className = 'item'>\n                    <Content className = 'painelContent'>\n                        <Descriptions \n                            className = 'descriptionTitle'\n                            column = {{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                        >\n                            <Descriptions.Item label = { <b> Nome de Usuário </b> }> \n                                { currentUser.username }\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label = { <b> Tipo de Usuário </b> }> \n                                { type }\n                            </Descriptions.Item>\n                            <Divider/>\n            \n                            <Descriptions.Item label = { <b> Nome Completo </b> }> \n                                { currentUser.name } \n                            </Descriptions.Item>\n                        \n                            <Descriptions.Item label = { <b> Ramal </b> }> \n                                { currentUser.ramal }\n                            </Descriptions.Item>\n                            <br></br>\n                        \n                            <Descriptions.Item label = { <b> Setor </b> }> \n                                { currentUser.sector }\n                            </Descriptions.Item>\n                            <br></br>\n                            <br></br>\n            \n                            <Descriptions.Item label = { <b> Descrição </b> }> \n                                { currentUser.description }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Content>\n\n                    <Content className = 'contentBottomEdit'>\n                        <FormUserEdit user = { currentUser } />\n                    </Content>\n\n                    <Content className = 'contentBottomDelete'>\n                        <FormUserDelete user = { currentUser } />\n                    </Content>\n                </div>\n                <div class = 'item2'>\n                     <Content> \n                        <UserPhoto user = { currentUser } image = { this.state.image }/>\n                     </Content>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserDetail;","import React, { Component } from 'react';\nimport { Drawer, Divider, Col, Row, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\n\nclass UserInfo extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n\t\t}\n\t\t\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t}\n\t\n\tshowDrawer = () => {\n        this.setState({ visible: true });\n\t};\n\n\tonClose = () => {\n        this.setState({ visible: false });\n\t};\n\n    render() {\n        return (\n            <div>\n\t\t\t\t<Button type = 'primary' onClick = { this.showDrawer }> \n\t\t\t\t\t<EyeOutlined /> <b> Ver Mais </b> \n\t\t\t\t</Button>\n\t\t\t\t<Drawer\n\t\t\t\t\twidth = { 640 }\n\t\t\t\t\tplacement = 'right'\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t>\n\t\t\t\t\t<p \n\t\t\t\t\t\tclassName = 'site-description-item-profile-p' \n\t\t\t\t\t\tstyle = {{ ...pStyle, marginBottom: 24 }}>\n\t\t\t\t\t\t\t<b> Perfil do Usuário: { this.props.user.name } </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className = 'site-description-item-profile-p' style = { pStyle }>\n\t\t\t\t\t\t<b> Perfil </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Nome' content = { this.props.user.name } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Usuario' content = { this.props.user.username } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Ramal' content = { this.props.user.ramal } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Permissão' content = { this.props.user.permission } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 24 }>\n\t\t\t\t\t\t\t<DescriptionItem\n\t\t\t\t\t\t\t\ttitle = 'Descrição' content = { this.props.user.description }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Divider/>\n\t\t\t\t\t<p className = 'site-description-item-profile-p' style = { pStyle }>\n\t\t\t\t\t\t<b> Setor </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 24 }>\n\t\t\t\t\t\t\t<DescriptionItem\n\t\t\t\t\t\t\t\ttitle = 'Nome do Setor' content = { this.props.user.sector }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Divider/>\n\t\t\t\t\t<p className = 'site-description-item-profile-p' style = { pStyle }>\n\t\t\t\t\t\t<b> Projetos Que Participa </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Divider/>\n            \t</Drawer>\n\t\t\t</div>\n        );\n    }\n}\n\nconst pStyle = { fontSize: 16, lineHeight: '24px', display: 'block', marginBottom: 16 };\nconst DescriptionItem = ({ title, content }) => (\n    <div\n      \tclassName = 'site-description-item-profile-wrapper'\n      \tstyle = {{ fontSize: 14, lineHeight: '22px', marginBottom: 7 }}\n    >\n\t\t<p \n\t\t\tclassName = 'site-description-item-profile-p' \n\t\t  \tstyle = {{ marginRight: 8, display: 'inline-block' }}\n      \t>\n    \t\t{ title }:\n      \t</p>\n      \t{ content }\n    </div>\n);\n\nexport default UserInfo;","import React, { Component } from 'react';\nimport { List, Avatar } from 'antd';\n\nimport UserInfo from './UserInfo';\nimport FormUserEdit from '../forms/user/FormUserEdit';\nimport FormUserDelete from '../forms/user/FormUserDelete';\nimport DefaultUser from '../../img/default_user.jpg';\n\nimport { getUsers, getUserToken } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { typeUser } from '../../services/userService';\nimport { sort } from '../../services/sortService';\n\nclass UserList extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            users: [],\n            visible: false\n\t\t}\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const users = await getUsers(token);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image,\n                username: users[aux].username,\n                description: users[aux].description,\n                sector: users[aux].sector,\n                is_administrator: users[aux].is_administrator\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n\t}\n\t\n    render() {\n        let data = { users: [] };\n        let typePermission = null;\n        \n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            typePermission = typeUser(this.state.users[aux].is_administrator);\n            data.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image,\n                description: this.state.users[aux].description,\n                sector: this.state.users[aux].sector,\n                username: this.state.users[aux].username,\n                permission: typePermission\n            });\n        }\n\n        data.users.sort(sort('name'));\n        return (\n            <List\n                dataSource = { data.users } pagination = {{ defaultPageSize: 4 }} \n                bordered className = 'userList'\n                renderItem = { user => (\n                    <List.Item\n                        key = { user.key } \n                        actions = {[\n                            <UserInfo user = { user } />,\n                            <FormUserEdit user = { user } />, \n                            <FormUserDelete user = { user } />\n                        ]}\n                    >\n                        <List.Item.Meta\n                            avatar = { <Avatar src = { user.image } /> }\n                            title = { user.name } description = { user.description }\n                        />\n                    </List.Item>\n                )}\n            />\n        );\n\t}    \n}\nexport default UserList;","import axios from 'axios';\n\nimport { BASE_URL_PROJECTS } from '../consts';\n\nexport const getProjects = async (token, sectorID) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_PROJECTS }projects_in_sector/${ sectorID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getAllProjects = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_PROJECTS }`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getProject = async (token, projectID) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_PROJECTS }detail/${ projectID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveProject = async (token, project) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.post(`${ BASE_URL_PROJECTS }create/`, project);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editProject = async (token, project) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.put(`${ BASE_URL_PROJECTS }update/${ project.projectID }/`, project);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n}\n\nexport const deleteProject = async (token, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_PROJECTS }delete/${ projectID }/`);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const addUsersProject = async (token, project) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_PROJECTS }add_users_project/${ project.projectID }/`, project);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const removeUsersProject = async (token, project) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_PROJECTS }remove_users_project/${ project.projectID }/`, project);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, Modal, notification } from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\n\nimport { getUserToken } from '../../../store/user';\nimport { editProject, getAllProjects } from '../../../store/project';\n\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nclass FormProjectEdit extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            projects: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const projects = await getAllProjects(token);\n\n        this.setState({ \n            token: token,\n            projects: projects \n        });\n    }\n\n    async handleSubmit(values) {\n\n        const projects = this.state.projects;\n\n        let found = projects.find(project => {\n            if(project.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined \n        || values.title === '' || values.title === undefined) {\n\n            const idProject = this.props.project.key;\n            const token = this.state.token;\n            let statusProject = null;\n            let title = null;\n            let sector = this.props.sector.id;\n\n            if(values.title === undefined || values.title === '') {\n                title = this.props.project.title;\n            } else {\n                title = values.title;\n            }\n\n            if(values.status === undefined || values.status === 'pending' \n            || values.status === 'empty') {\n\n                const project = {\n                    projectID: idProject,\n                    status: 'Pendente',\n                    sector: this.props.sector.id,\n                    title: title\n                };\n\n                statusProject = await editProject(token, project);\n\n                if(statusProject !== true) {\n                    window.location.reload(false);\n                } else {\n                    notification.open({ \n                        type: 'error',\n                        message: 'Erro em Ação',\n                        description: 'Erro ao Atualizar o Projeto, Tente Novamente!.',\n                    });\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Requerida',\n                        description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n                    });\n                }\n            } else {\n                title = this.props.project.title;\n                confirm ({\n                    title: 'Cancelamento de Projeto',\n                    content: 'Tem Certeza Que Deseja Cancelar Este Projeto? Todas as Reuniões e ' + \n                    'Seus Documentos Serão Perdidos! do Projeto Serão Canceladas!',\n                    okText: 'Sim',\n                    okType: 'danger',\n                    cancelText: 'Não',\n                \n                    onOk() {\n                        const project = {\n                            projectID: idProject,\n                            title: title,\n                            sector: sector,\n                            status: 'Cancelada'\n                        }\n\n                        editProject(token, project);\n                        \n                        Modal.success({\n                            title: 'Ação Concluída!',\n                            content: 'Projeto Cancelado Com Sucesso!',\n                        });\n                        notification.open({\n                            type: 'info',\n                            message: 'Ação Requerida',\n                            description: 'Por Favor, Atualize a Página.',\n                        });\n                    },\n                    onCancel() {\n                        notification.open({\n                            type: 'success',\n                            message: 'Ação Cancelada',\n                            description: 'Cancelamento de Projeto Cancelado Com Sucesso!',\n                        });\n                    },\n                });\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Projeto Não Atualizado',\n                description: 'Já Existe Um Projeto Com Este Nome/Título Neste ou em Outro Setor. ' +\n                            'Utilize Outro Nome!'\n            });\n        }\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };    \n\n    render() {\n        const FormProjectEdit = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Editar o Projeto: ${ this.props.project.title }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }} >\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form layout = 'vertical' hideRequiredMark>\n                        <h1> Informações Cadastradas </h1>\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Nome do Projeto'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.project.title }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 8 }>\n                            <Col span = { 8 }>\n                                <Form.Item label = 'Status do Projeto'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.project.tags } \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'title' label = 'Nome do Projeto'\n                                    rules = {[{ \n                                        required: false, \n                                        message: 'Por Favor, Insira o Nome do Projeto',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Projeto'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        \n                        <Row gutter = { 8 }>\n                            <Col span = { 8 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status do Projeto'\n                                    rules = {[{ \n                                        required: false, \n                                        message: 'Por Favor, Escolha o Status do Projeto',\n                                    }]}\n                                >\n                                    <Select>\n                                        <Option value = 'empty'> </Option>\n                                        <Option value = 'pending'> Pendente </Option>\n                                        <Option value = 'canceled'> Cancelar Reunião </Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <Button type = 'default' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined/> Editar \n                </Button>\n                <FormProjectEdit />\n            </div>\n        );\n    }\n}\n\nexport default FormProjectEdit;","import React, { Component } from 'react';\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { SaveOutlined, StopOutlined, UsergroupAddOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport difference from 'lodash/difference';\n\nimport { getUserToken, getUserNotInProject } from '../../../store/user';\nimport { addUsersProject } from '../../../store/project';\nimport { sort } from '../../../services/sortService';\n\nclass FormAddUsersProject extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tasync componentDidMount() {\n        const token = getUserToken();\n\t\tconst projectID = this.props.project.key;\n\t\tconst users = await getUserNotInProject(token, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n\t}\n\t\n\tasync componentDidUpdate(prevProps) {\n\t\tif(prevProps.users !== this.state.users) {\n\t\t\tconst token = this.state.token;\n\t\t\tconst projectID = this.props.project.key;\n\t\t\tconst users = await getUserNotInProject(token, projectID);\n\n\t\t\tthis.setState({ users: users });\n\t\t}\n\t}\n\t\n    showDrawer = () => {\n      \tthis.setState({ visible: true });\n    };\n  \n    onClose = () => {\n      \tthis.setState({ visible: false });\n    };\n  \n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n\t};\n\n\tasync handleSubmit() {\n\t\tif(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionado',\n                description: 'Por Favor, Adicione Pelo Menos Uma Pessoa ao Projeto',\n\t\t\t});\n\t\t} else {\n\t\t\tconst token = this.state.token;\n\t\t\tconst users = [];\n\t\t\tconst idProject = this.props.project.key;\n\t\t\tconst sector = this.props.sector.id;\n\t\t\tlet status = null;\n\n\t\t\tfor(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n\t\t\t}\n\n\t\t\tconst project = {\n\t\t\t\tprojectID: idProject,\n\t\t\t\tsector: sector,\n\t\t\t\ttitle: this.props.project.title,\n\t\t\t\tstatus: this.props.project.status,\n\t\t\t\tusers\n\t\t\t};\n\n\t\t\tstatus = await addUsersProject(token, project);\n\n\t\t\tif(status === true) {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Adicionados',\n\t\t\t\t\tdescription: 'Os Usuários Foram Adicionados ao Projeto Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t} else {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Adicionar Membros',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Adicionar ' +  \n\t\t\t\t\t\t\t\t 'os Usuários ao Projeto!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t}\n\t\t}\n\t}\n    \n    render() {\n\t\tconst { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button type = 'primary' onClick = { this.showDrawer } ghost>\n\t\t\t\t\t<UsergroupAddOutlined /> <b> Adicionar Membros </b>\n\t\t\t\t</Button>\n\t\t\t\t<Drawer\n\t\t\t\t\ttitle = { `Adicionar Usuários no Projeto: ${ this.props.project.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Cadastrar Membros no Projeto\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n\t\t\t\t\t<TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Adicionar Usuários', 'Não Adicionar' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Drawer>\n\t\t\t</div>\n      \t);\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n  \nexport default withRouter(FormAddUsersProject);","import React, { Component } from 'react';\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { UsergroupDeleteOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport difference from 'lodash/difference';\n\nimport { getUserToken, getUserInProject } from '../../../store/user';\nimport { removeUsersProject } from '../../../store/project';\nimport { sort } from '../../../services/sortService';\n\nclass FormRemoveUserProject extends Component {\n\n    constructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tasync componentDidMount() {\n        const token = getUserToken();\n\t\tconst projectID = this.props.project.key;\n\t\tconst users = await getUserInProject(token, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n\t}\n\t\n\tasync componentDidUpdate(prevProps) {\n\t\tif(prevProps.users !== this.state.users) {\n\t\t\tconst token = this.state.token;\n\t\t\tconst projectID = this.props.project.key;\n\t\t\tconst users = await getUserInProject(token, projectID);\n\n\t\t\tthis.setState({ users: users });\n\t\t}\n\t}\n\t\n    showDrawer = () => {\n      \tthis.setState({ visible: true });\n    };\n  \n    onClose = () => {\n      \tthis.setState({ visible: false });\n    };\n  \n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n\t};\n\n\tasync handleSubmit() {\n\t\tif(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionada!',\n\t\t\t\tdescription: 'Por Favor, Adicione Pelo Menos Uma Pessoa Para Remover do Projeto! ' + \n\t\t\t\t\t\t\t 'Ou Cancele Esta Ação de Retirar Usuário do Projeto!',\n\t\t\t});\n\t\t} else {\n\t\t\tconst token = this.state.token;\n\t\t\tconst users = [];\n\t\t\tconst idProject = this.props.project.key;\n\t\t\tconst sector = this.props.sector.id;\n\t\t\tlet status = null;\n\n\t\t\tfor(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n\t\t\t}\n\n\t\t\tconst project = {\n\t\t\t\tprojectID: idProject,\n\t\t\t\tsector: sector,\n\t\t\t\ttitle: this.props.project.title,\n\t\t\t\tstatus: this.props.project.status,\n\t\t\t\tusers\n\t\t\t};\n\n\t\t\tstatus = await removeUsersProject(token, project);\n\n\t\t\tif(status === true) {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Removidos!',\n\t\t\t\t\tdescription: 'Os Usuários Foram Removidos do Projeto Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Por Favor, Atualize a Página!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t} else {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Remover Membros!',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Remover ' +  \n\t\t\t\t\t\t\t\t 'os Usuários do Projeto!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t}\n\t\t}\n\t}\n\n    render() {\n        const { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n        return (\n            <div>\n                <Button onClick = { this.showDrawer } danger> \n                    <UsergroupDeleteOutlined /> <b> Remover Membros </b> \n                </Button>\n                <Drawer\n\t\t\t\t\ttitle = { `Remover Usuários do Projeto: ${ this.props.project.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Remover Membros do Projeto\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n\t\t\t\t\t<TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Remover Usuários', 'Não Remover' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Drawer>\n            </div>\n        );\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n\nexport default withRouter(FormRemoveUserProject);","import React, { Component } from 'react';\nimport { Drawer, Button, List, Avatar } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons'; \n\nimport { getUserToken, getUserInProject } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { sort } from '../../services/sortService';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nclass ProjectMembers extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            users: [],\n            visible: false\n        }\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const projectID = this.props.project.key;\n        const users = await getUserInProject(token, projectID);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n    }\n    \n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    render() {\n        let data_users = { users: [] };\n\n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data_users.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image\n            });\n        }\n\n        data_users.users.sort(sort('name'));\n        const FormProjectMembers = () => {\n            return (\n                <Drawer\n                    title = { `Membros no Projeto: ${ this.props.project.title }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { null }\n                >\n                    <List\n                        dataSource = { data_users.users } pagination = {{ defaultPageSize: 4 }} \n                        bordered className = 'userMembers'\n                        renderItem = { user => (\n                            <List.Item key = { user.key } >\n                                <List.Item.Meta\n                                    avatar = { <Avatar src = { user.image } /> }\n                                    title = { `Nome: ${ user.name }` } \n                                    description = {\n                                        <div>\n                                            <b> Email: </b> { user.email } <br/>\n                                            <b> Ramal: </b> { user.ramal } <br/>\n                                        </div>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    />\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <Button type = 'default' onClick = { this.showDrawer }>\n                    <EyeOutlined /> <b> Membros no Projeto </b>\n                </Button>\n                <FormProjectMembers/>\n            </div>\n        )\n    }\n}\n\nexport default ProjectMembers;","import React, { Component } from 'react';\nimport { Button, Table, Tag, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { EyeOutlined } from '@ant-design/icons';\n\nimport FormProjectEdit from '../forms/project/FormProjectEdit';\nimport FormAddUsersProject from '../forms/project/FormAddUsersProject';\nimport FormRemoveUserProject from '../forms/project/FormRemoveUsersProject';\nimport ProjectMembers from '../project/ProjectMembers';\n\nimport { getSector } from '../../store/sector';\nimport { getUserToken, getUserId, getCurrentUser } from '../../store/user';\nimport { getProjects } from '../../store/project';\nimport { sort } from '../../services/sortService';\n\nclass SectorDetail extends Component {\n    \n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            sector: {},\n            projects: [],\n            currentUser: {}\n        }\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const slug = this.props.match.params.slug;\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        const sector = await getSector(token, slug);\n        const projects = await getProjects(token, sector.id);\n\n        this.setState({ \n            sector: sector,\n            projects: projects,\n            currentUser: user \n        });\n    }\n\n    render() {\n        const { currentUser } = this.state;\n        let data = { projects: [] };\n\n        for(let aux = 0; aux < this.state.projects.length; aux ++) {\n            data.projects.push({\n                key: this.state.projects[aux].id,\n                title: this.state.projects[aux].title,\n                slug: this.state.projects[aux].slug,\n                status: this.state.projects[aux].status,\n                tags: [ this.state.projects[aux].status ],\n            });\n        }\n\n        data.projects.sort(sort('title'));\n        return (\n            <Table \n                dataSource = { data.projects } bordered className = 'userList'\n                pagination = {{ defaultPageSize: 4 }}\n                columns = {\n                    [{\n                        title: 'Título da Reunião',\n                        dataIndex: 'title',\n                        key: 'title',\n                    },\n                    {\n                        title: 'Status',\n                        key: 'tags',\n                        dataIndex: 'tags',\n                        render: tags => (\n                            <span>\n                                {\n                                tags.map(tag => {\n                                    let color = null;\n\n                                    if (tag === 'Pendente') {\n                                        color = 'orange';\n                                    } else if(tag === 'Cancelada') {\n                                        color = 'red'\n                                    } \n                                    else {\n                                        color = 'green';\n                                    }\n\n                                    return (\n                                        <Tag color = { color } key = { tag } >\n                                            <b> { tag.toUpperCase() } </b> \n                                        </Tag>\n                                    );\n                                })\n                            }\n                            </span>\n                        ),\n                    },\n                    {\n                        title: 'Opções',\n                        key: 'action',\n                        render: (record) => (\n                            <span>\n                                {\n                                    currentUser.is_administrator === false ? (\n                                        <Space \n                                            size = 'middle'\n                                            style = {{ marginLeft: 180, marginRight: -30 }}\n                                        >\n                                            <ProjectMembers project = { record } />\n                                            <Button type = 'primary'> \n                                                <Link to = { `/projeto/${ record.slug }/`}>\n                                                    <EyeOutlined /> <b> Ver Reuniões </b>\n                                                </Link>\n                                            </Button>\n                                        </Space>\n                                    ) : (\n                                        <span>\n                                            {\n                                                record.status === 'Cancelada' ? (\n                                                    null \n                                                ) : (\n                                                    <Space size = 'middle'>\n                                                        <FormAddUsersProject \n                                                            project = { record }\n                                                            sector = { this.state.sector } \n                                                        />\n                                                        <FormRemoveUserProject \n                                                            project = { record }\n                                                            sector = { this.state.sector } \n                                                        />\n                                                        <ProjectMembers  project = { record } />\n                                                        <Button type = 'primary'> \n                                                            <Link to = { `/projeto/${ record.slug }/`}>\n                                                                <EyeOutlined /> <b> Ir a Reuniões </b>\n                                                            </Link>\n                                                        </Button>\n                                                        <FormProjectEdit \n                                                            project = { record } \n                                                            sector = { this.state.sector }\n                                                        />\n                                                    </Space>\n                                                )\n                                            }\n                                        </span>\n                                    )\n                                }\n                            </span>\n                        ),\n                    },\n                ]}\n            />\n        );\n    }\n}\n\nexport default SectorDetail;","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, notification } from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\n\nimport { getUserToken } from '../../../store/user';\nimport { editSector, getSectors } from '../../../store/sector';\n\nclass FormSectorEdit extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            sectors: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ \n            token: token,\n            sectors: sectors \n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    async handleSubmit(values) {\n        const sectors = this.state.sectors;\n\n        let found = sectors.find(sector => {\n            if(sector.name === values.name) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined || this.props.sector.name === values.name) {\n            const token = this.state.token;\n            const initials = values.initials;\n            const name = values.name;\n            const sector = {\n                sectorID: this.props.sector.key,\n                name: name,\n                initials: initials\n            };\n            let status = null;\n\n            status = await editSector(token, sector);\n    \n            if(status === true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Setor Editado',\n                    description: 'Setor Editado Com Sucesso!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Por Favor, Atualize a Página!',\n                });\n                this.props.history.push('/lista_de_setores');\n            } else {\n                notification.open({\n                    type: 'error',\n                    message: 'Ação Cancelada',\n                    description: 'Erro Inesperado.. Tente Novamente!',\n                });\n                this.props.history.push('/lista_de_setores');\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Setor Não Atualizado',\n                description: 'Já Existe um Setor Com Este Nome! Por Favor, Cadastre Outro!',\n            });\n            this.props.history.push('/lista_de_setores');\n        }\n    }\n\n    render() {\n        const FormSectorEdit = () => {\n            const [form] = Form.useForm();\n            return (\n                <Drawer\n                    title = { `Editar Setor: ${ this.props.sector.name }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }} >\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form layout = 'vertical' hideRequiredMark>\n                        <h1> Informações Cadastradas </h1>\n                        <Row gutter = { 6 }>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Nome'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.sector.name }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 6 }>\n                            <Col span = { 4 }>\n                                <Form.Item label = 'Iniciais'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.sector.initials } \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 6 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'name' label = 'Nome'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Nome do Setor',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Setor'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        \n                        <Row gutter = { 6 }>\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'initials' label = 'Iniciais do Setor'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira as Iniciais',\n                                    }]}\n                                >\n                                    <Input maxLength = { 8 } placeholder = 'Iniciais' />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <Button type = 'default' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined/> Editar \n                </Button>\n                <FormSectorEdit />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(FormSectorEdit);","import React, { Component } from 'react';\nimport { Modal, Button, notification } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport { getUserToken } from '../../../store/user';\nimport { deleteSector } from '../../../store/sector';\n\nconst { confirm } = Modal;\n\nclass SectorDelete extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit() {\n        const token = getUserToken();\n        const sectorID = this.props.sector.key;\n        const nameSector = this.props.sector.name;\n\n        confirm ({\n\t\t\ttitle: 'Exclusão de Setor',\n\t\t\tcontent: `Tem Certeza Que Deseja Excluir o Setor: ${ nameSector } ?`,\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n\t\t\n\t\t\tonOk() {\n                deleteSector(token, sectorID);\n                notification.open({ \n                    type: 'success',\n                    message: 'Setor Excluído',\n                    description: 'Setor Excluído Com Sucesso!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Por Favor, Atualize a Página!',\n                });\n\t\t\t},\n\t\t\tonCancel() {\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Cancelada',\n                    description: 'Exclusão de Setor Cancelada Com Sucesso!',\n                });\n\t\t\t},\n\t\t});\n    }\n\n    render() {\n        return (\n            <Button type = 'primary' onClick = { this.handleSubmit } danger>\n                <DeleteOutlined /> <b> Excluir </b> \n            </Button>\n        );\n    }\n}\n\nexport default SectorDelete;","import React, { Component } from 'react';\nimport { Drawer, Button, List, Avatar } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nimport { getUserToken, getUsersInSector } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { sort } from '../../services/sortService';\n\nclass SectorMembers extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            users: []\n        }\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const users = await getUsersInSector(token, this.props.sector.key);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    render() {\n        let data = { users: [] };\n        \n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image\n            });\n        }\n\n        data.users.sort(sort('name'));\n        const FormSectorMembers = () => {\n            return (\n                <Drawer\n                    title = { `Membros do Setor: ${ this.props.sector.name }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { null }\n                >\n                    <List\n                        dataSource = { data.users } pagination = {{ defaultPageSize: 4 }} \n                        bordered className = 'userMembers'\n                        renderItem = { user => (\n                            <List.Item key = { user.key } >\n                                <List.Item.Meta\n                                    avatar = { <Avatar src = { user.image } /> }\n                                    title = { `Nome: ${ user.name }` } \n                                    description = {\n                                        <div>\n                                            <b> Email: </b> { user.email } <br/>\n                                            <b> Ramal: </b> { user.ramal } <br/>\n                                        </div>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    />\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <Button type = 'primary' onClick = { this.showDrawer }> \n                    <EyeOutlined/> <b> Ver Membros </b> \n                </Button>\n                <FormSectorMembers />\n            </div>\n        );\n    }\n}\n\nexport default SectorMembers;","import React, { Component } from 'react';\nimport { List, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nimport FormSectorEdit from '../forms/sector/FormSectorEdit';\n\nimport SectorDelete from '../forms/sector/FormSectorDelete';\nimport SectorMembers from './SectorMembers';\n\nimport { getSectors } from '../../store/sector';\nimport { getUserToken, getUserId, getCurrentUser } from '../../store/user';\nimport { typeUser } from '../../services/userService';\nimport { sort } from '../../services/sortService';\n\nclass SectorList extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n            sectors: []\n\t\t}\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        const sectors = await getSectors(token);\n\n        this.setState({\n            currentUser: user, \n            sectors: sectors\n        });\n\t}\n\n    render() {\n        const { currentUser } = this.state;\n        const type = typeUser(currentUser.is_administrator);\n        let data = { sectors: [] };\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n                initials: this.state.sectors[aux].initials,\n                slug: this.state.sectors[aux].slug,\n            });\n        }\n\n        data.sectors.sort(sort('name'));\n        return (\n            <div>\n                {\n                    type !== 'Administrador' ? (\n                        <List\n                            dataSource = { data.sectors } pagination = {{ defaultPageSize: 4 }} \n                            bordered className = 'userList'\n                            renderItem = { sector => (\n                                <List.Item\n                                    key = { sector.key } \n                                    actions = {[\n                                        <Link to = { `/setor/${ sector.slug }` }>\n                                            <Button type = 'primary'> \n                                                <EyeOutlined /> <b> Ver Projetos </b> \n                                            </Button>\n                                        </Link>,\n                                        <SectorMembers sector = { sector } />\n                                    ]}\n                                >\n                                <List.Item.Meta \n                                    title = { sector.initials } description = { sector.name } \n                                />\n                                    <SectorMembers sector = { sector } />\n                                </List.Item>\n                            )}\n                        /> \n                    ) : (\n                        <List\n                            dataSource = { data.sectors } pagination = {{ defaultPageSize: 4 }} \n                            bordered className = 'userList'\n                            renderItem = { sector => (\n                                <List.Item\n                                    key = { sector.key } \n                                    actions = {[\n                                        <Link to = { `/setor/${ sector.slug }` }>\n                                            <Button type = 'primary'> \n                                                <EyeOutlined /> <b> Ir a Projetos </b> \n                                            </Button>\n                                        </Link>, \n                                        <SectorMembers sector = { sector } />,\n                                        <FormSectorEdit sector = { sector } />,\n                                        <SectorDelete sector = { sector } />,\n                                    ]}\n                                >\n                                    <List.Item.Meta \n                                        title = { sector.initials } description = { sector.name } />\n                                </List.Item>\n                            )}\n                        /> \n                    )\n                }\n          \t</div>\n        );\n    }\n}\n\nexport default SectorList;","import React, { Component } from 'react';\nimport { Drawer, Button, List, Avatar } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\n\nimport { getUserToken, getUsersInMeeting } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { sort } from '../../services/sortService';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nclass MeetingMembers extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            users: [],\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const projectID = this.props.meeting.project;\n        const meetingID = this.props.meeting.key;\n        const users = await getUsersInMeeting(token, meetingID, projectID);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    render() {\n        let data_users = { users: [] };\n\n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data_users.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image\n            });\n        }\n\n        data_users.users.sort(sort('name'));\n        const FormMeetingMembers = () => {\n            return (\n                <Drawer\n                    title = { `Membros na Reunião: ${ this.props.meeting.title }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { null }\n                >\n                    <List\n                        dataSource = { data_users.users } pagination = {{ defaultPageSize: 4 }} \n                        bordered className = 'userMembers'\n                        renderItem = { user => (\n                            <List.Item key = { user.key } >\n                                <List.Item.Meta\n                                    avatar = { <Avatar src = { user.image } /> }\n                                    title = { `Nome: ${ user.name }` } \n                                    description = {\n                                        <div>\n                                            <b> Email: </b> { user.email } <br/>\n                                            <b> Ramal: </b> { user.ramal } <br/>\n                                        </div>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    />\n                </Drawer>\n            );\n        };\n        return (\n            <span>\n                <Button type = 'default' onClick = { this.showDrawer }>\n                    <EyeOutlined /> <b> Membros da Reunião </b> \n                </Button>\n                <FormMeetingMembers />\n            </span>\n        );\n    }\n}\n\nexport default MeetingMembers;","import axios from 'axios';\n\nimport { BASE_URL_MEETING } from '../consts';\n\nexport const getAllMeetings = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_MEETING }`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getMeetings = async (token, slugProject) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_MEETING }meetings_in_project/${ slugProject }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getMeeting = async (token, meetingID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_MEETING }detail/${ meetingID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.post(`${ BASE_URL_MEETING }create/`, meeting);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editMeeting = async (token, meeting) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.put(`${ BASE_URL_MEETING }update/${ meeting.meetingID }/`, meeting);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n}\n\nexport const addUsersMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_MEETING }add_users_meeting/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const removeUsersMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_MEETING }remove_users_meeting/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const addItemsMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_MEETING }add_items/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const finishMeeting = (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\taxios.put(`${ BASE_URL_MEETING }finish_meeting/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};","import React, { Component } from 'react'\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { UsergroupAddOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport difference from 'lodash/difference';\n\nimport { getUsersInProjectAndNotInMeeting, getUserToken } from '../../../store/user';\nimport { addUsersMeeting } from '../../../store/meeting';\nimport { sort } from '../../../services/sortService';\n\nclass FormAddMembersMeeting extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n\t\tconst meetingID = this.props.meeting.key;\n\t\tconst projectID = this.props.meeting.project;\n\t\tconst users = await getUsersInProjectAndNotInMeeting(token, meetingID, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n            this.setState({ visible: false });\n    };\n\n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n    };\n\n    async handleSubmit() {\n        if(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionada!',\n                description: 'Por Favor, Adicione Pelo Menos Uma Pessoa Para Adicionar a Reunião!',\n\t\t\t});\n\t\t} else {\n            const token = this.state.token;\n            const users = [];\n            const meetingID = this.props.meeting.key;\n            const meeting_leader = this.props.meeting.userID;\n            const projectID = this.props.meeting.project;\n            let status = null;\n\n            for(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n            }\n            \n            const meeting = {\n                meetingID: meetingID,\n                status: this.props.meeting.status,\n                userID: meeting_leader,\n                projectID: projectID,\n                subject_matter: this.props.meeting.subject_matter,\n                title: this.props.meeting.title,\n                initial_date: this.props.meeting.initial_date,\n                initial_hour: this.props.meeting.initial_hour,\n                users\n            };\n\n            status = await addUsersMeeting(token, meeting)\n\n            if(status === true) {\n                notification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Adicionados!',\n\t\t\t\t\tdescription: 'Os Usuários Foram Adicionados a Reunião Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida',\n\t\t\t\t\tdescription: 'Por Favor, Atualize a Página!',\n\t\t\t\t});\n            } else {\n                notification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Adicionar Membros',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Adicionar ' +  \n\t\t\t\t\t\t\t\t 'os Usuários a Reunião!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n            }\n\t\t}\n    }\n\n    render() {\n        const { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n        return (\n            <span>\n                <Button type = 'primary' onClick = { this.showDrawer } ghost>\n                    <UsergroupAddOutlined /> <b> Adicionar Membros </b>\n                </Button>\n                <Drawer\n\t\t\t\t    title = { `Adicionar Usuários a Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Adicionar Membros a Reunião\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n\t\t\t\t\t<TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Adicionar Usuários', 'Não Adicionar' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Drawer>\n            </span>\n        );\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n\nexport default FormAddMembersMeeting;","import React, { Component } from 'react';\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { UsergroupDeleteOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport difference from 'lodash/difference';\n\nimport { getUserToken, getUsersInMeeting } from '../../../store/user';\nimport { removeUsersMeeting } from '../../../store/meeting';\nimport { sort } from '../../../services/sortService';\n\nclass FormRemoveMembersMeeting extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n        }\n        \n        this.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const projectID = this.props.meeting.project;\n        const meetingID = this.props.meeting.key;\n\t\tconst users = await getUsersInMeeting(token, meetingID, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n    };\n\n    async handleSubmit(values) {\n        if(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionada!',\n\t\t\t\tdescription: 'Por Favor, Adicione Pelo Menos Uma Pessoa Para Remover da Reunião! ' + \n\t\t\t\t\t\t\t 'Ou Cancele Esta Ação de Retirar Usuário do Reunião!',\n\t\t\t});\n\t\t} else {\n            const token = this.state.token;\n\t\t\tconst users = [];\n\t\t\tconst projectID = this.props.meeting.project;\n            const meetingID = this.props.meeting.key;\n            const initial_date = this.props.meeting.initial_date;\n            const initial_hour = this.props.meeting.initial_hour;\n            const subject_matter = this.props.meeting.subject_matter;\n            const userID = this.props.meeting.userID;\n            const title = this.props.meeting.title;\n\t\t\tlet status = null;\n\n\t\t\tfor(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n            }\n            \n            const meeting = {\n                meetingID: meetingID,\n                status: 'Pendente',\n                userID: userID,\n                projectID: projectID,\n                title: title,\n                subject_matter: subject_matter,\n                initial_date: initial_date,\n                initial_hour: initial_hour,\n                users\n            };\n\n\t\t\tstatus = await removeUsersMeeting(token, meeting);\n\n\t\t\tif(status === true) {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Removidos!',\n\t\t\t\t\tdescription: 'Os Usuários Foram Removidos da Reunião Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Por Favor, Atualize a Página!',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Remover Membros!',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Remover ' +  \n\t\t\t\t\t\t\t\t 'os Usuários da Reunião!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n\t\t\t}\n        }\n    }\n\n    render() {\n        const { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n        return (\n            <span>\n                <Button onClick = { this.showDrawer } danger> \n                    <UsergroupDeleteOutlined /> <b> Remover Membros </b> \n                </Button>\n                <Drawer\n\t\t\t\t\ttitle = { `Remover Usuários da Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Remover Membros da Reunião\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n                    <TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Remover Usuários', 'Não Remover' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n                </Drawer>\n            </span>\n        );\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n\nexport default FormRemoveMembersMeeting;","import React, { Component } from 'react';\nimport { \n    Drawer, Form, Button, Col, Row, Input, DatePicker, TimePicker, \n    Select, Modal, notification \n} from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport locale from 'antd/es/date-picker/locale/pt_BR';\nimport moment from 'moment';\n\nimport { getUserToken } from '../../../store/user';\nimport { getAllMeetings, editMeeting } from '../../../store/meeting';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { confirm } = Modal;\n\nclass FormEditMeeting extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            meetings: []\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const meetings = await getAllMeetings(token);\n\n        this.setState({ \n            token: token,\n            meetings: meetings \n        });\n    }\n\n    async handleSubmit(values) {\n\n        const meetings = this.state.meetings;\n\n        let found = meetings.find(meeting => {\n            if(meeting.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n        \n        if(found === 'undefined' || found === undefined \n        || values.title === '' || values.title === undefined) {\n            const meetingID = this.props.meeting.key;\n            const token = this.state.token;\n            const userID = this.props.meeting.userID;\n            const projectID = this.props.meeting.project;\n            let title = null;\n            let subject_matter = null;\n            let initial_date = null;\n            let initial_hour = null;\n            let statusMeeting = null;\n\n            if(values.title === '' || values.title === undefined) {\n                title = this.props.meeting.title;\n            } else {\n                title = values.title;\n            }\n\n            if(values.subject_matter === '' || values.subject_matter === undefined) {\n                subject_matter = this.props.meeting.subject_matter;\n            } else {\n                subject_matter = values.subject_matter;\n            }\n\n            if(values.initial_date === '' || values.initial_date === undefined) {\n                initial_date = this.props.meeting.initial_date;\n            } else {\n                initial_date = values['initial_date'].format('DD/MM/YYYY');\n            }\n\n            if(values.initial_hour === '' || values.initial_hour === undefined) {\n                initial_hour = this.props.meeting.initial_hour;\n            } else {\n                initial_hour = values['initial_hour'].format('HH:mm:ss');\n            }\n\n            if(values.status === undefined || values.status === 'pending' \n            || values.status === 'empty') {\n\n                const meeting = {\n                    meetingID: meetingID,\n                    status: 'Pendente',\n                    userID: userID,\n                    projectID: projectID,\n                    title: title,\n                    subject_matter: subject_matter,\n                    initial_date: initial_date,\n                    initial_hour: initial_hour\n                };\n\n                statusMeeting = await editMeeting(token, meeting);\n\n                if(statusMeeting !== true) {\n                    notification.open({ \n                        type: 'success',\n                        message: 'Reunião Atualizado!',\n                        description: 'A Reunião Foi Atualizada Com Sucesso!.',\n                    });\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Requerida!',\n                        description: 'Por Favor, Atualize a Página.',\n                    });\n                } else {\n                    notification.open({ \n                        type: 'error',\n                        message: 'Erro em Ação!',\n                        description: 'Erro ao Atualizar a Reunião, Tente Novamente!.',\n                    });\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Requerida!',\n                        description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n                    });\n                }\n            } else {\n                confirm ({\n                    title: 'Cancelamento de Reunião',\n                    content: 'Tem Certeza Que Deseja Cancelar Esta Reunião? ' + \n                    'Está Ação Não Poderá Ser Desfeita!',\n                    okText: 'Sim',\n                    okType: 'danger',\n                    cancelText: 'Não',\n                \n                    onOk() {\n                        const meeting = {\n                            meetingID: meetingID,\n                            status: 'Cancelada',\n                            userID: userID,\n                            projectID: projectID,\n                            title: title,\n                            subject_matter: subject_matter,\n                            initial_date: initial_date,\n                            initial_hour: initial_hour\n                        };\n\n                        editMeeting(token, meeting);\n                        \n                        Modal.success({\n                            title: 'Ação Concluída!',\n                            content: 'Reunião Cancelada Com Sucesso!',\n                        });\n                        notification.open({\n                            type: 'info',\n                            message: 'Ação Requerida',\n                            description: 'Por Favor, Atualize a Página.',\n                        });\n                    },\n                    onCancel() {\n                        notification.open({\n                            type: 'success',\n                            message: 'Ação Cancelada',\n                            description: 'Cancelamento de Reunião Cancelada Com Sucesso!',\n                        });\n                    },\n                });\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Reunião Não Atualizada',\n                description: 'Já Existe Uma Reunião Com Este Nome/Título Neste ou em Outro Setor. ' +\n                            'Utilize Outro Nome!'\n            });\n        }\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n    \n    render() {\n        const FormMeetingEdit = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Editar a Reunião: ${ this.props.meeting.title }` } \n                    onClose = { this.onClose } width = { 650 }\n                    visible = { this.state.visible } \n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }} >\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form layout = 'vertical' hideRequiredMark>\n                        <h1> Informações Cadastradas </h1>\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item label = 'Título da Reunião'>\n                                    <Input \n                                        disabled = { true } \n                                        placeholder = { this.props.meeting.title } \n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 6 }>\n                                <Form.Item label = 'Status da Reunião'>\n                                    <Input \n                                        disabled = { true } \n                                        placeholder = { this.props.meeting.status }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Ementa da Reunião'>\n                                    <TextArea \n                                        rows = { 4 } disabled = { true } \n                                        placeholder = {`${ this.props.meeting.subject_matter }`}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Líder da Reunião'>\n                                    <Input \n                                        disabled = { true }\n                                        placeholder = { this.props.meeting.meeting_leader }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item label = 'Data da Reunião'>\n                                    <Input \n                                        disabled = { true }\n                                        placeholder = { this.props.meeting.initial_date }\n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'initial_hour' label = 'Hora de Início'\n                                >\n                                    <Input\n                                        disabled = { true }\n                                        placeholder = { this.props.meeting.initial_hour }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <h1> Informações a Serem Alteradas </h1>\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'title' label = 'Título da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <Input \n                                        maxLength = { 40 } \n                                        placeholder = 'Insira o Título da Reunião'\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <Select>\n                                        <Option value = 'empty'> </Option>\n                                        <Option value = 'pending'> Pendente </Option>\n                                        <Option value = 'canceled'> Cancelar Reunião </Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'subject_matter' label = 'Ementa da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <TextArea rows = { 4 } maxLength = { 500 }/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'initial_date' label = 'Data da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <DatePicker\n                                        locale = { locale }\n                                        initialValues = { moment('09/07/2020', 'DD/MM/YYYY')} \n                                        format = { dateFormatList } \n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'initial_hour' label = 'Hora de Início'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <TimePicker \n                                        use24Hours\n                                        initialValues = { moment('00:00:00', 'HH:mm:ss')}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <Button type = 'default' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined/> Editar \n                </Button>\n                <FormMeetingEdit />\n            </div>\n        );\n    }\n}\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n\nexport default FormEditMeeting;","import React from 'react';\nimport { Button } from 'antd';\n\nconst ButtonTimerMeeting = (props) => {\n  \treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\t(props.status === 0) ? (\n\t\t\t\t\t<Button type = 'primary' ghost onClick = { props.start }>\n\t\t\t\t\t\tComeçar Reunião\n\t\t\t\t\t</Button>\n\t\t\t\t) : ''\n\t\t\t}\n\n\t\t\t{\n\t\t\t\t(props.status === 1) ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<Button type = 'primary' ghost onClick = { props.stop }>\n\t\t\t\t\t\t\tParar Contador\n\t\t\t\t\t\t</Button> &nbsp;&nbsp;\n\t\t\t\t\t\t<Button danger onClick = { props.reset }>\n\t\t\t\t\t\t\tReiniciar Contador\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t&nbsp;&nbsp; <Button onClick = { props.finish }> Finalizar Reunião </Button>\n\t\t\t\t\t</span>\n\t\t\t\t) : ''\n\t\t\t}\n\n\t\t\t{\n\t\t\t\t(props.status === 2) ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<Button type = 'primary' ghost onClick = { props.resume }>\n\t\t\t\t\t\t\tContinuar\n\t\t\t\t\t\t</Button> &nbsp;&nbsp;\n\t\t\t\t\t\t<Button danger onClick = { props.reset }>\n\t\t\t\t\t\t\tReiniciar Contador\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t&nbsp;&nbsp; <Button onClick = { props.finish }> Finalizar Reunião </Button>\n\t\t\t\t\t</span>\n\t\t\t\t) : ''\n\t\t\t}\n\t\t</div>\n  \t);\n}\n\nexport default ButtonTimerMeeting;","import React, { useState } from 'react';\n\nimport { finishMeeting } from '../../../store/meeting';\n\nimport BtnComponent from './ButtonTimerMeeting';\n\nfunction Timer(props) {\n\n    const [ time, setTime ] = useState({ ms: 0, seconds: 0, minutes: 0, hour: 0 });\n    const [interv, setInterv] = useState();\n\tconst [status, setStatus] = useState(0);\n\t\n\tlet updatedMs = time.ms;\n\tlet updatedSeconds = time.seconds; \n\tlet updatedMinutes = time.minutes; \n\tlet updatedHour = time.hour;\n\n    const start = () => {\n    \trun();\n        setStatus(1);\n        setInterv(setInterval(run, 10));\n\t};\n\n\tconst run = () => {\n\n        if(updatedMinutes === 60) {\n          \tupdatedHour++;\n          \tupdatedMinutes = 0;\n\t\t}\n\t\t\n        if(updatedSeconds === 60) {\n          \tupdatedMinutes++;\n          \tupdatedSeconds = 0;\n\t\t}\n\t\t\n        if(updatedMs === 100) {\n          \tupdatedSeconds++;\n          \tupdatedMs = 0;\n\t\t}\n\t\t\n        updatedMs++;\n\t\t\n\t\treturn setTime({\n\t\t\tms:updatedMs, \n\t\t\tseconds:updatedSeconds, \n\t\t\tminutes:updatedMinutes, \n\t\t\thour:updatedHour\n\t\t});\n\t};\n    \n\tconst stop = () => {\n        clearInterval(interv);\n        setStatus(2);\n\t};\n    \n\tconst reset = () => {\n        clearInterval(interv);\n        setStatus(0);\n        setTime({ ms: 0, seconds: 0, minutes: 0, hour: 0 })\n\t};\n\n\tconst resume = () => start();\n\n\tconst finish = () => {\n\t\tstop();\n\t\tconst token = props.token;\n\t\tconst duration_time = document.getElementById('time').innerText;\n\t\tconst meetingID = props.meeting.meetingID;\n\t\tconst projectID = props.meeting.project;\n\t\tconst userID = props.meeting.userID;\n\t\tconst title = props.meeting.title;\n\t\tconst status = 'Finalizada';\n\t\tconst initial_date = props.meeting.initial_date;\n\t\tconst initial_hour = props.meeting.initial_hour;\n\t\tconst subject_matter = props.meeting.subject_matter;\n\t\tconst real_hour = props.atualHour;\n\t\tconst real_date = props.atualDate;\n\n\t\tconst meeting = {\n\t\t\tmeetingID: meetingID,\n\t\t\tprojectID: projectID,\n\t\t\tuserID: userID,\n\t\t\ttitle: title,\n\t\t\tstatus: status,\n\t\t\tsubject_matter: subject_matter,\n\t\t\tinitial_date: initial_date,\n\t\t\tinitial_hour: initial_hour,\n\t\t\tduration_time: duration_time,\n\t\t\treal_hour: real_hour,\n\t\t\treal_date: real_date\n\t\t};\n\n\t\tfinishMeeting(token, meeting);\n\t\twindow.location.reload(false);\n\t}\n\n    return (\n\t\t<span align = 'center'>\n\t\t\t<h1> Tempo de Reunião </h1>\n\t\t\t<h1 id = 'time'>\n\t\t\t\t{ (time.hour >= 10)? time.hour : '0' + time.hour }:\n\t\t\t\t{ (time.minutes >= 10)? time.minutes : '0' + time.minutes }:\n\t\t\t\t{ (time.seconds >= 10)? time.seconds : '0' + time.seconds }\n\t\t\t</h1>\n\t\t\t<BtnComponent \n\t\t\t\tstatus = { status } resume = { resume } finish = { finish }\n\t\t\t\treset = { reset } stop = { stop } start = { start } \n\t\t\t/>\n\t\t</span>\n    );\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport { Button, Drawer, Descriptions, Badge } from 'antd';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nimport Timer from './timer/Timer';\n\nclass MeetingDetail extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tvisible: false,\n\t\t\tatualHour: null,\n\t\t\tatualDate: null,\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.checkTime = this.checkTime.bind(this);\n\t}\n\n\tcheckTime(value) {\n\t\tif (value < 10) {\n\t\t\tvalue = '0' + value;\n\t\t}\n\t\treturn value;\n\t}\n\n\tshowDrawer = () => {\n\t\tlet today = new Date();\n\t\tlet hour  = today.getHours();\n\t\tlet minutes = today.getMinutes();\n\t\tlet seconds = today.getSeconds();\n\t\tlet day = today.getDate();\n\t\tlet month = today.getMonth();\n\t\tlet year = today.getUTCFullYear();\n\n\t\tminutes = this.checkTime(minutes);\n\t\tseconds = this.checkTime(seconds);\n\n\t\tthis.setState({ \n\t\t\tvisible: true,\n\t\t\tatualHour: hour + ':' + minutes + ':' + seconds,\n\t\t\tatualDate: day + '/' + month + '/' + year\n\t\t});\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\t\n\trender() {\n\t\tconst atualDate = this.state.atualDate;\n\t\tconst atualHour = this.state.atualHour \n\t\treturn (\n\t\t\t<span>\n\t\t\t\t<Button className = 'save' onClick = { this.showDrawer }>\n                    <CaretRightOutlined/> <b> Começar Reunião </b>\n                </Button>\n                <Drawer\n                    title = { `Reunião: ${ this.props.meeting.title } ` } closable = { false }\n\t\t\t\t\tonClose = { this.onClose } visible = { this.state.visible } width = { '100%' }\n                >\n\t\t\t\t\t<Timer \n\t\t\t\t\t\ttoken = { this.props.token } atualDate = { atualDate } atualHour = { atualHour } \n\t\t\t\t\t\tmeeting = { this.props.meeting } slug = { this.props.slug }\n\t\t\t\t\t/>  \n\t\t\t\t\t<br />\n\t\t\t\t\t<Descriptions \n\t\t\t\t\t\ttitle = { `Informações da Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\t\tbordered column = {{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Título </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.title }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Líder da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.meeting_leader }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Status da Reunião </b> }>\n\t\t\t\t\t\t\t<Badge status = 'processing' text = { this.props.meeting.status } />\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário Programado da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_hour }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário de Inicio Real da Reunião </b> } span = { 2 }>\n\t\t\t\t\t\t\t{ this.state.atualHour }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Programada da Reunião </b>}>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_date }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Real da Reunião </b> } span = { 2 }>\n\t\t\t\t\t\t\t{ this.state.atualDate }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Ementa </b> } span = { 3 }>\n\t\t\t\t\t\t\t{ this.props.meeting.subject_matter }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Usuários na Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.users.map(user => \n\t\t\t\t\t\t\t\t\t\t<li key = { user.key }> { user.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Pautas da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.agendas.map(agenda => \n\t\t\t\t\t\t\t\t\t\t<li key = { agenda.key }> { agenda.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Regras da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.rules.map(rules => \n\t\t\t\t\t\t\t\t\t\t<li key = { rules.key }> { rules.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t</Descriptions>\n                </Drawer>\n\t\t\t</span>\n\t\t);\n\t}\t\n}\n\nexport default MeetingDetail;","import React, { Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nclass MeetingAgenda extends Component {\n\n    render() {\n        return (\n            <Form form = { this.props.form }>\n                <h2 align = 'center'> Pautas da Reunião </h2>\n                <Form.List name = 'agendas'>\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                { fields.map((field, index) => (\n                                    <Form.Item\n                                        { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel) }\n                                        label = { index === 0 ? 'Tópicos' : ''}\n                                        required = { true }\n                                        key = { field.key }\n                                        className = 'formList'\n                                    >\n                                        <Form.Item\n                                            { ...field }\n                                            validateTrigger = {['onChange', 'onBlur']}\n                                            rules = {[{\n                                                required: true,\n                                                whitespace: true,\n                                                message: 'Por Favor, Adicione Pelo Menos um Tópico ' + \n                                                        'a Reunião, ou Exclua Este Campo!' \n                                            }]}\n                                            noStyle\n                                        >\n                                            <Input \n                                                placeholder = 'Tópico da Pauta' \n                                                style = {{ width: '60%' }} \n                                                maxLength = { 40 } \n                                                required = { true }\n                                            />\n                                        </Form.Item>\n                                        { fields.length > 1 ? (\n                                            <MinusCircleOutlined\n                                                className = 'dynamic-delete-button'\n                                                style = {{ margin: '0 8px' }}\n                                                onClick = {() => {\n                                                    remove(field.name);\n                                                }}\n                                            />\n                                        ) : null }\n                                    </Form.Item>\n                                ))}\n                                <Form.Item>\n                                    <Button\n                                        type = 'dashed' onClick = {() => { add() }}\n                                        style = {{ width: '60%', marginLeft: 120 }}\n                                    >\n                                        <PlusOutlined /> Adicionar Tópicos\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n            </Form>\n        );\n    }\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n    },\n};\nconst formItemLayoutWithOutLabel = {\n    wrapperCol: {\n        xs: { span: 20, offset: 0 },\n        sm: { span: 20, offset: 0 },\n    },\n};\n\nexport default MeetingAgenda;","import React, { Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nexport class RulesMeeting extends Component {\n    render() {\n        return (\n            <Form form = { this.props.form }>\n                <h2 align = 'center'> Regras da Reunião </h2>\n                <Form.List name = 'rules'>\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                { fields.map((field, index) => (\n                                    <Form.Item\n                                        { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel) }\n                                        label = { index === 0 ? 'Tópicos' : ''}\n                                        required = { true }\n                                        key = { field.key }\n                                        className = 'formList'\n                                    >\n                                        <Form.Item\n                                            { ...field }\n                                            validateTrigger = {['onChange', 'onBlur']}\n                                            rules = {[{\n                                                required: true,\n                                                whitespace: true,\n                                                message: 'Por Favor, Adicione Pelo Menos um Tópico ' + \n                                                        'a Reunião, ou Exclua Este Campo!' \n                                            }]}\n                                            noStyle\n                                        >\n                                            <Input \n                                                placeholder = 'Tópico da Pauta' \n                                                style = {{ width: '60%' }} \n                                            />\n                                        </Form.Item>\n                                        { fields.length > 1 ? (\n                                            <MinusCircleOutlined\n                                                className = 'dynamic-delete-button'\n                                                style = {{ margin: '0 8px' }}\n                                                onClick = {() => {\n                                                    remove(field.name);\n                                                }}\n                                            />\n                                        ) : null }\n                                    </Form.Item>\n                                ))}\n                                <Form.Item>\n                                    <Button\n                                        type = 'dashed' onClick = {() => { add() }}\n                                        style = {{ width: '60%', marginLeft: 120 }}\n                                    >\n                                        <PlusOutlined /> Adicionar Tópicos\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n            </Form>\n        );\n    }\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n    },\n};\nconst formItemLayoutWithOutLabel = {\n    wrapperCol: {\n        xs: { span: 20, offset: 0 },\n        sm: { span: 20, offset: 0 },\n    },\n};\n\nexport default RulesMeeting;","import React, { Component } from 'react';\nimport { Button, Drawer, Tabs, Form, notification } from 'antd';\nimport { \n    OrderedListOutlined, BookOutlined, AccountBookOutlined, SaveOutlined, StopOutlined \n} from '@ant-design/icons';\n\nimport MeetingAgenda from './MeetingAgenda';\nimport RulesMeeting from './RulesMeeting';\n\nimport { addItemsMeeting } from '../../../../store/meeting';\nimport { getUserToken } from '../../../../store/user';\n\nconst { TabPane } = Tabs;\n\nclass Items extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n    \n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    async handleSubmit(values) {\n        const token = getUserToken();\n        let agendas = [];\n        let rules = [];\n        let status = null;\n\n        if(values.agendas === undefined || values.rules === undefined) {\n            notification.open({ \n                type: 'warning',\n                message: 'Espaços Brancos!',\n                description: 'O Campo de Pauta ou de Regras Estão Vazios! Adicione Pelo Menos ' +\n                             'um Campo Neles!'\n            });\n        } else {\n\n            for(let aux = 0; aux < values.agendas.length; aux ++) {\n                agendas.push({ title: values.agendas[aux] });\n            }\n\n            for(let aux = 0; aux < values.rules.length; aux ++) {\n                rules.push({ title: values.rules[aux] });\n            }\n\n            const meeting = {\n                meetingID: this.props.meeting.key,\n                status: 'Agendada',\n                userID: this.props.meeting.userID,\n                projectID: this.props.meeting.project,\n                title: this.props.meeting.title,\n                initial_date: this.props.meeting.initial_date,\n                initial_hour: this.props.meeting.initial_hour,\n                subject_matter: this.props.meeting.subject_matter,\n                agendas,\n                rules\n            };\n    \n            status = await addItemsMeeting(token, meeting);\n    \n            if(status !== true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Itens Adicionados!',\n                    description: 'Os itens Foram Adicionados a Reunião Com Sucesso!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida!',\n                    description: 'Por Favor, Atualize a Página.',\n                });\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Erro em Ação!',\n                    description: 'Erro ao Adicionar os Itens a Reunião, Tente Novamente!.',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida!',\n                    description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n                });\n            }\n        }\n    }\n\n    render() {\n        const FormItems = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Itens Para Composição da Reunião: ${ this.props.meeting.title }` } \n                    onClose = { this.onClose } width = { '50%' }\n                    visible = { this.state.visible } \n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Itens\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form hideRequiredMark layout = 'vertical'>\n                        <Tabs defaultActiveKey = '1'>\n                            <TabPane\n                                tab = { <span><BookOutlined /> Pautas da Reunião </span> }\n                                key = '1'\n                            >\n                                <MeetingAgenda form = { form } />\n                            </TabPane>\n\n                            <TabPane\n                                tab = { <span><AccountBookOutlined /> Regras da Reunião </span> }   \n                                key = '2'\n                            >\n                                <RulesMeeting form = { form } />\n                            </TabPane>\n                        </Tabs>\n                    </Form>\n                </Drawer>\n            );\n        }\n        return (\n            <span>\n                <Button onClick = { this.showDrawer }>\n                    <OrderedListOutlined /> <b> Items </b>\n                </Button>\n                <FormItems />\n            </span>\n        );\n    }\n}\n\nexport default Items;","import React, { Component } from 'react';\nimport { Button, Drawer, Descriptions, Badge } from 'antd';\nimport { AuditOutlined } from '@ant-design/icons';\nimport { StopOutlined } from '@ant-design/icons';\n\nclass Record extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n\t\tthis.setState({ visible: false });\n    };    \n\n    render() {\n        return (\n            <span>\n                <Button type = 'primary' ghost onClick = { this.showDrawer }>\n                    <b><AuditOutlined /> Visualizar Ata </b>\n                </Button>\n                <Drawer\n\t\t\t\t    title = { `Ata da Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\twidth = { '100%' }\n\t\t\t\t\tclosable = { true }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Fechar\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n                    <Descriptions \n\t\t\t\t\t\tbordered column = {{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Título </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.title }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Líder da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.meeting_leader }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Status da Reunião </b> }>\n\t\t\t\t\t\t\t<Badge status = 'success' text = { this.props.meeting.status } />\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário Programado da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_hour }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário de Inicio Real da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.real_hour }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Duração da Reunião </b> }>\n                            { this.props.meeting.duration_time }\n                        </Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Programada da Reunião </b>}>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_date }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Real da Reunião </b> } span = { 2 }>\n\t\t\t\t\t\t\t{ this.props.meeting.real_date }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Ementa </b> } span = { 3 }>\n\t\t\t\t\t\t\t{ this.props.meeting.subject_matter }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Usuários na Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.users.map(user => \n\t\t\t\t\t\t\t\t\t\t<li key = { user.key }> { user.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Pautas da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.agendas.map(agenda => \n\t\t\t\t\t\t\t\t\t\t<li key = { agenda.key }> { agenda.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Regras da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.rules.map(rules => \n\t\t\t\t\t\t\t\t\t\t<li key = { rules.key }> { rules.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n                    </Descriptions>\n                </Drawer>\n            </span>\n        );\n    }\n}\n\nexport default Record;","import axios from 'axios';\n\nimport { BASE_URL_COMMENTS } from '../consts';\n\nexport const saveComment = (token, comment) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        axios.post(`${ BASE_URL_COMMENTS }create/`, comment);\n\t\treturn true;    \n\t} catch (err) {\n\t\treturn false;\n\t}\n};\n\nexport const getComments = async(token, meetingID) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n    };\n    \n    try {\n        const { data } = await axios.get(`${ BASE_URL_COMMENTS }list_comments_in_meeting/${ meetingID }/`);\n        return data;\n    } catch (err) {\n        return false;\n    }\n};","import React, { Component } from 'react';\nimport { Comment, Avatar, Form, Button, Input } from 'antd';\n\nimport DefaultUser from '../../../../img/default_user.jpg';\nimport { getCurrentUser, getUserToken, getUserId } from '../../../../store/user';\nimport { getImage } from '../../../../store/images';\nimport { saveComment } from '../../../../store/comments';\n\nconst { TextArea } = Input;\n\nclass FormCommentCreate extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            value: null,\n            token: null,\n            currentUser: {},\n            submitting: false\n        }\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        let imageUser = null;\n\n        if(user.image === null) {\n            user.image = DefaultUser;\n        } else {\n            imageUser = await getImage(token, user.image);\n            user.image = imageUser.image;\n        }\n\n        this.setState({ \n            currentUser: user,\n            token: token\n        });\n    }\n\n    handleSubmit = () => {\n        if (!this.state.value) {\n            return;\n        } else {\n            this.setState({ submitting: true });\n\n            const userID = this.state.currentUser.id;\n            const meetingID = this.props.meeting.meetingID;\n            const description = this.state.value;\n            const token = this.state.token;\n\n            const comments = {\n                meeting: meetingID,\n                user: userID,\n                description: description\n            };\n\n            saveComment(token, comments);\n\n            setTimeout(() => {\n                this.setState({ \n                    submitting: false,\n                    value: '' \n                });\n            }, 1000);\n        }\n    };\n    \n    handleChange = e => {\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    render() {\n        const { submitting, value } = this.state;\n        const { currentUser } = this.state;\n        return (\n            <Comment\n                avatar = {\n                    <Avatar\n                        src = { currentUser.image }\n                        alt = { `Imagem de ${ currentUser.name }` }\n                    />\n                }\n                content = {\n                    <Editor\n                        onChange = { this.handleChange }\n                        onSubmit = { this.handleSubmit }\n                        submitting = { submitting }\n                        value = { value }\n                    />\n                }\n            />\n        );\n    }\n}\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n    <span>\n        <Form.Item>\n            <TextArea rows = { 5 } onChange = { onChange } value = { value } style = {{ width: 350}}/>\n        </Form.Item>\n        <Form.Item>\n            <Button \n                htmlType = 'submit' loading = { submitting } onClick = { onSubmit } type = 'primary'\n            >\n                Adicionar Comentário\n            </Button>\n        </Form.Item>\n    </span>\n);\n\nexport default FormCommentCreate;","import React, { Component } from 'react';\nimport { Comment, List } from 'antd';\n\nimport { getComments } from '../../../store/comments';\nimport { getUserToken, getUsersInMeeting } from '../../../store/user';\nimport { getImage } from '../../../store/images';\n\nimport DefaultUser from '../../../img/default_user.jpg';\n\nclass CommentList extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tcomments: [],\n\t\t\ttoken: null\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst token = getUserToken();\n\t\tconst meetingID = this.props.meeting.meetingID;\n\t\tconst projectID = this.props.meeting.project;\n\t\tconst comments = await getComments(token, meetingID);\n\t\tconst users = await getUsersInMeeting(token, meetingID, projectID);\n\t\tlet imageUser = null;\n\t\tlet imageFinal = null;\n\t\tlet comment_list = { comments: [] };\n\n\t\tfor(let auxComment = 0; auxComment < comments.length; auxComment ++) {\n\t\t\tfor(let auxUsers = 0; auxUsers < users.length; auxUsers ++) {\n\t\t\t\tif(comments[auxComment].user === users[auxUsers].name) {\n\t\t\t\t\tif(users[auxUsers].image === null) {\n\t\t\t\t\t\timageFinal = DefaultUser;\n\t\t\t\t\t} else {\n\t\t\t\t\t\timageUser = await getImage(token, users[auxUsers].image);\n                \t\timageFinal = imageUser.image;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomment_list.comments.push({\n\t\t\t\tid: comments[auxComment].id,\n\t\t\t\tuser: comments[auxComment].user,\n\t\t\t\tdescription: comments[auxComment].description,\n\t\t\t\timage: imageFinal\n\t\t\t});\n\t\t}\n\n        this.setState({ \n\t\t\tcomments: comment_list.comments,\n\t\t\ttoken: token \n\t\t});\n\t}\n\t\n\tasync componentDidUpdate(prevProps) {\n\t\tif(prevProps.comments !== this.state.comments) {\n\t\t\tconst token = this.state.token;\n\t\t\tconst meetingID = this.props.meeting.meetingID;\n\t\t\tconst projectID = this.props.meeting.project;\n\t\t\tconst comments = await getComments(token, meetingID);\n\t\t\tconst users = await getUsersInMeeting(token, meetingID, projectID);\n\t\t\tlet imageUser = null;\n\t\t\tlet imageFinal = null;\n\t\t\tlet comment_list = { comments: [] };\n\n\t\t\tfor(let auxComment = 0; auxComment < comments.length; auxComment ++) {\n\t\t\t\tfor(let auxUsers = 0; auxUsers < users.length; auxUsers ++) {\n\t\t\t\t\tif(comments[auxComment].user === users[auxUsers].name) {\n\t\t\t\t\t\tif(users[auxUsers].image === null) {\n\t\t\t\t\t\t\timageFinal = DefaultUser;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\timageUser = await getImage(token, users[auxUsers].image);\n\t\t\t\t\t\t\timageFinal = imageUser.image;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcomment_list.comments.push({\n\t\t\t\t\tid: comments[auxComment].id,\n\t\t\t\t\tuser: comments[auxComment].user,\n\t\t\t\t\tdescription: comments[auxComment].description,\n\t\t\t\t\timage: imageFinal\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setState({ comments: comment_list.comments });\n\t\t} else {\n\t\t\t\n\t\t}\n\t}\n\n    render() {\n\t\tlet comment_list = { comments: [] };\n\n\t\tfor(let aux = 0; aux < this.state.comments.length; aux ++) {\n\t\t\tcomment_list.comments.push({\n\t\t\t\tkey: this.state.comments[aux].id,\n\t\t\t\tcontent: this.state.comments[aux].description,\n\t\t\t\tauthor: this.state.comments[aux].user,\n\t\t\t\timage: this.state.comments[aux].image\n\t\t\t});\n\t\t}\n\n        return (\n            <List\n\t\t\t\tclassName = 'comment-list'\n\t\t\t\theader = { `${ comment_list.comments.length } Comentários` }\n\t\t\t\titemLayout = 'horizontal'\n\t\t\t\tdataSource = { comment_list.comments }\n\t\t\t\tstyle = {{ marginLeft: 450, marginTop: -230 }}\n\t\t\t\trenderItem = { item => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\tauthor = { item.author }\n\t\t\t\t\t\t\tavatar = { item.image }\n\t\t\t\t\t\t\tcontent = { item.content }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t/>\n        );\n    }\n}\n\nexport default CommentList;","import React, { Component } from 'react';\nimport { Button, Drawer } from 'antd';\nimport { CommentOutlined, StopOutlined } from '@ant-design/icons';\n\nimport NewComment from '../../forms/meeting/comments/FormCommentCreate';\nimport CommentList from './CommentList';\n\nexport class Comment extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n    \n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    render() {\n        return (\n            <span>\n                <Button onClick = { this.showDrawer }>\n                    <b><CommentOutlined /> Comentários </b>\n                </Button>\n                <Drawer\n                    title = { `Comentários da Reunião: ${ this.props.meeting.title }` }\n                    width = { 'auto' }\n\t\t\t\t\tclosable = { true }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Fechar\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n                    <NewComment meeting = { this.props.meeting }/>\n                    <CommentList meeting = { this.props.meeting }/>\n                </Drawer>\n            </span>\n        );\n    }\n}\n\nexport default Comment;","import React, { Component } from 'react';\nimport { Table, Tag, Space } from 'antd';\n\nimport MeetingMembers from '../meeting/MeetingMembers';\nimport FormAddMembersMeeting from '../forms/meeting/FormAddMembersMeeting';\nimport FormRemoveMembersMeeting from '../forms/meeting/FormRemoveMembersMeeting';\nimport FormEditMeeting from '../forms/meeting/FormEditMeeting';\nimport StartMeeting from '../meeting/MeetingDetail';\nimport Items from '../forms/meeting/items/Items';\nimport Record from '../meeting/record/Record';\nimport Comment from '../meeting/comments/Comment';\n\nimport { getUserId, getUserToken, getCurrentUser, getUsers } from '../../store/user';\nimport { getMeetings } from '../../store/meeting';\nimport { sort } from '../../services/sortService';\n\nclass ProjectList extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tcurrentUser: {},\n            meetings: [],\n            users: [],\n            token: null\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n        const token = getUserToken();\n        const slug = this.props.match.params.slug;\n        const userId = getUserId();\n\t\tconst user = await getCurrentUser(token, userId);\n        const meetings = await getMeetings(token, slug);\n        const users = await getUsers(token);\n\n        this.setState({ \n\t\t\tcurrentUser: user,\n            meetings: meetings,\n            users: users,\n            token: token \n\t\t});\n\t}\n\t\n  \trender() {\n        const { currentUser } = this.state;\n        const token = this.state.token;\n        let data_meeting = { meeting: [] };\n        let meeting_leader = null;\n        let userID = null;\n        let slug = this.props.match.params.slug;\n        let rules_meeting = { rules: [] };\n        let agendas_meeting = { agendas: [] };\n        let users_meeting = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.meetings.length; aux ++) {\n            for(let auxUsers = 0; auxUsers < this.state.users.length; auxUsers ++) {\n                if(this.state.meetings[aux].meeting_leader === this.state.users[auxUsers].id) {\n                    meeting_leader = this.state.users[auxUsers].name;\n                    userID = this.state.users[auxUsers].id;\n                }\n            }\n\n            for(let auxRules = 0; auxRules < this.state.meetings[aux].rules.length; auxRules ++) {\n                rules_meeting.rules.push({\n                    key: this.state.meetings[aux].rules[auxRules].id,\n                    title: this.state.meetings[aux].rules[auxRules]\n                })\n            }\n\n            for(let auxAgendas = 0; auxAgendas < this.state.meetings[aux].agendas.length; auxAgendas ++) {\n                agendas_meeting.agendas.push({\n                    key: this.state.meetings[aux].id, \n                    title: this.state.meetings[aux].agendas[auxAgendas] \n                });\n            }\n\n            for(let auxUsers = 0; auxUsers < this.state.meetings[aux].users.length; auxUsers ++) {\n                users_meeting.users.push({\n                    key: this.state.meetings[aux].id,\n                    title: this.state.meetings[aux].users[auxUsers]\n                });\n            } \n\n            data_meeting.meeting.push({\n                key: this.state.meetings[aux].id,\n                meetingID: this.state.meetings[aux].id,\n                title: this.state.meetings[aux].title,\n                slug: this.state.meetings[aux].slug,\n                project: this.state.meetings[aux].project,\n                subject_matter: this.state.meetings[aux].subject_matter,\n                meeting_leader: meeting_leader,\n                userID: userID,\n                initial_date: this.state.meetings[aux].initial_date,\n                initial_hour: this.state.meetings[aux].initial_hour,\n                real_hour: this.state.meetings[aux].real_hour,\n                real_date: this.state.meetings[aux].real_date,\n                duration_time: this.state.meetings[aux].duration_time,\n                status: this.state.meetings[aux].status,\n                tags: [ this.state.meetings[aux].status ],\n                rules: rules_meeting.rules,\n                agendas: agendas_meeting.agendas,\n                users: users_meeting.users\n            });\n\n            rules_meeting.rules = [];\n            agendas_meeting.agendas = [];\n            users_meeting.users = [];\n\t\t}\n\n        data_meeting.meeting.sort(sort('title'));\n\t\treturn (\n            <Table \n                dataSource = { data_meeting.meeting } bordered className = 'userList'\n                pagination = {{ defaultPageSize: 4 }} \n                columns = {\n                    [{\n                        title: 'Título da Reunião',\n                        dataIndex: 'title',\n                        key: 'title',\n                    },\n                    {\n                        title: 'Status',\n                        key: 'tags',\n                        dataIndex: 'tags',\n                        render: tags => (\n                            <span>\n                                {\n                                tags.map(tag => {\n                                    let color = null;\n\n                                    if (tag === 'Pendente') {\n                                        color = 'orange';\n                                    } else if(tag === 'Cancelada') {\n                                        color = 'red';\n                                    } else if(tag === 'Agendada') {\n                                        color = 'blue';\n                                    }\n                                    else {\n                                        color = 'green';\n                                    }\n\n                                    return (\n                                        <Tag color = { color } key = { tag } >\n                                            <b> { tag.toUpperCase() } </b> \n                                        </Tag>\n                                    );\n                                })\n                            }\n                            </span>\n                        ),\n                    },{\n                        title: 'Data da Reunião',\n                        dataIndex: 'initial_date',\n                        key: 'initial_date',\n                    },{\n\t\t\t\t\t\ttitle: 'Opções',\n\t\t\t\t\t\tkey: 'action',\n\t\t\t\t\t\trender: (record) => (\n                            <span>\n                                {\n                                    currentUser.is_administrator === false ? (\n                                        null\n                                    ) : (\n                                        <span>\n                                            {\n                                                record.status === 'Cancelada' ? (\n                                                    null \n                                                ) : (\n                                                    <span>\n                                                        {\n                                                            record.status === 'Agendada' ? (\n                                                                <Space size = 'middle'>\n                                                                    <StartMeeting \n                                                                        meeting = { record }\n                                                                        token = { token }\n                                                                        slug = { slug }\n                                                                    />\n                                                                </Space>\n                                                            ) : (\n                                                                <span>\n                                                                    {\n                                                                        record.status === 'Pendente' ? (\n                                                                            <Space size = 'middle'>\n                                                                                <FormAddMembersMeeting \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                <FormRemoveMembersMeeting \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                <MeetingMembers \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                <Items \n                                                                                    meeting = { record }\n                                                                                />\n                                                                                <FormEditMeeting \n                                                                                    meeting = { record } \n                                                                                    slug = { slug }\n                                                                                />\n                                                                            </Space>\n                                                                        ) : (\n                                                                            <Space size = 'middle'>\n                                                                                <Record \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                <Comment\n                                                                                    meeting = { record }\n                                                                                />\n                                                                            </Space>\n                                                                        )\n                                                                    }\n                                                                </span>\n                                                            )\n                                                        }\n                                                    </span>\n                                                )\n                                            }\n                                        </span>\n                                    )\n                                }\n                            </span>\n                        )\n                    }   \n                ]}\n            />\n        );\n\t}\n}\n\nexport default ProjectList;","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Hoc from './hoc/hoc';\n\nimport Homepage from './components/homepage/Homepage';\n\nimport UserDetail from './components/user/UserDetail';\nimport UserList from './components/user/UserList';\n\nimport SectorDetail from './components/sector/SectorDetail';\nimport SectorList from './components/sector/SectorList';\n\nimport ProjectList from './components/project/ProjectList';\n\nconst BaseRouter = (props) => (\n    <Hoc>\n        {\n            props.token === null ? (\n                <Route exact path = '/' component = { Homepage } />\n            ) : (\n                <div>\n                    <Route exact path = '/informacoes_usuario' component = { UserDetail } />\n                    <Route exact path = '/lista_de_usuarios' component = { UserList } />\n\n                    <Route exact path = '/setor/:slug' component = { SectorDetail } />\n                    <Route exact path = '/lista_de_setores' component = { SectorList } />\n\n                    <Route exact path = '/projeto/:slug' component = { ProjectList } />\n                </div>\n            )\n        }\n    </Hoc>\n);\n\nconst mapStateToProps = state => {\n    return { token: state.auth.token };\n};\n\nexport default withRouter(connect(mapStateToProps)(BaseRouter));","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, notification } from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\n\nimport { getUserToken } from '../../../store/user';\nimport { saveSector, getSectors } from '../../../store/sector';\n\nclass FormSectorCreate extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            visible: false,\n            token: null,\n            sectors: []\n        }\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ \n            sectors: sectors,\n            token: token,\n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    async handleSubmit(values) {\n\n        const sectors = this.state.sectors;\n\n        let found = sectors.find(sector => {\n            if(sector.name === values.name) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined) {\n            const token = this.state.token;\n            const initials = values.initials;\n            const name = values.name;\n\n            const sector = {\n                name: name,\n                initials: initials\n            };\n            const status = await saveSector(token, sector);\n\n            if(status === true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Setor Criado',\n                    description: 'Setor Criado Com Sucesso!',\n                });\n                this.props.history.push('/lista_de_setores');\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Ação Requerida',\n                    description: 'Erro Inesperado.. Tente Novamente!',\n                });\n                this.props.history.push('/lista_de_setores');\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Setor Não Criado',\n                description: 'Já Existe um Setor Com Este Nome! Por Favor, Cadastre Outro!',\n            });\n        }\n    }\n\n    render() {\n        const CreateFormSector = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = 'Registro de Setor' onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 320 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Setor\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 6 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'name' label = 'Nome'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Nome do Setor',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Setor'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 6 }>\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'initials' label = 'Iniciais do Setor'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira as Iniciais',\n                                    }]}\n                                >\n                                    <Input maxLength = { 6 } placeholder = 'Iniciais' />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Setor </span>\n                <CreateFormSector />\n            </div>\n        );\n    } \n}\n\nexport default withRouter(FormSectorCreate);","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, InputNumber, notification } from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\n\nimport { getUserToken, authSignup } from '../../../store/user';\nimport { getSectors } from '../../../store/sector';\nimport { typeUserValidate } from '../../../services/userService';\n\nconst { Option } = Select;\n\nclass FormUserCreate extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            sectors: []\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ sectors: sectors });\n    }\n\n    async handleSubmit(values) {\n        let is_administrator_valid = typeUserValidate(values.type_user);\n        let description = null;\n\n        if(values.description === undefined || values.description === '') {\n            description = 'Descrição Padrão';\n        } else {\n            description = values.description;\n        }\n\n        const user = {\n            username: values.username,\n            email: values.email,\n            password1: values.password1,\n            password2: values.password1,\n            is_administrator: is_administrator_valid,\n            is_participant: !is_administrator_valid,\n            description: description,\n            name: values.name,\n            ramal: values.ramal,\n            sector: values.sector,\n        };\n\n        const status = await authSignup(user);\n\n        if(status !== false) {\n            notification.open({ \n                type: 'success',\n                message: 'Usuário Criado',\n                description: `O Usuário ${ values.name } Foi Salvo Com Sucesso!`,\n            });\n            notification.open({\n                type: 'info',\n                message: 'Ação Requerida',\n                description: 'O Usuário já Foi Adicionado, Verifique a Lista de Usuários.',\n            });\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Usuário Não Cadastrado',\n                description: 'Não Foi Possível Cadastrar o Usuário!',\n            });\n            notification.open({\n                type: 'info',\n                message: 'Ação Requerida',\n                description: 'Se o Problema Persistir, Entre em Contato Com o Desenvolvedor.',\n            });\n        }\n\n        this.setState({ visible: false });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n    \n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n    \n    render() {\n        let data = { sectors: [] };\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n            });            \n        }\n\n        const CreateFormUser = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer \n                    title = 'Registro de Usuário' onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible }\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Usuário\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 12 }>\n                                <Form.Item\n                                    name = 'name' label = 'Nome Completo'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Nome Completo' \n                                    }]}\n                                >\n                                    <Input \n                                        maxLength = { 100 } \n                                        placeholder = 'Por Favor, Insira Seu Nome Completo' \n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 12 }>\n                                <Form.Item\n                                    name = 'email' label = 'Email'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Email' \n                                    }]}\n                                >\n                                <Input\n                                    style = {{ width: '100%' }}\n                                    placeholder = 'Por Favor, Insira Seu Email'\n                                    maxLength = { 40 }\n                                />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 8 }>\n                                <Form.Item\n                                    name = 'username' label = 'Usuário'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Usuário' \n                                    }]}\n                                >\n                                    <Input \n                                        maxLength = { 20 } \n                                        placeholder = 'Por Favor, Insira Seu Usuário' \n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'ramal' label = 'Ramal'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Ramal' \n                                    }]}\n                                >\n                                    <InputNumber \n                                        maxLength = { 6 } \n                                        placeholder = 'Ramal' \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 12 }>\n                                <Form.Item\n                                    name = 'password1' label = 'Senha'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Sua Senha' \n                                    }]}\n                                >\n                                    <Input.Password \n                                        maxLength = { 40 } \n                                        placeholder = 'Por Favor, Insira Sua Senha' \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 20 }>\n                            <Col span = { 6 }>\n                                <Form.Item \n                                    name = 'type_user' label = 'Tipo de Usuário' \n                                    rules = {[{ required: true }]}\n                                >\n                                    <Select>\n                                        <Option key = '1' value = { 'Administrador' }> \n                                            Administrador \n                                        </Option>\n                                        <Option key = '2' value = { 'Participante' }>\n                                            Participante\n                                        </Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'sector' label = 'Setor' \n                                    rules = {[{ \n                                        required: true,\n                                        message: 'Por Favor, Escolha o Setor' \n                                    }]}\n                                >\n                                    <Select>\n                                        { data.sectors.map(sector =>\n                                            <Option value = { sector.key } key = { sector.key }> \n                                                { sector.name } \n                                            </Option> \n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 24 }>\n                                <Form.Item\n                                    name = 'description' label = 'Descrição (Opcional)'\n                                    rules = {[{\n                                        required: false,\n                                        message: 'Por Favor, Insira Uma Descrição Sua',\n                                    },\n                                ]}\n                                >\n                                    <Input.TextArea \n                                        rows = { 4 } \n                                        placeholder = 'Por Favor, Insira Uma Descrição Sua' \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Usuário </span>\n                <CreateFormUser />\n            </div>\n        );\n    }\n}\n\nexport default FormUserCreate; ","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, notification } from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\n\nimport { getUserToken } from '../../../store/user';\nimport { getSectors } from '../../../store/sector';\nimport { saveProject, getAllProjects } from '../../../store/project';\n\nconst { Option } = Select;\n\nclass FormProjectCreate extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            projects: [],\n            sectors: [],\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n        const projects = await getAllProjects(token);\n\n        this.setState({ \n            sectors: sectors,\n            token: token,\n            projects: projects \n        });\n    }\n\n    async handleSubmit(values) {\n\n        const projects = this.state.projects;\n\n        let found = projects.find(project => {\n            if(project.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined) {\n            const token = this.state.token;\n            const title = values.title;\n            const sector = values.sector;\n            const statusProject = 'Pendente';\n            const project = {\n                title: title,\n                sector: sector,\n                status: statusProject,\n                slug: ''\n            };\n\n            const status = await saveProject(token, project);\n\n            if(status !== true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Projeto Criado',\n                    description: `O Projeto ${ project.title } Foi Salvo Com Sucesso!`,\n                });\n                this.props.history.push('/lista_de_setores');\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Projeto Não Foi Criado',\n                    description: 'Não Foi Possível Cadastrar o Projeto! Tente Novamente!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Se o Problema Persistir, Entre em Contato Com o Desenvolvedor!',\n                });\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Projeto Não Criado',\n                description: 'Já Existe Um Projeto Com Este Nome/Título Neste ou em Outro Setor. ' +\n                             'Cadastre Com Outro Nome!' \n            });\n        }\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n    \n    render() {\n        let data = { sectors: [] };\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n            });            \n        }\n\n        const CreateFormProject = () => {\n            const [form] = Form.useForm();\n            return (\n                <Drawer\n                    title = 'Registro de Projeto' onClose = { this.onClose } width = { 680 } \n                    visible = { this.state.visible } style = {{ height: 420 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Projeto\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 20 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'title' label = 'Nome do Projeto'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Nome do Projeto',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Projeto'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'sector' label = 'Setor' \n                                    rules = {[{ \n                                        required: true,\n                                        message: 'Por Favor, Escolha o Setor', \n                                    }]}\n                                >\n                                    <Select>\n                                        { data.sectors.map(sector =>\n                                            <Option value = { sector.key } key = { sector.key }> \n                                                { sector.name } \n                                            </Option> \n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 8 }>\n                            <Col span = { 8 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status do Projeto'\n                                    rules = {[{ \n                                        required: false, \n                                    }]}\n                                >\n                                    <Input disabled = { true } placeholder = 'Pendente'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Projeto </span>\n                <CreateFormProject />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(FormProjectCreate);","import React, { Component } from 'react';\nimport { \n    Drawer, Form, Button, Col, Row, Input, DatePicker, TimePicker, \n    TreeSelect, Select, notification \n} from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\nimport locale from 'antd/es/date-picker/locale/pt_BR';\nimport moment from 'moment';\n\nimport { getUserToken, getUsers } from '../../../store/user';\nimport { getSectors } from '../../../store/sector';\nimport { getAllProjects } from '../../../store/project';\nimport { saveMeeting, getAllMeetings } from '../../../store/meeting';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nclass FormMeetingCreate extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            projects: [],\n            users: [],\n            sector: [],\n            meetings: []\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const users = await getUsers(token);\n        const projects = await getAllProjects(token);\n        const sector = await getSectors(token);\n        const meetings = await getAllMeetings(token);\n\n        this.setState({ \n            users: users,\n            token: token,\n            projects: projects,\n            sector: sector,\n            meetings: meetings\n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    async handleSubmit(values) {\n        const meetings = this.state.meetings;\n\n        let found = meetings.find(meeting => {\n            if(meeting.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined) {\n            const token = this.state.token;\n            const meeting = {\n                title: values.title,\n                meeting_leader: values.meeting_leader,\n                project: values.project,\n                subject_matter: values.subject_matter,\n                initial_date: values['initial_date'].format('DD/MM/YYYY'),\n                initial_hour: values['initial_hour'].format('HH:mm:ss'),\n                status: 'Pendente'\n            };\n            let slug = null;\n\n            for(let aux = 0; aux < this.state.projects.length; aux ++) {\n                if(this.state.projects[aux].id === values.project) {\n                    slug = this.state.projects[aux].slug;\n                }\n            }\n            \n            const status = await saveMeeting(token, meeting);\n\n            if(status !== true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Reunião Criada',\n                    description: `A Reunião ${ meeting.title } Foi Salva Com Sucesso!`,\n                });\n                this.props.history.push(`/projeto/${ slug }`);\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Reunião Não Criada',\n                    description: 'Não Foi Possível Cadastrar a Reunião! Tente Novamente!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Se o Problema Persistir, Entre em Contato Com o Desenvolvedor!',\n                });\n            }            \n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Reunião Não Criada',\n                description: 'Já Existe Uma Reunião Com Este Nome/Título Neste ou em Outro Setor. ' +\n                             'Cadastre Com Outro Nome!' \n            });\n        }    \n    }\n    \n    onSearch(val) {\n        console.log('search:', val);\n    }\n\n    render() {\n        let data_users = { users: [] };\n\n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data_users.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name\n            });\n        }\n\n        let projects_list = [];\n        let data = { projects: [] }\n        let count = 0;\n\n        for(let aux = 0; aux < this.state.sector.length; aux ++) {\n            data.projects.push({\n                id: this.state.sector[aux].id,\n                title: this.state.sector[aux].name,\n                disabled: true\n            });\n            for(let auxProject = 0; auxProject < this.state.projects.length; auxProject ++) {\n                if(this.state.sector[aux].id === this.state.projects[auxProject].sector) {\n                    if(this.state.projects[auxProject].status === 'Cancelada') {\n\n                    } else {\n                        data.projects.push({\n                            pId: this.state.projects[auxProject].id,\n                            value: this.state.projects[auxProject].id,\n                            title: this.state.projects[auxProject].title\n                        });\n                    }\n                    projects_list[count] = this.state.projects[auxProject];\n                    count ++;\n                }\n            }\n            count = 0;\n            projects_list = [];\n        }\n\n        const CreateFormMeeting = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = 'Registro de Reunião' onClose = { this.onClose } width = { 650 }\n                    visible = { this.state.visible } \n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Reunião\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'title' label = 'Título da Reunião'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Título da Reunião',\n                                    }]}\n                                >\n                                    <Input \n                                        maxLength = { 40 } \n                                        placeholder = 'Insira o Título da Reunião'\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status da Reunião'\n                                    rules = {[{ \n                                        required: false, \n                                    }]}\n                                >\n                                    <Input disabled = { true } placeholder = 'Pendente'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'subject_matter' label = 'Ementa da Reunião'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira a Ementa da Reunião',\n                                    }]}\n                                >\n                                    <TextArea rows = { 4 } maxLength = { 500 }/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'meeting_leader' label = 'Líder da Reunião'\n                                    rules = {[{\n                                        required: true,\n                                        message: 'Por Favor, Escolha o Líder da Reunião'\n                                    }]}\n                                >\n                                    <Select\n                                        showSearch\n                                        style = {{ width: '100%' }}\n                                        placeholder = 'Selecione o Líder da Reunião'\n                                        optionFilterProp = 'children'\n                                        onSearch = { this.onSearch }\n                                        filterOption = {(input, option) =>\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                    >\n                                        { data_users.users.map(user =>\n                                            <Option value = { user.key } key = { user.key }>\n                                                { user.name }\n                                            </Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'initial_date' label = 'Data da Reunião'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira a Data de Abertura da Reunião',\n                                    }]}\n                                >\n                                    <DatePicker\n                                        locale = { locale }\n                                        initialValues = { moment('09/07/2020', 'DD/MM/YYYY')} \n                                        format = { dateFormatList } \n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'initial_hour' label = 'Hora de Início'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira a Hora de Abertura da Reunião',\n                                    }]}\n                                >\n                                    <TimePicker \n                                        use24Hours\n                                        initialValues = { moment('00:00:00', 'HH:mm:ss')}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'project' label = 'Projeto'\n                                >\n                                    <TreeSelect\n                                        style = {{ width: '100%' }}\n                                        value = { this.state.value }\n                                        dropdownStyle = {{ maxHeight: 400, overflow: 'auto' }}\n                                        treeData = { data.projects }\n                                        placeholder = 'Selecione o Projeto'\n                                        treeDefaultExpandAll\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Reunião </span>\n                <CreateFormMeeting />\n            </div>\n        )\n    }\n}\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n\nexport default withRouter(FormMeetingCreate);","import React, { Component } from 'react';\nimport { Menu, Dropdown, Divider } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { \n    DownOutlined, UserOutlined, TeamOutlined, \n    LogoutOutlined, UserAddOutlined, EnvironmentOutlined,\n    OrderedListOutlined, AppstoreAddOutlined, AuditOutlined \n} from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport FormSectorCreate from '../forms/sector/FormSectorCreate';\nimport FormUserCreate from '../forms/user/FormUserCreate';\nimport FormProjectCreate from '../forms/project/FormProjectCreate';\nimport FormMeetingCreate from '../forms/meeting/FormMeetingCreate';\n\nimport { getCurrentUser, getUserToken, getUserId } from '../../store/user';\nimport { typeUser } from '../../services/userService';\nimport { logout } from '../../store/auth';\n\nclass DropdownNav extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n        }\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        this.setState({ currentUser: user });\n    }    \n\n    render() {\n        const { currentUser } = this.state;\n        const username = currentUser.username;\n        const type = typeUser(currentUser.is_administrator);\n        return (\n            <div>\n                <Dropdown overlay = { \n                    <Menu>\n                        <Menu.Item key = '1'> \n                            <UserOutlined /> \n                            <Link to = { '/informacoes_usuario' }> Meu Perfil </Link>\n                        </Menu.Item>\n                        <Divider/>\n\n                        <Menu.Item key = '2'> \n                            <TeamOutlined />\n                            <Link to = { '/lista_de_usuarios' }> Lista de Usuários </Link>\n                        </Menu.Item>\n                        <Divider/>\n\n                        {\n                            type === 'Administrador' ? (\n                                <Menu.Item key = '3'> \n                                    <UserAddOutlined />\n                                    <FormUserCreate />\n                                    <Divider/>\n                                </Menu.Item>\n                            ) : null\n                        }\n\n                        <Menu.Item key = '4' onClick = { this.props.logout }> \n                            <LogoutOutlined />\n                            <Link to = { '/' }> Sair da Sessão </Link>\n                        </Menu.Item>\n                    </Menu> \n                }>\n                    <span className = 'ant-dropdown-link'>\n                        <UserOutlined/> \n                            Olá, { username } \n                        <DownOutlined />\n                    </span>\n                </Dropdown>\n\n                <Dropdown overlay = { \n                    <Menu>\n                        <Menu.Item key = '5'> \n                            <OrderedListOutlined /> \n                            <Link to = { '/lista_de_setores' }> Lista de Setores </Link>\n                        </Menu.Item>\n                        {\n                            type === 'Administrador' ? (\n                                <Menu.Item key = '6'> \n                                    <AppstoreAddOutlined />\n                                    <FormSectorCreate />\n                                </Menu.Item>\n                            ) : null\n                        }\n                    </Menu> \n                }>\n                    <span className = 'ant-dropdown-link'>\n                        <EnvironmentOutlined/> Setor <DownOutlined />\n                    </span>\n                </Dropdown>\n\n                {\n                    type === 'Administrador' ? (\n                        <Dropdown overlay = { \n                            <Menu>\n                                <Menu.Item key = '7'> \n                                    <AppstoreAddOutlined />\n                                    <FormProjectCreate />\n                                </Menu.Item>\n                            </Menu> \n                        }>\n                            <span className = 'ant-dropdown-link'>\n                                <EnvironmentOutlined/> Projetos <DownOutlined />\n                            </span>\n                        </Dropdown>\n                    ) : null\n                }\n\n                {\n                    type === 'Administrador' ? (\n                        <Dropdown overlay = { \n                            <Menu>\n                                <Menu.Item key = '7'> \n                                    <AppstoreAddOutlined />\n                                    <FormMeetingCreate />\n                                </Menu.Item>\n                            </Menu> \n                        }>\n                            <span className = 'ant-dropdown-link'>\n                                <AuditOutlined/> Reuniões <DownOutlined />\n                            </span>\n                        </Dropdown>\n                    ) : null\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => dispatch(logout())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DropdownNav));","import React, { Component } from 'react';\nimport { Form, Modal, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { validateFields } from '../../../services/userService';\nimport { authLogin } from '../../../store/auth';\n\nclass FormLogin extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            visible: false\n        }\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.visibleForm = this.visibleForm.bind(this);\n        this.cancel = this.cancel.bind(this);\n    }\n\n    visibleForm() {\n        this.setState({ visible: true });\n    }\n\n    cancel() {\n        this.setState({ visible: false });\n    }\n\n    handleSubmit(values) {\n        const username = values.username;\n        const password = values.password;\n\n        if(validateFields(username) === true) {\n\n        } else {\n            this.props.onAuth(username, password);\n            this.props.history.push('/lista_de_setores');\n        }\n    }\n\n    render() {\n        const CollectionCreateForm = () => {\n            const [form] = Form.useForm();\n            return (\n                <Modal\n                    visible = { this.state.visible } title = 'Realize o Login' okText = 'Entrar'\n                    cancelText = 'Cancelar' onCancel = { this.cancel }\n                    onOk = {() => {\n                        form.validateFields().then(values => {\n                            form.resetFields();\n                            this.handleSubmit(values);\n                        }).catch(info => {\n                            console.log('Validate Failed:', info);\n                        });\n                    }}\n                >\n                    <Form form = { form } layout = 'vertical'>\n                        <Form.Item \n                            label = 'Usuário' name = 'username' className = 'inputFormLogin'\n                            rules = {[{ required: true, message: 'Por Favor, Insira o Seu Usuário!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label = 'Senha' name = 'password' className = 'inputFormLogin'\n                            rules = {[{ required: true, message: 'Por Favor, Insira a Sua Senha!' }]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </Form>\n              </Modal>\n            );\n        };\n        return(\n            <div>\n                <span className = 'textNavbar' onClick = { this.visibleForm }> Login </span>\n                <CollectionCreateForm />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return { \n        onAuth: (username, password) => dispatch(authLogin(username, password)) \n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormLogin));","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\n\nimport Dropdown from './Dropdown';\nimport FormLogin from '../forms/login/FormLogin';\n\nconst { Header } = Layout;\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <Header className = 'header'>\n                <Menu className = 'menu' mode = 'horizontal'>\n                    {\n                        this.props.isLogged === null ? (\n                            null\n                        ) : (\n                            <Menu.Item>\n                                <Dropdown />\n                            </Menu.Item>\n                        )\n                    }\n                    {\n                        this.props.isLogged === null ? (\n                            <Menu.Item>\n                                <FormLogin props = { this.props } />\n                            </Menu.Item>\n                        ) : (\n                            null\n                        )\n                    }\n                </Menu>\n            </Header>\n        );\n    }\n}\n\nexport default Navbar;","import React, { useState } from 'react';\nimport { Input, AutoComplete } from 'antd';\n\nfunction getRandomInt(max, min = 0) {\n    return Math.floor(Math.random() * (max - min + 1)) + min; \n}\n\nconst searchResult = query =>\n    new Array(getRandomInt(5)).join('.').split('.').map((item, idx) => {\n        const category = `${ query }${ idx }`;\n        return {\n            value: category,\n            label: (\n                <div\n                    style = {{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                    <span>\n                    Found { query } on{' '}\n                    <a\n                        href = { `https://s.taobao.com/search?q=${ query }` }\n                        rel = ''\n                    >\n                        { category }\n                    </a>\n                    </span>\n                    <span>{ getRandomInt(200, 100)} results</span>\n                </div>\n            ),\n        };\n    });\n\nconst Complete = () => {\n    const [ options, setOptions ] = useState([]);\n    const handleSearch = value => {\n    setOptions(value ? searchResult(value) : []);\n};\n\nconst onSelect = value => {\n    console.log('onSelect', value);\n};\n\n  return (\n        <AutoComplete \n            dropdownMatchSelectWidth = { 252 }\n            options = { options }\n            className = 'autoComplete'\n            onSelect = { onSelect }\n            onSearch = { handleSearch }\n        >\n            <Input.Search size = 'large' \n                placeholder = 'Pesquise Aqui Sobre Projetos, Reuniões, Setores, Pessoas...' enterButton \n            />\n        </AutoComplete>\n    );\n};\n\nexport default Complete;","import React from 'react';\nimport { Layout } from 'antd';\nimport { GithubOutlined, InstagramOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from './Navbar';\nimport AutoComplete from './AutoComplete';\n\nimport '../../css/layout.css';\nimport '../../css/icon.css';\nimport '../../css/text.css';\nimport '../../css/project.css';\nimport '../../css/user.css';\nimport '../../css/buttons.css';\nimport '../../css/img.css';\nimport '../../css/alert.css';\nimport '../../css/forms.css';\n\nconst { Footer, Content } = Layout;\n\nconst CustomLayout = (props) => {\n\treturn (\n\t\t<Layout>\n\t\t\t<Navbar isLogged = { props.token }/>\n\t\t\t<Content>\n\t\t\t\t{\n\t\t\t\t\tprops.token !== null ? (\n\t\t\t\t\t\t<AutoComplete />\n\t\t\t\t\t) : null\n\t\t\t\t}\n\t\t\t\t{ props.children }\n\t\t\t</Content>\n\t\t\t<Footer className = 'footer'>\n\t\t\t\t<b> \n\t\t\t\t\tGrata - Gerenciamento de Reuniões e Atas ©2020 \n\t\t\t\t\tCriado por Victor Hugo Lopes Mota. Contatos:\n\t\t\t\t\t<a href = 'https://github.com/MrVictor42/'>\n\t\t\t\t\t\t<GithubOutlined />\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href = 'https://www.instagram.com/mrvictor42/'>\n\t\t\t\t\t\t<InstagramOutlined />\n\t\t\t\t\t</a>\n\t\t\t\t</b>\n\t\t\t</Footer>\n\t\t</Layout>\n\t);\n}\n\nconst mapStateToProps = state => {\n    return { token: state.auth.token };\n};\n\nexport default withRouter(connect(mapStateToProps)(CustomLayout));","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\n\nimport 'antd/dist/antd.css';\nimport './css/App.css';\n\nimport { authCheckState } from './store/auth';\nimport Layout from './components/layout/Layout';\n\nclass App extends Component {\n\t  \n\tcomponentDidMount() {\n\t\tthis.props.onTryAutoSignup();\n  \t}\n\n  \trender() {\n    \treturn (\n\t\t\t<Router>\n\t\t\t\t<Layout {...this.props}>\n\t\t\t\t\t<BaseRouter />\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = () => {\n  \treturn { };\n};\n\nconst mapDispatchToProps = dispatch => {\n  \treturn { onTryAutoSignup: () => dispatch(authCheckState()) };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const isLocalhost = Boolean(\n  \twindow.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  \tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\tif (isLocalhost) {\n\t\t\tcheckValidServiceWorker(swUrl, config);\n\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\tconsole.log(\n\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t\t});\n  \t}\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n    .then(response => {\n\t\tconst contentType = response.headers.get('content-type');\n\t\tif (\n\t\t\tresponse.status === 404 ||\n\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t) {\n\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister().then(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t});\n\t\t} else {\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n    })\n    .catch(() => {\n      \tconsole.log(\n        \t'No internet connection found. App is running in offline mode.'\n      \t);\n    });\n}\n\nexport function unregister() {\n  \tif ('serviceWorker' in navigator) {\n    \tnavigator.serviceWorker.ready\n\t\t.then(registration => {\n\t\t\tregistration.unregister();\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error.message);\n\t\t});\n\t}\n}","export const updateObject = (oldObject, updateProperties) => {\n    return {\n        ...oldObject,\n        ...updateProperties \n    }\n}","import { AUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT } from '../../consts';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n\tcurrentUser: {},\n\tis_administrator: null,\n    token: null,\n    error: null,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n\treturn updateObject(state, {\n\t\terror: null,\n\t\tloading: true\n\t});\n};\n\nconst authSuccess = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: action.user.token,\n\t\tcurrentUser: action.user,\n\t\tis_administrator: action.user.is_administrator,\n\t\terror: null,\n\t\tloading: false\n\t});\n};\n\nconst authFail = (state, action) => {\n\treturn updateObject(state, {\n\t\terror: action.error,\n\t\tloading: false\n\t});\n};\n\nconst authLogout = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: null\n\t});\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase AUTH_START:\n\t\t\treturn authStart(state, action);\n\t\tcase AUTH_SUCCESS:\n\t\t\treturn authSuccess(state, action);\n\t\tcase AUTH_FAIL:\n\t\t\treturn authFail(state, action);\n\t\tcase AUTH_LOGOUT:\n\t\t\treturn authLogout(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ConfigProvider } from 'antd';\nimport pt_BR from 'antd/es/locale/pt_BR';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/index.css';\n\nimport authReducer from './store/authReducers/authReducer';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n\tauth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n\t<ConfigProvider locale = { pt_BR }>\n\t\t<Provider store = { store } >\n\t\t\t<App />\n\t\t</Provider>\n\t</ConfigProvider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();","import axios from 'axios';\n\nimport { BASE_URL_USERS } from '../consts';\nimport { logout } from './auth';\n\nexport const getUserId = () => {\n\tconst user = JSON.parse(localStorage.getItem('user'));\n\tconst userId = user.userId;\n\t\n\treturn userId;\n};\n\nexport const getUserToken = () => {\n\tlet token = null;\n\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\n\tif(user !== null) {\n\t\ttoken = user.token;\n\t\treturn token;\n\t} else {\n\t\treturn token;\n\t}\n};\n\nexport const authSignup = async (user) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json'\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.post('http://0.0.0.0:8000/rest-auth/registration/', user);\n\t\treturn data;\n\t} catch(err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getCurrentUser = async (token, userId) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }user_detail/${ userId }/`);\n\t\treturn data;    \n\t} catch(err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const updateUser = async (token, user) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_USERS }user_edit/${ user.id }/`, user);\n\t\treturn true;\n\t} catch(err) {\n\t\treturn false;\n\t}\n};\n\nexport const deleteUserLogout = async (token, userId) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_USERS }user_delete/${ userId }/`);\n\t\tlogout();\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const deleteUser = async (token, userId) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_USERS }user_delete/${ userId }/`);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsers = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersInSector = async (token, sectorID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_sector/${ sectorID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUserInProject = async (token, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_project/${ projectID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUserNotInProject = async (token, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_not_in_project/${ projectID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersInMeeting = async (token, meetingID, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_project_and_meeting/${ meetingID }/${ projectID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersInProjectAndNotInMeeting = async (token, meetingID, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_project_and_not_in_meeting/${ meetingID }/${ projectID }`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersNotInMeeting = async (token, meetingID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_not_in_meeting/${ meetingID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};","import axios from 'axios';\n\nimport { AUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT } from '../consts';\n\nexport const authStart = () => {\n\treturn {\n    \ttype: AUTH_START\n  \t};\n};\n\nexport const authSuccess = user => {\n\treturn {\n    \ttype: AUTH_SUCCESS,\n    \tuser\n  \t};\n};\n\nexport const authFail = error => {\n\treturn {\n\t\ttype: AUTH_FAIL,\n    \terror: error\n  \t};\n};\n\nexport const logout = () => {\n\tlocalStorage.removeItem('user');\n\treturn {\n\t\ttype: AUTH_LOGOUT\n\t};\n};\n\nexport const checkAuthTimeout = expirationTime => {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\nexport const authCheckState = () => {\n\treturn dispatch => {\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tif (user === undefined || user === null) {\n\t\t\tdispatch(logout());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(user.expirationDate);\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout());\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccess(user));\n\t\t\t\tdispatch(\n\t\t\t\t\tcheckAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n  \t};\n};\n\nexport const authLogin = (username, password) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.post('http://0.0.0.0:8000/rest-auth/login/', {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t})\n\t\t.then(res => {\n\t\t\tconst user = {\n\t\t\t\ttoken: res.data.key,\n\t\t\t\tusername,\n\t\t\t\tuserId: res.data.user,\n\t\t\t\tis_administrator: res.data.user_type.is_administrator,\n\t\t\t\tis_participant: res.data.user_type.is_participant,\n\t\t\t\tramal: res.data.ramal,\n\t\t\t\tname: res.data.name,\n\t\t\t\texpirationDate: new Date(new Date().getTime() + 3600 * 1000)\n\t\t\t};\n\t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\t\tdispatch(authSuccess(user));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n};"],"sourceRoot":""}