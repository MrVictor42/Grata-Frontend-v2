{"version":3,"sources":["img/default_user.jpg","store/auth.js","store/user.js","components/forms/user/FormUserEdit.js","consts.js","services/sortService.js","store/sector.js","services/userService.js","hoc/hoc.js","components/homepage/Homepage.js","components/user/UserPhoto.js","components/forms/user/FormUserDelete.js","components/user/UserDetail.js","components/user/UserInfo.js","components/user/UserList.js","store/project.js","components/forms/project/FormProjectEdit.js","components/forms/project/FormAddUsersProject.js","components/forms/project/FormRemoveUsersProject.js","components/project/ProjectMembers.js","components/sector/SectorDetail.js","components/forms/sector/FormSectorEdit.js","components/forms/sector/FormSectorDelete.js","components/sector/SectorMembers.js","components/sector/SectorList.js","components/meeting/MeetingMembers.js","store/meeting.js","components/forms/meeting/FormAddMembersMeeting.js","components/forms/meeting/FormRemoveMembersMeeting.js","components/forms/meeting/FormEditMeeting.js","components/meeting/timer/ButtonTimerMeeting.js","components/meeting/timer/Timer.js","components/meeting/MeetingDetail.js","components/forms/meeting/items/MeetingAgenda.js","components/forms/meeting/items/RulesMeeting.js","components/forms/meeting/items/Items.js","components/meeting/record/Record.js","components/forms/meeting/questions/Questions.js","components/forms/meeting/questions/Choices.js","store/questions.js","store/questtionaire.js","store/choices.js","store/gradedQuesttionaire.js","services/utils.js","components/meeting/questions/RespondQuestions.js","components/meeting/questions/ChartsQuesttionaire.js","components/meeting/questions/ResultQuesttionaire.js","components/project/ProjectList.js","components/forms/meeting/questions/QuestionForm.js","components/forms/meeting/questions/FormCreateQuiz.js","routes.js","components/forms/sector/FormSectorCreate.js","components/forms/user/FormUserCreate.js","components/forms/project/FormProjectCreate.js","components/forms/meeting/FormMeetingCreate.js","components/layout/Dropdown.js","components/forms/login/FormLogin.js","components/layout/Navbar.js","components/layout/AutoComplete.js","components/layout/Layout.js","App.js","serviceWorker.js","store/utility.js","store/authReducers/authReducer.js","index.js","store/images.js"],"names":["module","exports","authSuccess","user","type","AUTH_SUCCESS","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authCheckState","JSON","parse","getItem","undefined","expirationDate","Date","getTime","authLogin","username","password","AUTH_START","axios","post","then","res","token","data","key","userId","is_administrator","user_type","is_participant","ramal","name","setItem","stringify","catch","err","error","AUTH_FAIL","getUserId","getUserToken","authSignup","a","defaults","headers","console","log","message","getCurrentUser","Authorization","get","BASE_URL_USERS","updateUser","put","id","deleteUserLogout","delete","deleteUser","getUsers","getUsersInSector","sectorID","getUserInProject","projectID","getUserNotInProject","getUsersInMeeting","meetingID","getUsersInProjectAndNotInMeeting","Option","Select","FormUserEdit","props","showDrawer","setState","visible","onClose","fileSelectHandler","event","file","target","files","beforeUpload","global","image","state","sectors","handleSubmit","bind","getSectors","this","isJpgOrPng","isLt2M","size","values","FormData","typeUserValidate","imageUser","imageID","sector","append","editImage","saveImage","email","description","validateUpdate","status","window","location","reload","notification","open","typeUser","aux","length","push","sort","Form","useForm","form","title","width","bodyStyle","paddingBottom","footer","style","textAlign","onClick","marginRight","validateFields","resetFields","info","color","marginLeft","align","hideRequiredMark","layout","gutter","span","Item","label","rules","required","maxLength","value","map","onChange","TextArea","rows","className","Component","BASE_URL_IMAGES","BASE_URL_SECTORS","BASE_URL_PROJECTS","BASE_URL_MEETING","BASE_URL_QUESTIONS","BASE_URL_QUESTTIONAIRE","BASE_URL_CHOICES","BASE_URL_GRADEDQUESTTIONAIRE","property","sortOrder","substr","b","localeCompare","getSector","slug","saveSector","editSector","deleteSector","warning","currentUser","Hoc","children","Homepage","href","Meta","Card","UserPhoto","DefaultUser","cover","alt","src","hoverable","confirm","Modal","FormUserDelete","showDeleteConfirm","propsForms","userID","content","okText","okType","cancelText","onOk","success","history","onCancel","danger","DeleteOutlined","withRouter","Content","Layout","UserDetail","getImage","column","xxl","xl","lg","md","sm","xs","class","UserInfo","EyeOutlined","placement","closable","pStyle","marginBottom","permission","fontSize","lineHeight","display","DescriptionItem","UserList","users","final_users","typePermission","dataSource","pagination","defaultPageSize","bordered","renderItem","actions","avatar","getProjects","getAllProjects","saveProject","project","editProject","addUsersProject","removeUsersProject","FormProjectEdit","projects","found","find","idProject","height","StopOutlined","SaveOutlined","disabled","placeholder","tags","EditOutlined","FormAddUsersProject","nextTargetKeys","targetKeys","showSearch","users_data","ghost","UsergroupAddOutlined","operations","filterOption","inputValue","item","toLowerCase","indexOf","toString","leftColumns","dataIndex","rightColumns","TableTransfer","restProps","showSelectAll","direction","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","selectedKeys","listDisabled","columns","rowSelection","onSelectAll","selected","selectedRows","treeSelectedKeys","filter","diffKeys","difference","onSelect","selectedRowKeys","pointerEvents","onRow","includes","FormRemoveUserProject","UsergroupDeleteOutlined","ProjectMembers","data_users","FormProjectMembers","SectorDetail","match","params","render","tag","toUpperCase","record","to","FormSectorEdit","initials","SectorDelete","nameSector","SectorMembers","FormSectorMembers","SectorList","MeetingMembers","meeting","FormMeetingMembers","getAllMeetings","getMeetings","slugProject","saveMeeting","editMeeting","addUsersMeeting","removeUsersMeeting","addItemsMeeting","FormAddMembersMeeting","meeting_leader","subject_matter","initial_date","initial_hour","FormRemoveMembersMeeting","Input","FormEditMeeting","meetings","format","FormMeetingEdit","locale","initialValues","moment","dateFormatList","use24Hours","ButtonTimerMeeting","start","stop","reset","finish","resume","Timer","useState","ms","seconds","minutes","hour","time","setTime","interv","setInterv","setStatus","updatedMs","updatedSeconds","updatedMinutes","updatedHour","run","setInterval","clearInterval","duration_time","document","getElementById","innerText","finishMeeting","real_hour","atualHour","real_date","atualDate","MeetingDetail","today","getHours","getMinutes","getSeconds","day","getDate","month","getMonth","year","getUTCFullYear","checkTime","CaretRightOutlined","text","agendas","agenda","MeetingAgenda","List","fields","add","remove","field","index","formItemLayout","formItemLayoutWithOutLabel","validateTrigger","whitespace","noStyle","MinusCircleOutlined","margin","PlusOutlined","labelCol","wrapperCol","offset","RulesMeeting","TabPane","Tabs","Items","FormItems","defaultActiveKey","tab","BookOutlined","AccountBookOutlined","OrderedListOutlined","Record","AuditOutlined","Step","Steps","Questions","current","questions","progressDot","q","next","submit","prev","Choices","questionId","answers","Group","e","qId","change","choices","choice","radioStyle","getQuestions","questtionaireID","getQuesttionaire","getChoices","questionID","saveGradedQuesttionaire","gradedQuesttionaire","getGradedInQuesttionaire","obj","hasOwnProperty","RespondQuiz","visibleDrawer","showModal","visibleModal","handleOk","handleChange","saveGraded","questtionaire_id","questtionaire","sizeAnswers","questionsID","listChoices","finalListChoices","auxChoices","auxAnswers","rate","HighlightOutlined","question","marginTop","order","cancelButtonProps","afterClose","tooltips","desc","ChartsQuesttionaire","gradeds","graded","cx","cy","labelLine","renderCustomizedLabel","outerRadius","fill","dataKey","entry","COLORS","RADIAN","Math","PI","midAngle","innerRadius","percent","radius","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","ResultQuiz","AreaChartOutlined","ProjectList","valid","usersInGraded","data_meeting","rules_meeting","agendas_meeting","users_meeting","auxUsers","auxRules","auxAgendas","respondUser","FormItem","QuestionForm","k","keys","getFieldValue","setFieldsValue","nextKeys","concat","getFieldDecorator","initialValue","formItems","FormCreateQuiz","formCount","preventDefault","slugProjet","slugProjeto","el","addQuesttionaire","formLayout","onSubmit","htmlType","QuizCreatorForm","create","connect","auth","exact","path","component","FormSectorCreate","CreateFormSector","FormUserCreate","is_administrator_valid","type_user","password1","password2","CreateFormUser","Password","FormProjectCreate","CreateFormProject","FormMeetingCreate","onSearch","val","projects_list","count","auxProject","pId","CreateFormMeeting","optionFilterProp","input","option","dropdownStyle","maxHeight","overflow","treeData","treeDefaultExpandAll","DropdownNav","overlay","UserOutlined","TeamOutlined","UserAddOutlined","LogoutOutlined","DownOutlined","AppstoreAddOutlined","EnvironmentOutlined","FormLogin","visibleForm","cancel","onAuth","CollectionCreateForm","Header","Navbar","mode","isLogged","Dropdown","getRandomInt","max","min","floor","random","Complete","options","setOptions","dropdownMatchSelectWidth","query","Array","join","split","idx","category","justifyContent","rel","Search","enterButton","Footer","AutoComplete","GithubOutlined","InstagramOutlined","App","onTryAutoSignup","Boolean","hostname","updateObject","oldObject","updateProperties","initialState","loading","authStart","action","authFail","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","app","pt_BR","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1eafc36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default_user.11bee53e.jpg\";","import axios from 'axios';\n\nimport { AUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT } from '../consts';\n\nexport const authStart = () => {\n\treturn {\n    \ttype: AUTH_START\n  \t};\n};\n\nexport const authSuccess = user => {\n\treturn {\n    \ttype: AUTH_SUCCESS,\n    \tuser\n  \t};\n};\n\nexport const authFail = error => {\n\treturn {\n\t\ttype: AUTH_FAIL,\n    \terror: error\n  \t};\n};\n\nexport const logout = () => {\n\tlocalStorage.removeItem('user');\n\treturn {\n\t\ttype: AUTH_LOGOUT\n\t};\n};\n\nexport const checkAuthTimeout = expirationTime => {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout());\n\t\t}, expirationTime * 1000);\n\t};\n};\n\nexport const authCheckState = () => {\n\treturn dispatch => {\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tif (user === undefined || user === null) {\n\t\t\tdispatch(logout());\n\t\t} else {\n\t\t\tconst expirationDate = new Date(user.expirationDate);\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout());\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccess(user));\n\t\t\t\tdispatch(\n\t\t\t\t\tcheckAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n  \t};\n};\n\nexport const authLogin = (username, password) => {\n\treturn dispatch => {\n\t\tdispatch(authStart());\n\t\taxios.post('http://0.0.0.0:8000/rest-auth/login/', {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t})\n\t\t.then(res => {\n\t\t\tconst user = {\n\t\t\t\ttoken: res.data.key,\n\t\t\t\tusername,\n\t\t\t\tuserId: res.data.user,\n\t\t\t\tis_administrator: res.data.user_type.is_administrator,\n\t\t\t\tis_participant: res.data.user_type.is_participant,\n\t\t\t\tramal: res.data.ramal,\n\t\t\t\tname: res.data.name,\n\t\t\t\texpirationDate: new Date(new Date().getTime() + 3600 * 1000)\n\t\t\t};\n\t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\t\tdispatch(authSuccess(user));\n\t\t\tdispatch(checkAuthTimeout(3600));\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch(authFail(err));\n\t\t});\n\t};\n};","import axios from 'axios';\n\nimport { BASE_URL_USERS } from '../consts';\nimport { logout } from './auth';\n\nexport const getUserId = () => {\n\tconst user = JSON.parse(localStorage.getItem('user'));\n\tconst userId = user.userId;\n\t\n\treturn userId;\n};\n\nexport const getUserToken = () => {\n\tlet token = null;\n\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\n\tif(user !== null) {\n\t\ttoken = user.token;\n\t\treturn token;\n\t} else {\n\t\treturn token;\n\t}\n};\n\nexport const authSignup = async (user) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json'\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.post('http://0.0.0.0:8000/rest-auth/registration/', user);\n\t\treturn data;\n\t} catch(err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getCurrentUser = async (token, userId) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }user_detail/${ userId }/`);\n\t\treturn data;    \n\t} catch(err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const updateUser = async (token, user) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_USERS }user_edit/${ user.id }/`, user);\n\t\treturn true;\n\t} catch(err) {\n\t\treturn false;\n\t}\n};\n\nexport const deleteUserLogout = async (token, userId) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_USERS }user_delete/${ userId }/`);\n\t\tlogout();\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const deleteUser = async (token, userId) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_USERS }user_delete/${ userId }/`);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsers = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersInSector = async (token, sectorID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_sector/${ sectorID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUserInProject = async (token, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_project/${ projectID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUserNotInProject = async (token, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_not_in_project/${ projectID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersInMeeting = async (token, meetingID, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_project_and_meeting/${ meetingID }/${ projectID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersInProjectAndNotInMeeting = async (token, meetingID, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_in_project_and_not_in_meeting/${ meetingID }/${ projectID }`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getUsersNotInMeeting = async (token, meetingID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tconst { data } = await axios.get(`${ BASE_URL_USERS }users_not_in_meeting/${ meetingID }/`);\n\t\treturn data;\n\t} catch {\n\t\treturn false;\n\t}\n};","import React, { Component } from 'react';\nimport { \n    Input, Button, Form, message, Drawer, Col, Row, Select, InputNumber, notification  \n} from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\n\n\nimport { getUserToken, updateUser } from '../../../store/user';\nimport { saveImage, editImage } from '../../../store/images';\nimport { getSectors } from '../../../store/sector';\nimport { validateUpdate, typeUser, typeUserValidate } from '../../../services/userService';\nimport { sort } from '../../../services/sortService';\n\nconst { Option } = Select;\n\nclass FormUserEdit extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            sectors: [],\n            visible: false,\n            image: null,\n            token: null\n        }\n\n        global.image = null;\n        \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.beforeUpload = this.beforeUpload.bind(this);\n        this.fileSelectHandler = this.fileSelectHandler.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ \n            sectors: sectors,\n            token: token \n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    beforeUpload(file) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        \n        if (!isJpgOrPng) {\n            message.error('Você Só Pode Carregar Arquivos JPG/PNG!');\n        }\n\n        if (!isLt2M) {\n            message.error('Imagem Deve Ser Menor Que 2MB!');\n        }\n\n        return isJpgOrPng && isLt2M;\n    }\n\n    fileSelectHandler = event => {\n        const file = event.target.files[0];\n        \n        if(this.beforeUpload(file)) {\n            global.image = file;\n        } else {\n            \n        }\n    }\n\n    async handleSubmit(values, sectorID) {\n        const token = this.state.token;\n        const image = new FormData();\n        let type = typeUserValidate(values.type);\n        let imageUser = null;\n        let imageID = '';\n        let sector = values.sector;\n\n        if(global.image === null) {\n\n        } else {\n            if(this.props.user.image !== null) {\n                imageID = this.props.user.image;\n                image.append('image', global.image, global.image.name);\n                imageUser = await editImage(token, image, imageID);\n            } else {\n                image.append('image', global.image, global.image.name);\n                imageUser = await saveImage(token, image);\n                imageID = imageUser.id;\n            }\n        }\n\n        if(sector === undefined || sector === null) {\n            sector = sectorID;\n        } else {\n\n        }\n\n        let user = {\n            id: this.props.user.id,\n            email: this.props.user.email,\n            username: this.props.user.username,\n            ramal: values.ramal,\n            name: values.name,\n            sector: sector,\n            is_administrator: !type,\n            is_participant: type,\n            description: values.description,\n            image: imageID\n        };\n\n        user = validateUpdate(user, this.props.user);\n        const status = await updateUser(token, user);\n        global.image = null;\n\n        if(status === true) {\n            window.location.reload(false);\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Erro em Ação',\n                description: 'Erro ao Atualizar o Usuário, Tente Novamente!.',\n            });\n            notification.open({\n                type: 'info',\n                message: 'Ação Requerida',\n                description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n            });\n        }\n    }\n\n    render() {\n        let sectorID = null;\n        let data = { sectors: [] };\n        const type = typeUser(this.props.user.is_administrator);\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            if(this.props.user.sector === null) {\n\n            } else {\n                if(this.props.user.sector === this.state.sectors[aux].name) {\n                    sectorID =  this.state.sectors[aux].id;\n                }\n            }\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n            });\n        }\n        data.sectors.sort(sort('name'));\n        const FormUserEdit = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Edição da Conta de ${ this.props.user.name }` }\n                    width = { 720 } onClose = { this.onClose } visible = { this.state.visible }\n                    bodyStyle = {{ paddingBottom: 80 }}\n                    footer = {\n                        <div style ={{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values, sectorID);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <h4 style = {{ color: 'red', marginLeft: 30 }} align = 'center'> \n                        Caso Não Queira Alterar um Campo, Basta Deixa-lo Em Branco. \n                    </h4>\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 12 }>\n                                <Form.Item \n                                    name = 'name' label = 'Nome' rules = {[{ required: false }]}\n                                >\n                                    <Input maxLength = { 40 } />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'ramal' label = 'Ramal' rules = {[{ required: false }]}\n                                >\n                                    <InputNumber maxLength = { 6 } />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            {\n                                type === 'Administrador' ? (\n                                    <Col span = { 8 }>\n                                        <Form.Item \n                                            name = 'type' label = 'Tipo de Usuário' \n                                            rules = {[{ required: false }]}\n                                        >\n                                            <Select>\n                                                <Option key = '1' value = { 'Administrador' }> \n                                                    Administrador \n                                                </Option>\n                                                <Option key = '2' value = { 'Participante' }>\n                                                    Participante\n                                                </Option>\n                                            </Select>\n                                        </Form.Item>\n                                    </Col>\n                                ): null\n                            }\n                        </Row>\n                        \n                        <Row gutter = { 18 }>\n                            <Col span = { 18 }>\n                                <Form.Item\n                                    name = 'sector' label = 'Setor' rules = {[{ required: false }]}\n                                >\n                                    <Select>\n                                        { data.sectors.map(sector =>\n                                            <Option value = { sector.key } key = { sector.key }> \n                                                { sector.name } \n                                            </Option> \n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <input type = 'file' onChange = { this.fileSelectHandler }/>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 24 }>\n                                <Form.Item \n                                    name = 'description' label = 'Descrição'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <Input.TextArea rows = { 4 } maxLength = { 500 } />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        }\n        return(\n            <div>\n                <Button type = 'ghost' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined /> <b> Editar </b>  \n                </Button>\n                <FormUserEdit />\n            </div>\n        );\n    }\n}\n\nexport default FormUserEdit;","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const BASE_URL_USERS = 'http://0.0.0.0:8000/users/';\nexport const BASE_URL_IMAGES = 'http://0.0.0.0:8000/images/';\nexport const BASE_URL_SECTORS = 'http://0.0.0.0:8000/sectors/';\nexport const BASE_URL_PROJECTS = 'http://0.0.0.0:8000/projects/';\nexport const BASE_URL_MEETING = 'http://0.0.0.0:8000/meetings/';\nexport const BASE_URL_RULES = 'http://0.0.0.0:8000/rules/';\nexport const BASE_URL_AGENDAS = 'http://0.0.0.0:8000/agendas/';\nexport const BASE_URL_COMMENTS = 'http://0.0.0.0:8000/comments/';\nexport const BASE_URL_QUESTIONS = 'http://0.0.0.0:8000/questions/';\nexport const BASE_URL_QUESTTIONAIRE = 'http://0.0.0.0:8000/questtionnaires/';\nexport const BASE_URL_CHOICES = 'http://0.0.0.0:8000/choices/';\nexport const BASE_URL_GRADEDQUESTTIONAIRE = 'http://0.0.0.0:8000/gradedQuesttionaire/';","export const sort = (property) => {\n    var sortOrder = 1;\n\n    if(property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n    }\n\n    return function (a,b) {\n        if(sortOrder === -1){\n            return b[property].localeCompare(a[property]);\n        }else{\n            return a[property].localeCompare(b[property]);\n        }        \n    }\n}","import axios from 'axios';\n\nimport { BASE_URL_SECTORS } from '../consts';\n\nexport const getSectors = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_SECTORS }`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getSector = async (token, slug) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_SECTORS }detail/${ slug }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveSector = async (token, sector) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.post(`${ BASE_URL_SECTORS }create/`, sector);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editSector = async (token, sector) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.put(`${ BASE_URL_SECTORS }update/${ sector.sectorID }/`, sector);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const deleteSector = async(token, sectorID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_SECTORS }delete/${ sectorID }/`);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};","import { message } from 'antd';\n\nexport const validateFields = (username) => {\n    if(username.length < 3) {\n        message.warning('Os usuários não tem menos que 3 caracteres!');\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport const typeUser = (is_administrator) => {\n    if(is_administrator === true) {\n        return 'Administrador';\n    } else {\n        return 'Participante';\n    }\n}\n\nexport const typeUserValidate = (is_administrator) => {\n    if(is_administrator === 'Administrador') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport const validateUpdate = (user, currentUser) => {\n    if(user.name === '' || user.name === null || user.name === undefined) {\n        user.name = currentUser.name;\n    } if(user.ramal === '' || user.ramal === null || user.ramal === undefined) {\n        user.ramal = currentUser.ramal;\n    } if(user.email === '' || user.email === null || user.email === undefined) {\n        user.email = currentUser.email;\n    } if(user.image === '' || user.image === null || user.image === undefined) {\n        user.image = currentUser.image;\n    } if(user.description === '' || user.description === null || user.description === undefined) {\n        user.description = currentUser.description;\n    } if(user.is_administrator === '' || user.is_administrator === null || user.is_administrator === undefined) {\n        user.is_administrator = currentUser.is_administrator;\n        user.is_participant = !currentUser.is_administrator;\n    }\n    \n    return user;\n}","const Hoc = props => props.children;\n\nexport default Hoc;","import React from 'react';\n\nconst Homepage = () => {\n    return (\n        <div className = 'centralContent'>\n            <p className = 'textContent'>\n                Bem Vindo ao sistema de Gerenciamento de Reuniões e Atas (Grata), o \n                software que a sua empresa necessita para alcançar maiores níveis de\n                aproveitamento em seus encontros. Planeje suas reuniões, defina os\n                participantes, gere atas, diminua o desperdício de tempo com papeis e\n                deixe que o Grata ajude você e sua empresa a alcançar seus objetivos\n                estratégicos.\n                <br></br>\n                <br></br>                                \n                O Grata é uma ferramenta Open-Source,\n                ou seja, o código dela é aberto e pode ser encontrado nos repositórios \n                <a href = 'https://github.com/FGAProjects/Grata-Frontend'> FrontEnd </a> \n                e <a href = 'https://github.com/FGAProjects/Grata-Backend'>Backend.</a>\n                <br></br>\n                Caso Deseje uma documentação sobre o projeto, basta clicar neste\n                <a href = 'https://github.com/FGAProjects/TCC'> link</a>.\n                <br></br>\n                Contato com o desenvolvedor via github: \n                <a href = 'https://github.com/MrVictor42'> MrVictor42</a>.\n            </p>\n        </div>\n    );\n}\n\nexport default Homepage;","import React from 'react';\nimport { Card } from 'antd';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nconst { Meta } = Card;\n\nconst UserPhoto = (props) => {\n    let image = null;\n\n    if(props.image === null) {\n        image = DefaultUser;\n    } else {\n        image = props.image;\n    }\n    \n    return(\n        <Card \n            cover = { <img alt = 'avatar' src = { image } /> } \n            hoverable className = 'imgAvatar'>\n            <Meta title = 'Foto do Usuário' description = { `Foto de Perfil de ${ props.user.name }` } />\n        </Card>\n    );\n};\n\nexport default UserPhoto;","import React, { Component } from 'react';\nimport { Button, Modal, notification } from 'antd';\nimport { withRouter } from 'react-router';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport { \n    getUserToken, deleteUser, deleteUserLogout, getCurrentUser, getUserId } \nfrom '../../../store/user';\n\nconst { confirm } = Modal;\n\nclass FormUserDelete extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n            token: null\n        }\n\n        this.showDeleteConfirm = this.showDeleteConfirm.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n\n        this.setState({ \n            currentUser: user,\n            token: token \n        });\n    }\n\n    showDeleteConfirm() {\n        const { currentUser } = this.state;\n        const token = this.state.token;\n        const propsForms = this.props;\n        let name = this.props.user.name\n        let userID = this.props.user.key;\n\n        if(currentUser.name === this.props.user.name) {\n            confirm ({\n                title: 'Exclusão de Conta',\n                content: 'Tem Certeza Que Deseja Excluir Sua Conta, Caro(a) ' + name  + '?',\n                okText: 'Sim',\n                okType: 'danger',\n                cancelText: 'Não',\n            \n                onOk() {\n                    deleteUserLogout(token, userID);\n                    Modal.success({\n                        title: 'Ação Concluída!',\n                        content: 'Conta Excluída Com Sucesso!',\n                    });\n                    propsForms.history.push('/')\n                },\n                onCancel() {\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Cancelada',\n                        description: 'Exclusão de Conta Cancelada Com Sucesso!',\n                    });\n                },\n            });\n        } else {\n            confirm ({\n                title: 'Exclusão de Conta',\n                content: 'Tem Certeza Que Deseja Excluir A Conta de ' + name  + '?',\n                okText: 'Sim',\n                okType: 'danger',\n                cancelText: 'Não',\n            \n                onOk() {\n                    deleteUser(token, userID);\n                    Modal.success({\n                        title: 'Ação Concluída!',\n                        content: 'Conta Excluída Com Sucesso! Atualize a Página!',\n                    });\n                },\n                onCancel() {\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Cancelada',\n                        description: 'Exclusão de Conta Cancelada Com Sucesso!',\n                    });\n                },\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Button type = 'primary' danger onClick = { this.showDeleteConfirm }> \n                <DeleteOutlined /> <b> Excluir Conta </b> \n            </Button>\n        );\n    }\n}\n\nexport default withRouter(FormUserDelete);","import React, { Component } from 'react';\nimport { Layout, Descriptions, Divider } from 'antd';\n\nimport UserPhoto from './UserPhoto';\nimport FormUserEdit from '../forms/user/FormUserEdit';\nimport FormUserDelete from '../forms/user/FormUserDelete';\n\nimport { getCurrentUser, getUserToken, getUserId } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { typeUser } from '../../services/userService';\n\nconst { Content } = Layout;\n\nclass UserDetail extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n            image: null\n        }\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        let imageUser = null;\n\n        if(user.image === null) {\n\n        } else {\n            imageUser = await getImage(token, user.image);\n            this.setState({ image: imageUser.image });\n        }\n\n        this.setState({ currentUser: user });\n    }\n\n    render() {\n        const { currentUser } = this.state;\n        const type = typeUser(currentUser.is_administrator);\n        return (\n            <div className = 'itemsatuais'>\n                <h1 className = 'h1Content'> Informações Pré-Cadastradas de { currentUser.name } </h1>\n                <div className = 'item'>\n                    <Content className = 'painelContent'>\n                        <Descriptions \n                            className = 'descriptionTitle'\n                            column = {{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                        >\n                            <Descriptions.Item label = { <b> Nome de Usuário </b> }> \n                                { currentUser.username }\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label = { <b> Tipo de Usuário </b> }> \n                                { type }\n                            </Descriptions.Item>\n                            <Divider/>\n            \n                            <Descriptions.Item label = { <b> Nome Completo </b> }> \n                                { currentUser.name } \n                            </Descriptions.Item>\n                        \n                            <Descriptions.Item label = { <b> Ramal </b> }> \n                                { currentUser.ramal }\n                            </Descriptions.Item>\n                            <br></br>\n                        \n                            <Descriptions.Item label = { <b> Setor </b> }> \n                                { currentUser.sector }\n                            </Descriptions.Item>\n                            <br></br>\n                            <br></br>\n            \n                            <Descriptions.Item label = { <b> Descrição </b> }> \n                                { currentUser.description }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </Content>\n\n                    <Content className = 'contentBottomEdit'>\n                        <FormUserEdit user = { currentUser } />\n                    </Content>\n\n                    <Content className = 'contentBottomDelete'>\n                        <FormUserDelete user = { currentUser } />\n                    </Content>\n                </div>\n                <div class = 'item2'>\n                     <Content> \n                        <UserPhoto user = { currentUser } image = { this.state.image }/>\n                     </Content>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserDetail;","import React, { Component } from 'react';\nimport { Drawer, Divider, Col, Row, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\n\nclass UserInfo extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n\t\t}\n\t\t\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t}\n\t\n\tshowDrawer = () => {\n        this.setState({ visible: true });\n\t};\n\n\tonClose = () => {\n        this.setState({ visible: false });\n\t};\n\n    render() {\n        return (\n            <div>\n\t\t\t\t<Button type = 'primary' onClick = { this.showDrawer }> \n\t\t\t\t\t<EyeOutlined /> <b> Ver Mais </b> \n\t\t\t\t</Button>\n\t\t\t\t<Drawer\n\t\t\t\t\twidth = { 640 }\n\t\t\t\t\tplacement = 'right'\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t>\n\t\t\t\t\t<p \n\t\t\t\t\t\tclassName = 'site-description-item-profile-p' \n\t\t\t\t\t\tstyle = {{ ...pStyle, marginBottom: 24 }}>\n\t\t\t\t\t\t\t<b> Perfil do Usuário: { this.props.user.name } </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className = 'site-description-item-profile-p' style = { pStyle }>\n\t\t\t\t\t\t<b> Perfil </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Nome' content = { this.props.user.name } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Usuario' content = { this.props.user.username } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Ramal' content = { this.props.user.ramal } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span = { 12 }>\n\t\t\t\t\t\t\t<DescriptionItem title = 'Permissão' content = { this.props.user.permission } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 24 }>\n\t\t\t\t\t\t\t<DescriptionItem\n\t\t\t\t\t\t\t\ttitle = 'Descrição' content = { this.props.user.description }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Divider/>\n\t\t\t\t\t<p className = 'site-description-item-profile-p' style = { pStyle }>\n\t\t\t\t\t\t<b> Setor </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span = { 24 }>\n\t\t\t\t\t\t\t<DescriptionItem\n\t\t\t\t\t\t\t\ttitle = 'Nome do Setor' content = { this.props.user.sector }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Divider/>\n\t\t\t\t\t<p className = 'site-description-item-profile-p' style = { pStyle }>\n\t\t\t\t\t\t<b> Projetos Que Participa </b>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Divider/>\n            \t</Drawer>\n\t\t\t</div>\n        );\n    }\n}\n\nconst pStyle = { fontSize: 16, lineHeight: '24px', display: 'block', marginBottom: 16 };\nconst DescriptionItem = ({ title, content }) => (\n    <div\n      \tclassName = 'site-description-item-profile-wrapper'\n      \tstyle = {{ fontSize: 14, lineHeight: '22px', marginBottom: 7 }}\n    >\n\t\t<p \n\t\t\tclassName = 'site-description-item-profile-p' \n\t\t  \tstyle = {{ marginRight: 8, display: 'inline-block' }}\n      \t>\n    \t\t{ title }:\n      \t</p>\n      \t{ content }\n    </div>\n);\n\nexport default UserInfo;","import React, { Component } from 'react';\nimport { List, Avatar } from 'antd';\n\nimport UserInfo from './UserInfo';\nimport FormUserEdit from '../forms/user/FormUserEdit';\nimport FormUserDelete from '../forms/user/FormUserDelete';\nimport DefaultUser from '../../img/default_user.jpg';\n\nimport { getUsers, getUserToken } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { typeUser } from '../../services/userService';\nimport { sort } from '../../services/sortService';\n\nclass UserList extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            users: [],\n            visible: false\n\t\t}\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const users = await getUsers(token);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image,\n                username: users[aux].username,\n                description: users[aux].description,\n                sector: users[aux].sector,\n                is_administrator: users[aux].is_administrator\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n\t}\n\t\n    render() {\n        let data = { users: [] };\n        let typePermission = null;\n        \n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            typePermission = typeUser(this.state.users[aux].is_administrator);\n            data.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image,\n                description: this.state.users[aux].description,\n                sector: this.state.users[aux].sector,\n                username: this.state.users[aux].username,\n                permission: typePermission\n            });\n        }\n\n        data.users.sort(sort('name'));\n        return (\n            <List\n                dataSource = { data.users } pagination = {{ defaultPageSize: 4 }} \n                bordered className = 'userList'\n                renderItem = { user => (\n                    <List.Item\n                        key = { user.key } \n                        actions = {[\n                            <UserInfo user = { user } />,\n                            <FormUserEdit user = { user } />, \n                            <FormUserDelete user = { user } />\n                        ]}\n                    >\n                        <List.Item.Meta\n                            avatar = { <Avatar src = { user.image } /> }\n                            title = { user.name } description = { user.description }\n                        />\n                    </List.Item>\n                )}\n            />\n        );\n\t}    \n}\nexport default UserList;","import axios from 'axios';\n\nimport { BASE_URL_PROJECTS } from '../consts';\n\nexport const getProjects = async (token, sectorID) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_PROJECTS }projects_in_sector/${ sectorID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getAllProjects = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_PROJECTS }`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getProject = async (token, projectID) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_PROJECTS }detail/${ projectID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveProject = async (token, project) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.post(`${ BASE_URL_PROJECTS }create/`, project);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editProject = async (token, project) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.put(`${ BASE_URL_PROJECTS }update/${ project.projectID }/`, project);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n}\n\nexport const deleteProject = async (token, projectID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n\t\tawait axios.delete(`${ BASE_URL_PROJECTS }delete/${ projectID }/`);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const addUsersProject = async (token, project) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_PROJECTS }add_users_project/${ project.projectID }/`, project);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const removeUsersProject = async (token, project) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_PROJECTS }remove_users_project/${ project.projectID }/`, project);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, Modal, notification } from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\n\nimport { getUserToken } from '../../../store/user';\nimport { editProject, getAllProjects } from '../../../store/project';\n\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nclass FormProjectEdit extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            projects: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const projects = await getAllProjects(token);\n\n        this.setState({ \n            token: token,\n            projects: projects \n        });\n    }\n\n    async handleSubmit(values) {\n\n        const projects = this.state.projects;\n\n        let found = projects.find(project => {\n            if(project.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined \n        || values.title === '' || values.title === undefined) {\n\n            const idProject = this.props.project.key;\n            const token = this.state.token;\n            let statusProject = null;\n            let title = null;\n            let sector = this.props.sector.id;\n\n            if(values.title === undefined || values.title === '') {\n                title = this.props.project.title;\n            } else {\n                title = values.title;\n            }\n\n            if(values.status === undefined || values.status === 'pending' \n            || values.status === 'empty') {\n\n                const project = {\n                    projectID: idProject,\n                    status: 'Pendente',\n                    sector: this.props.sector.id,\n                    title: title\n                };\n\n                statusProject = await editProject(token, project);\n\n                if(statusProject !== true) {\n                    window.location.reload(false);\n                } else {\n                    notification.open({ \n                        type: 'error',\n                        message: 'Erro em Ação',\n                        description: 'Erro ao Atualizar o Projeto, Tente Novamente!.',\n                    });\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Requerida',\n                        description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n                    });\n                }\n            } else {\n                title = this.props.project.title;\n                confirm ({\n                    title: 'Cancelamento de Projeto',\n                    content: 'Tem Certeza Que Deseja Cancelar Este Projeto? Todas as Reuniões e ' + \n                    'Seus Documentos Serão Perdidos! do Projeto Serão Canceladas!',\n                    okText: 'Sim',\n                    okType: 'danger',\n                    cancelText: 'Não',\n                \n                    onOk() {\n                        const project = {\n                            projectID: idProject,\n                            title: title,\n                            sector: sector,\n                            status: 'Cancelada'\n                        }\n\n                        editProject(token, project);\n                        \n                        Modal.success({\n                            title: 'Ação Concluída!',\n                            content: 'Projeto Cancelado Com Sucesso!',\n                        });\n                        notification.open({\n                            type: 'info',\n                            message: 'Ação Requerida',\n                            description: 'Por Favor, Atualize a Página.',\n                        });\n                    },\n                    onCancel() {\n                        notification.open({\n                            type: 'success',\n                            message: 'Ação Cancelada',\n                            description: 'Cancelamento de Projeto Cancelado Com Sucesso!',\n                        });\n                    },\n                });\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Projeto Não Atualizado',\n                description: 'Já Existe Um Projeto Com Este Nome/Título Neste ou em Outro Setor. ' +\n                            'Utilize Outro Nome!'\n            });\n        }\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };    \n\n    render() {\n        const FormProjectEdit = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Editar o Projeto: ${ this.props.project.title }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }} >\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form layout = 'vertical' hideRequiredMark>\n                        <h1> Informações Cadastradas </h1>\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Nome do Projeto'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.project.title }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 8 }>\n                            <Col span = { 8 }>\n                                <Form.Item label = 'Status do Projeto'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.project.tags } \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'title' label = 'Nome do Projeto'\n                                    rules = {[{ \n                                        required: false, \n                                        message: 'Por Favor, Insira o Nome do Projeto',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Projeto'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        \n                        <Row gutter = { 8 }>\n                            <Col span = { 8 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status do Projeto'\n                                    rules = {[{ \n                                        required: false, \n                                        message: 'Por Favor, Escolha o Status do Projeto',\n                                    }]}\n                                >\n                                    <Select>\n                                        <Option value = 'empty'> </Option>\n                                        <Option value = 'pending'> Pendente </Option>\n                                        <Option value = 'canceled'> Cancelar Reunião </Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <Button type = 'default' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined/> Editar \n                </Button>\n                <FormProjectEdit />\n            </div>\n        );\n    }\n}\n\nexport default FormProjectEdit;","import React, { Component } from 'react';\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { SaveOutlined, StopOutlined, UsergroupAddOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport difference from 'lodash/difference';\n\nimport { getUserToken, getUserNotInProject } from '../../../store/user';\nimport { addUsersProject } from '../../../store/project';\nimport { sort } from '../../../services/sortService';\n\nclass FormAddUsersProject extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tasync componentDidMount() {\n        const token = getUserToken();\n\t\tconst projectID = this.props.project.key;\n\t\tconst users = await getUserNotInProject(token, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n\t}\n\t\n    showDrawer = () => {\n      \tthis.setState({ visible: true });\n    };\n  \n    onClose = () => {\n      \tthis.setState({ visible: false });\n    };\n  \n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n\t};\n\n\tasync handleSubmit() {\n\t\tif(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionado',\n                description: 'Por Favor, Adicione Pelo Menos Uma Pessoa ao Projeto',\n\t\t\t});\n\t\t} else {\n\t\t\tconst token = this.state.token;\n\t\t\tconst users = [];\n\t\t\tconst idProject = this.props.project.key;\n\t\t\tconst sector = this.props.sector.id;\n\t\t\tlet status = null;\n\n\t\t\tfor(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n\t\t\t}\n\n\t\t\tconst project = {\n\t\t\t\tprojectID: idProject,\n\t\t\t\tsector: sector,\n\t\t\t\ttitle: this.props.project.title,\n\t\t\t\tstatus: this.props.project.status,\n\t\t\t\tusers\n\t\t\t};\n\n\t\t\tstatus = await addUsersProject(token, project);\n\n\t\t\tif(status === true) {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Adicionados',\n\t\t\t\t\tdescription: 'Os Usuários Foram Adicionados ao Projeto Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t} else {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Adicionar Membros',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Adicionar ' +  \n\t\t\t\t\t\t\t\t 'os Usuários ao Projeto!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t}\n\t\t}\n\t}\n    \n    render() {\n\t\tconst { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Button type = 'primary' onClick = { this.showDrawer } ghost>\n\t\t\t\t\t<UsergroupAddOutlined /> <b> Adicionar Membros </b>\n\t\t\t\t</Button>\n\t\t\t\t<Drawer\n\t\t\t\t\ttitle = { `Adicionar Usuários no Projeto: ${ this.props.project.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Cadastrar Membros no Projeto\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n\t\t\t\t\t<TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Adicionar Usuários', 'Não Adicionar' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Drawer>\n\t\t\t</div>\n      \t);\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n  \nexport default withRouter(FormAddUsersProject);","import React, { Component } from 'react';\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { UsergroupDeleteOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport difference from 'lodash/difference';\n\nimport { getUserToken, getUserInProject } from '../../../store/user';\nimport { removeUsersProject } from '../../../store/project';\nimport { sort } from '../../../services/sortService';\n\nclass FormRemoveUserProject extends Component {\n\n    constructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tasync componentDidMount() {\n        const token = getUserToken();\n\t\tconst projectID = this.props.project.key;\n\t\tconst users = await getUserInProject(token, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n\t}\n\t\n    showDrawer = () => {\n      \tthis.setState({ visible: true });\n    };\n  \n    onClose = () => {\n      \tthis.setState({ visible: false });\n    };\n  \n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n\t};\n\n\tasync handleSubmit() {\n\t\tif(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionada!',\n\t\t\t\tdescription: 'Por Favor, Adicione Pelo Menos Uma Pessoa Para Remover do Projeto! ' + \n\t\t\t\t\t\t\t 'Ou Cancele Esta Ação de Retirar Usuário do Projeto!',\n\t\t\t});\n\t\t} else {\n\t\t\tconst token = this.state.token;\n\t\t\tconst users = [];\n\t\t\tconst idProject = this.props.project.key;\n\t\t\tconst sector = this.props.sector.id;\n\t\t\tlet status = null;\n\n\t\t\tfor(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n\t\t\t}\n\n\t\t\tconst project = {\n\t\t\t\tprojectID: idProject,\n\t\t\t\tsector: sector,\n\t\t\t\ttitle: this.props.project.title,\n\t\t\t\tstatus: this.props.project.status,\n\t\t\t\tusers\n\t\t\t};\n\n\t\t\tstatus = await removeUsersProject(token, project);\n\n\t\t\tif(status === true) {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Removidos!',\n\t\t\t\t\tdescription: 'Os Usuários Foram Removidos do Projeto Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Por Favor, Atualize a Página!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t} else {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Remover Membros!',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Remover ' +  \n\t\t\t\t\t\t\t\t 'os Usuários do Projeto!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n\t\t\t\tthis.props.history.push(`/setor/${ this.props.sector.slug }`);\n\t\t\t}\n\t\t}\n\t}\n\n    render() {\n        const { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n        return (\n            <div>\n                <Button onClick = { this.showDrawer } danger> \n                    <UsergroupDeleteOutlined /> <b> Remover Membros </b> \n                </Button>\n                <Drawer\n\t\t\t\t\ttitle = { `Remover Usuários do Projeto: ${ this.props.project.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Remover Membros do Projeto\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n\t\t\t\t\t<TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Remover Usuários', 'Não Remover' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Drawer>\n            </div>\n        );\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n\nexport default withRouter(FormRemoveUserProject);","import React, { Component } from 'react';\nimport { Drawer, Button, List, Avatar } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons'; \n\nimport { getUserToken, getUserInProject } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { sort } from '../../services/sortService';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nclass ProjectMembers extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            users: [],\n            visible: false\n        }\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const projectID = this.props.project.key;\n        const users = await getUserInProject(token, projectID);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n    }\n    \n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    render() {\n        let data_users = { users: [] };\n\n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data_users.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image\n            });\n        }\n\n        data_users.users.sort(sort('name'));\n        const FormProjectMembers = () => {\n            return (\n                <Drawer\n                    title = { `Membros no Projeto: ${ this.props.project.title }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { null }\n                >\n                    <List\n                        dataSource = { data_users.users } pagination = {{ defaultPageSize: 4 }} \n                        bordered className = 'userMembers'\n                        renderItem = { user => (\n                            <List.Item key = { user.key } >\n                                <List.Item.Meta\n                                    avatar = { <Avatar src = { user.image } /> }\n                                    title = { `Nome: ${ user.name }` } \n                                    description = {\n                                        <div>\n                                            <b> Email: </b> { user.email } <br/>\n                                            <b> Ramal: </b> { user.ramal } <br/>\n                                        </div>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    />\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <Button type = 'default' onClick = { this.showDrawer }>\n                    <EyeOutlined /> <b> Membros no Projeto </b>\n                </Button>\n                <FormProjectMembers/>\n            </div>\n        )\n    }\n}\n\nexport default ProjectMembers;","import React, { Component } from 'react';\nimport { Button, Table, Tag, Space } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { EyeOutlined } from '@ant-design/icons';\n\nimport FormProjectEdit from '../forms/project/FormProjectEdit';\nimport FormAddUsersProject from '../forms/project/FormAddUsersProject';\nimport FormRemoveUserProject from '../forms/project/FormRemoveUsersProject';\nimport ProjectMembers from '../project/ProjectMembers';\n\nimport { getSector } from '../../store/sector';\nimport { getUserToken, getUserId, getCurrentUser } from '../../store/user';\nimport { getProjects } from '../../store/project';\nimport { sort } from '../../services/sortService';\n\nclass SectorDetail extends Component {\n    \n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            sector: {},\n            projects: [],\n            currentUser: {}\n        }\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const slug = this.props.match.params.slug;\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        const sector = await getSector(token, slug);\n        const projects = await getProjects(token, sector.id);\n\n        this.setState({ \n            sector: sector,\n            projects: projects,\n            currentUser: user \n        });\n    }\n\n    render() {\n        const { currentUser } = this.state;\n        let data = { projects: [] };\n\n        for(let aux = 0; aux < this.state.projects.length; aux ++) {\n            data.projects.push({\n                key: this.state.projects[aux].id,\n                title: this.state.projects[aux].title,\n                slug: this.state.projects[aux].slug,\n                status: this.state.projects[aux].status,\n                tags: [ this.state.projects[aux].status ],\n            });\n        }\n\n        data.projects.sort(sort('title'));\n        return (\n            <Table \n                dataSource = { data.projects } bordered className = 'userList'\n                pagination = {{ defaultPageSize: 4 }}\n                columns = {\n                    [{\n                        title: 'Título da Reunião',\n                        dataIndex: 'title',\n                        key: 'title',\n                    },\n                    {\n                        title: 'Status',\n                        key: 'tags',\n                        dataIndex: 'tags',\n                        render: tags => (\n                            <span>\n                                {\n                                tags.map(tag => {\n                                    let color = null;\n\n                                    if (tag === 'Pendente') {\n                                        color = 'orange';\n                                    } else if(tag === 'Cancelada') {\n                                        color = 'red'\n                                    } \n                                    else {\n                                        color = 'green';\n                                    }\n\n                                    return (\n                                        <Tag color = { color } key = { tag } >\n                                            <b> { tag.toUpperCase() } </b> \n                                        </Tag>\n                                    );\n                                })\n                            }\n                            </span>\n                        ),\n                    },\n                    {\n                        title: 'Opções',\n                        key: 'action',\n                        render: (record) => (\n                            <span>\n                                {\n                                    currentUser.is_administrator === false ? (\n                                        <Space \n                                            size = 'middle'\n                                            style = {{ marginLeft: 180, marginRight: -30 }}\n                                        >\n                                            <ProjectMembers project = { record } />\n                                            <Button type = 'primary'> \n                                                <Link to = { `/projeto/${ record.slug }/`}>\n                                                    <EyeOutlined /> <b> Ver Reuniões </b>\n                                                </Link>\n                                            </Button>\n                                        </Space>\n                                    ) : (\n                                        <span>\n                                            {\n                                                record.status === 'Cancelada' ? (\n                                                    null \n                                                ) : (\n                                                    <Space size = 'middle'>\n                                                        <FormAddUsersProject \n                                                            project = { record }\n                                                            sector = { this.state.sector } \n                                                        />\n                                                        <FormRemoveUserProject \n                                                            project = { record }\n                                                            sector = { this.state.sector } \n                                                        />\n                                                        <ProjectMembers  project = { record } />\n                                                        <Button type = 'primary'> \n                                                            <Link to = { `/projeto/${ record.slug }/`}>\n                                                                <EyeOutlined /> <b> Ir a Reuniões </b>\n                                                            </Link>\n                                                        </Button>\n                                                        <FormProjectEdit \n                                                            project = { record } \n                                                            sector = { this.state.sector }\n                                                        />\n                                                    </Space>\n                                                )\n                                            }\n                                        </span>\n                                    )\n                                }\n                            </span>\n                        ),\n                    },\n                ]}\n            />\n        );\n    }\n}\n\nexport default SectorDetail;","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, notification } from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\n\nimport { getUserToken } from '../../../store/user';\nimport { editSector, getSectors } from '../../../store/sector';\n\nclass FormSectorEdit extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            sectors: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ \n            token: token,\n            sectors: sectors \n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    async handleSubmit(values) {\n        const sectors = this.state.sectors;\n\n        let found = sectors.find(sector => {\n            if(sector.name === values.name) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined || this.props.sector.name === values.name) {\n            const token = this.state.token;\n            const initials = values.initials;\n            const name = values.name;\n            const sector = {\n                sectorID: this.props.sector.key,\n                name: name,\n                initials: initials\n            };\n            let status = null;\n\n            status = await editSector(token, sector);\n    \n            if(status === true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Setor Editado',\n                    description: 'Setor Editado Com Sucesso!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Por Favor, Atualize a Página!',\n                });\n                this.props.history.push('/lista_de_setores');\n            } else {\n                notification.open({\n                    type: 'error',\n                    message: 'Ação Cancelada',\n                    description: 'Erro Inesperado.. Tente Novamente!',\n                });\n                this.props.history.push('/lista_de_setores');\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Setor Não Atualizado',\n                description: 'Já Existe um Setor Com Este Nome! Por Favor, Cadastre Outro!',\n            });\n            this.props.history.push('/lista_de_setores');\n        }\n    }\n\n    render() {\n        const FormSectorEdit = () => {\n            const [form] = Form.useForm();\n            return (\n                <Drawer\n                    title = { `Editar Setor: ${ this.props.sector.name }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }} >\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form layout = 'vertical' hideRequiredMark>\n                        <h1> Informações Cadastradas </h1>\n                        <Row gutter = { 6 }>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Nome'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.sector.name }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 6 }>\n                            <Col span = { 4 }>\n                                <Form.Item label = 'Iniciais'>\n                                    <Input \n                                        disabled = { true } placeholder = { this.props.sector.initials } \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 6 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'name' label = 'Nome'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Nome do Setor',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Setor'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        \n                        <Row gutter = { 6 }>\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'initials' label = 'Iniciais do Setor'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira as Iniciais',\n                                    }]}\n                                >\n                                    <Input maxLength = { 8 } placeholder = 'Iniciais' />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <Button type = 'default' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined/> Editar \n                </Button>\n                <FormSectorEdit />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(FormSectorEdit);","import React, { Component } from 'react';\nimport { Modal, Button, notification } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport { getUserToken } from '../../../store/user';\nimport { deleteSector } from '../../../store/sector';\n\nconst { confirm } = Modal;\n\nclass SectorDelete extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit() {\n        const token = getUserToken();\n        const sectorID = this.props.sector.key;\n        const nameSector = this.props.sector.name;\n\n        confirm ({\n\t\t\ttitle: 'Exclusão de Setor',\n\t\t\tcontent: `Tem Certeza Que Deseja Excluir o Setor: ${ nameSector } ?`,\n\t\t\tokText: 'Sim',\n\t\t\tokType: 'danger',\n\t\t\tcancelText: 'Não',\n\t\t\n\t\t\tonOk() {\n                deleteSector(token, sectorID);\n                notification.open({ \n                    type: 'success',\n                    message: 'Setor Excluído',\n                    description: 'Setor Excluído Com Sucesso!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Por Favor, Atualize a Página!',\n                });\n\t\t\t},\n\t\t\tonCancel() {\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Cancelada',\n                    description: 'Exclusão de Setor Cancelada Com Sucesso!',\n                });\n\t\t\t},\n\t\t});\n    }\n\n    render() {\n        return (\n            <Button type = 'primary' onClick = { this.handleSubmit } danger>\n                <DeleteOutlined /> <b> Excluir </b> \n            </Button>\n        );\n    }\n}\n\nexport default SectorDelete;","import React, { Component } from 'react';\nimport { Drawer, Button, List, Avatar } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nimport { getUserToken, getUsersInSector } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { sort } from '../../services/sortService';\n\nclass SectorMembers extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            users: []\n        }\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const users = await getUsersInSector(token, this.props.sector.key);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    render() {\n        let data = { users: [] };\n        \n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image\n            });\n        }\n\n        data.users.sort(sort('name'));\n        const FormSectorMembers = () => {\n            return (\n                <Drawer\n                    title = { `Membros do Setor: ${ this.props.sector.name }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { null }\n                >\n                    <List\n                        dataSource = { data.users } pagination = {{ defaultPageSize: 4 }} \n                        bordered className = 'userMembers'\n                        renderItem = { user => (\n                            <List.Item key = { user.key } >\n                                <List.Item.Meta\n                                    avatar = { <Avatar src = { user.image } /> }\n                                    title = { `Nome: ${ user.name }` } \n                                    description = {\n                                        <div>\n                                            <b> Email: </b> { user.email } <br/>\n                                            <b> Ramal: </b> { user.ramal } <br/>\n                                        </div>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    />\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <Button type = 'primary' onClick = { this.showDrawer }> \n                    <EyeOutlined/> <b> Ver Membros </b> \n                </Button>\n                <FormSectorMembers />\n            </div>\n        );\n    }\n}\n\nexport default SectorMembers;","import React, { Component } from 'react';\nimport { List, Button } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nimport FormSectorEdit from '../forms/sector/FormSectorEdit';\n\nimport SectorDelete from '../forms/sector/FormSectorDelete';\nimport SectorMembers from './SectorMembers';\n\nimport { getSectors } from '../../store/sector';\nimport { getUserToken, getUserId, getCurrentUser } from '../../store/user';\nimport { typeUser } from '../../services/userService';\nimport { sort } from '../../services/sortService';\n\nclass SectorList extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n            sectors: []\n\t\t}\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        const sectors = await getSectors(token);\n\n        this.setState({\n            currentUser: user, \n            sectors: sectors\n        });\n\t}\n\n    render() {\n        const { currentUser } = this.state;\n        const type = typeUser(currentUser.is_administrator);\n        let data = { sectors: [] };\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n                initials: this.state.sectors[aux].initials,\n                slug: this.state.sectors[aux].slug,\n            });\n        }\n\n        data.sectors.sort(sort('name'));\n        return (\n            <div>\n                {\n                    type !== 'Administrador' ? (\n                        <List\n                            dataSource = { data.sectors } pagination = {{ defaultPageSize: 4 }} \n                            bordered className = 'userList'\n                            renderItem = { sector => (\n                                <List.Item\n                                    key = { sector.key } \n                                    actions = {[\n                                        <Link to = { `/setor/${ sector.slug }` }>\n                                            <Button type = 'primary'> \n                                                <EyeOutlined /> <b> Ver Projetos </b> \n                                            </Button>\n                                        </Link>,\n                                        <SectorMembers sector = { sector } />\n                                    ]}\n                                >\n                                <List.Item.Meta \n                                    title = { sector.initials } description = { sector.name } \n                                />\n                                    <SectorMembers sector = { sector } />\n                                </List.Item>\n                            )}\n                        /> \n                    ) : (\n                        <List\n                            dataSource = { data.sectors } pagination = {{ defaultPageSize: 4 }} \n                            bordered className = 'userList'\n                            renderItem = { sector => (\n                                <List.Item\n                                    key = { sector.key } \n                                    actions = {[\n                                        <Link to = { `/setor/${ sector.slug }` }>\n                                            <Button type = 'primary'> \n                                                <EyeOutlined /> <b> Ir a Projetos </b> \n                                            </Button>\n                                        </Link>, \n                                        <SectorMembers sector = { sector } />,\n                                        <FormSectorEdit sector = { sector } />,\n                                        <SectorDelete sector = { sector } />,\n                                    ]}\n                                >\n                                    <List.Item.Meta \n                                        title = { sector.initials } description = { sector.name } />\n                                </List.Item>\n                            )}\n                        /> \n                    )\n                }\n          \t</div>\n        );\n    }\n}\n\nexport default SectorList;","import React, { Component } from 'react';\nimport { Drawer, Button, List, Avatar } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\n\nimport { getUserToken, getUsersInMeeting } from '../../store/user';\nimport { getImage } from '../../store/images';\nimport { sort } from '../../services/sortService';\n\nimport DefaultUser from '../../img/default_user.jpg';\n\nclass MeetingMembers extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            users: [],\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const projectID = this.props.meeting.project;\n        const meetingID = this.props.meeting.key;\n        const users = await getUsersInMeeting(token, meetingID, projectID);\n        let imageUser = null;\n        let final_users = { users: [] };\n\n        for(let aux = 0; aux < users.length; aux ++) {\n            if(users[aux].image === null) {\n                users[aux].image = DefaultUser;\n            } else {\n                imageUser = await getImage(token, users[aux].image);\n                users[aux].image = imageUser.image;                \n            }\n            final_users.users.push({\n                id: users[aux].id,\n                name: users[aux].name,\n                email: users[aux].email,\n                ramal: users[aux].ramal,\n                image: users[aux].image\n            });\n        }\n        \n        this.setState({ users: final_users.users });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    render() {\n        let data_users = { users: [] };\n\n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data_users.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name,\n                email: this.state.users[aux].email,\n                ramal: this.state.users[aux].ramal,\n                image: this.state.users[aux].image\n            });\n        }\n\n        data_users.users.sort(sort('name'));\n        const FormMeetingMembers = () => {\n            return (\n                <Drawer\n                    title = { `Membros na Reunião: ${ this.props.meeting.title }` } \n                    onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 559 }}\n                    footer = { null }\n                >\n                    <List\n                        dataSource = { data_users.users } pagination = {{ defaultPageSize: 4 }} \n                        bordered className = 'userMembers'\n                        renderItem = { user => (\n                            <List.Item key = { user.key } >\n                                <List.Item.Meta\n                                    avatar = { <Avatar src = { user.image } /> }\n                                    title = { `Nome: ${ user.name }` } \n                                    description = {\n                                        <div>\n                                            <b> Email: </b> { user.email } <br/>\n                                            <b> Ramal: </b> { user.ramal } <br/>\n                                        </div>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    />\n                </Drawer>\n            );\n        };\n        return (\n            <span>\n                <Button type = 'default' onClick = { this.showDrawer }>\n                    <EyeOutlined /> <b> Membros da Reunião </b> \n                </Button>\n                <FormMeetingMembers />\n            </span>\n        );\n    }\n}\n\nexport default MeetingMembers;","import axios from 'axios';\n\nimport { BASE_URL_MEETING } from '../consts';\n\nexport const getAllMeetings = async (token) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_MEETING }`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getMeetings = async (token, slugProject) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_MEETING }meetings_in_project/${ slugProject }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getMeeting = async (token, meetingID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_MEETING }detail/${ meetingID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.post(`${ BASE_URL_MEETING }create/`, meeting);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editMeeting = async (token, meeting) => {\n    axios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        await axios.put(`${ BASE_URL_MEETING }update/${ meeting.meetingID }/`, meeting);\n\t\treturn true;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n}\n\nexport const addUsersMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_MEETING }add_users_meeting/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const removeUsersMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_MEETING }remove_users_meeting/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const addItemsMeeting = async (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\tawait axios.put(`${ BASE_URL_MEETING }add_items/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const finishMeeting = (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\taxios.put(`${ BASE_URL_MEETING }finish_meeting/${ meeting.meetingID }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const addQuesttionaire = (token, meeting) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\t\n\ttry {\n\t\taxios.put(`${ BASE_URL_MEETING }add_questtionaire/${ meeting.slug }/`, meeting);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};","import React, { Component } from 'react'\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { UsergroupAddOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport difference from 'lodash/difference';\n\nimport { getUsersInProjectAndNotInMeeting, getUserToken } from '../../../store/user';\nimport { addUsersMeeting } from '../../../store/meeting';\nimport { sort } from '../../../services/sortService';\n\nclass FormAddMembersMeeting extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n\t\tconst meetingID = this.props.meeting.key;\n\t\tconst projectID = this.props.meeting.project;\n\t\tconst users = await getUsersInProjectAndNotInMeeting(token, meetingID, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n            this.setState({ visible: false });\n    };\n\n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n    };\n\n    async handleSubmit() {\n        if(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionada!',\n                description: 'Por Favor, Adicione Pelo Menos Uma Pessoa Para Adicionar a Reunião!',\n\t\t\t});\n\t\t} else {\n            const token = this.state.token;\n            const users = [];\n            const meetingID = this.props.meeting.key;\n            const meeting_leader = this.props.meeting.userID;\n            const projectID = this.props.meeting.project;\n            let status = null;\n\n            for(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n            }\n            \n            const meeting = {\n                meetingID: meetingID,\n                status: this.props.meeting.status,\n                userID: meeting_leader,\n                projectID: projectID,\n                subject_matter: this.props.meeting.subject_matter,\n                title: this.props.meeting.title,\n                initial_date: this.props.meeting.initial_date,\n                initial_hour: this.props.meeting.initial_hour,\n                users\n            };\n\n            status = await addUsersMeeting(token, meeting)\n\n            if(status === true) {\n                notification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Adicionados!',\n\t\t\t\t\tdescription: 'Os Usuários Foram Adicionados a Reunião Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida',\n\t\t\t\t\tdescription: 'Por Favor, Atualize a Página!',\n\t\t\t\t});\n            } else {\n                notification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Adicionar Membros',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Adicionar ' +  \n\t\t\t\t\t\t\t\t 'os Usuários a Reunião!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n            }\n\t\t}\n    }\n\n    render() {\n        const { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n        return (\n            <span>\n                <Button type = 'primary' onClick = { this.showDrawer } ghost>\n                    <UsergroupAddOutlined /> <b> Adicionar Membros </b>\n                </Button>\n                <Drawer\n\t\t\t\t    title = { `Adicionar Usuários a Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Adicionar Membros a Reunião\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n\t\t\t\t\t<TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Adicionar Usuários', 'Não Adicionar' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Drawer>\n            </span>\n        );\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n\nexport default FormAddMembersMeeting;","import React, { Component } from 'react';\nimport { Drawer, Button, Transfer, Table, notification } from 'antd';\nimport { UsergroupDeleteOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport difference from 'lodash/difference';\n\nimport { getUserToken, getUsersInMeeting } from '../../../store/user';\nimport { removeUsersMeeting } from '../../../store/meeting';\nimport { sort } from '../../../services/sortService';\n\nclass FormRemoveMembersMeeting extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n\t\t\tshowSearch: true,\n\t\t\tvisible: false, \n\t\t\ttargetKeys: [],\n\t\t\tusers: [],\n\t\t\ttoken: null\n        }\n        \n        this.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    async componentDidMount() {\n        const token = getUserToken();\n        const projectID = this.props.meeting.project;\n        const meetingID = this.props.meeting.key;\n\t\tconst users = await getUsersInMeeting(token, meetingID, projectID);\n\n        this.setState({ \n\t\t\tusers: users,\n\t\t\ttoken: token \n\t\t});\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    onChange = nextTargetKeys => {\n        this.setState({ targetKeys: nextTargetKeys });\n    };\n\n    async handleSubmit(values) {\n        if(this.state.targetKeys === undefined || this.state.targetKeys.length === 0) {\n\t\t\tnotification.open({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: 'Nenhuma Pessoa Selecionada!',\n\t\t\t\tdescription: 'Por Favor, Adicione Pelo Menos Uma Pessoa Para Remover da Reunião! ' + \n\t\t\t\t\t\t\t 'Ou Cancele Esta Ação de Retirar Usuário do Reunião!',\n\t\t\t});\n\t\t} else {\n            const token = this.state.token;\n\t\t\tconst users = [];\n\t\t\tconst projectID = this.props.meeting.project;\n            const meetingID = this.props.meeting.key;\n            const initial_date = this.props.meeting.initial_date;\n            const initial_hour = this.props.meeting.initial_hour;\n            const subject_matter = this.props.meeting.subject_matter;\n            const userID = this.props.meeting.userID;\n            const title = this.props.meeting.title;\n\t\t\tlet status = null;\n\n\t\t\tfor(let aux = 0; aux < this.state.targetKeys.length; aux ++) {\n\t\t\t\tusers.push({ id: this.state.targetKeys[aux] });\n            }\n            \n            const meeting = {\n                meetingID: meetingID,\n                status: 'Pendente',\n                userID: userID,\n                projectID: projectID,\n                title: title,\n                subject_matter: subject_matter,\n                initial_date: initial_date,\n                initial_hour: initial_hour,\n                users\n            };\n\n\t\t\tstatus = await removeUsersMeeting(token, meeting);\n\n\t\t\tif(status === true) {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: 'Membros Removidos!',\n\t\t\t\t\tdescription: 'Os Usuários Foram Removidos da Reunião Com Sucesso!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Por Favor, Atualize a Página!',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: 'Erro ao Remover Membros!',\n\t\t\t\t\tdescription: 'Erro Inesperado... Não Foi Possível Remover ' +  \n\t\t\t\t\t\t\t\t 'os Usuários da Reunião!',\n\t\t\t\t});\n\t\t\t\tnotification.open({\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: 'Ação Requerida!',\n\t\t\t\t\tdescription: 'Caso o Erro Persista, Entre em Contato Com o Desenvolvedor!',\n\t\t\t\t});\n\t\t\t}\n        }\n    }\n\n    render() {\n        const { targetKeys, showSearch } = this.state;\n\t\tlet users_data = { users: [] };\n\n\t\tfor(let aux = 0; aux < this.state.users.length; aux ++) {\n\t\t\tusers_data.users.push({\n\t\t\t\tkey: this.state.users[aux].id,\n\t\t\t\tname: this.state.users[aux].name,\n\t\t\t\tsector: [this.state.users[aux].sector]\n\t\t\t});\n\t\t}\n\n        users_data.users.sort(sort('name'));\n        return (\n            <span>\n                <Button onClick = { this.showDrawer } danger> \n                    <UsergroupDeleteOutlined /> <b> Remover Membros </b> \n                </Button>\n                <Drawer\n\t\t\t\t\ttitle = { `Remover Usuários da Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\twidth = { 'auto' }\n\t\t\t\t\tclosable = { false }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n\t\t\t\t\t\t\t\tonClick = { this.handleSubmit }\n\t\t\t\t\t\t\t>\n                                <SaveOutlined /> Remover Membros da Reunião\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n                    <TableTransfer\n\t\t\t\t\t\tdataSource = { users_data.users }\n\t\t\t\t\t\ttargetKeys = { targetKeys }\n\t\t\t\t\t\toperations = {[ 'Remover Usuários', 'Não Remover' ]}\n\t\t\t\t\t\tonChange = { this.onChange }\n\t\t\t\t\t\tshowSearch = { showSearch }\n\t\t\t\t\t\tfilterOption = {( inputValue, item ) =>\n\t\t\t\t\t\t\titem.name.toLowerCase().indexOf(inputValue) !== -1 || \n\t\t\t\t\t\t\titem.sector.toString().toLowerCase().indexOf(inputValue) !== -1\n\t\t\t\t\t\t}\n\t\t\t\t\t\tleftColumns =  {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\trightColumns = {[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'name',\n\t\t\t\t\t\t\t\ttitle: 'Nome',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdataIndex: 'sector',\n\t\t\t\t\t\t\t\ttitle: 'Setor',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n                </Drawer>\n            </span>\n        );\n    }\n}\n\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\n    <Transfer {...restProps} showSelectAll = { false }>\n      \t{({\n\t\t\tdirection, filteredItems, onItemSelectAll,\n\t\t\tonItemSelect, selectedKeys: listSelectedKeys, disabled: listDisabled,\n      \t}) => {\n        \tconst columns = direction === 'left' ? leftColumns : rightColumns;\n\t\t\tconst rowSelection = {\n\t\t\t\tonSelectAll(selected, selectedRows) {\n\t\t\t\t\tconst treeSelectedKeys = selectedRows\n\t\t\t\t\t.filter(item => !item.disabled)\n\t\t\t\t\t.map(({ key }) => key);\n\t\t\t\t\tconst diffKeys = selected\n\t\t\t\t\t? difference(treeSelectedKeys, listSelectedKeys)\n\t\t\t\t\t: difference(listSelectedKeys, treeSelectedKeys);\n\t\t\t\t\tonItemSelectAll(diffKeys, selected);\n\t\t\t\t},\n\t\t\t\tonSelect({ key }, selected) {\n\t\t\t\t\tonItemSelect(key, selected);\n\t\t\t\t},\n\t\t\t\tselectedRowKeys: listSelectedKeys,\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\trowSelection = { rowSelection }\n\t\t\t\t\tcolumns = { columns }\n\t\t\t\t\tdataSource = { filteredItems }\n\t\t\t\t\tsize = 'small'\n\t\t\t\t\tpagination = {{ defaultPageSize: 6 }}\n\t\t\t\t\tstyle = {{ pointerEvents: listDisabled ? 'none' : null }}\n\t\t\t\t\tonRow = {({ key }) => ({\n\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\tonItemSelect(key, !listSelectedKeys.includes(key));\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t);\n\t\t}}\n    </Transfer>\n);\n\nexport default FormRemoveMembersMeeting;","import React, { Component } from 'react';\nimport { \n    Drawer, Form, Button, Col, Row, Input, DatePicker, TimePicker, \n    Select, Modal, notification \n} from 'antd';\nimport { EditOutlined, SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport locale from 'antd/es/date-picker/locale/pt_BR';\nimport moment from 'moment';\n\nimport { getUserToken } from '../../../store/user';\nimport { getAllMeetings, editMeeting } from '../../../store/meeting';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { confirm } = Modal;\n\nclass FormEditMeeting extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            meetings: []\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const meetings = await getAllMeetings(token);\n\n        this.setState({ \n            token: token,\n            meetings: meetings \n        });\n    }\n\n    async handleSubmit(values) {\n\n        const meetings = this.state.meetings;\n\n        let found = meetings.find(meeting => {\n            if(meeting.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n        \n        if(found === 'undefined' || found === undefined \n        || values.title === '' || values.title === undefined) {\n            const meetingID = this.props.meeting.key;\n            const token = this.state.token;\n            const userID = this.props.meeting.userID;\n            const projectID = this.props.meeting.project;\n            let title = null;\n            let subject_matter = null;\n            let initial_date = null;\n            let initial_hour = null;\n            let statusMeeting = null;\n\n            if(values.title === '' || values.title === undefined) {\n                title = this.props.meeting.title;\n            } else {\n                title = values.title;\n            }\n\n            if(values.subject_matter === '' || values.subject_matter === undefined) {\n                subject_matter = this.props.meeting.subject_matter;\n            } else {\n                subject_matter = values.subject_matter;\n            }\n\n            if(values.initial_date === '' || values.initial_date === undefined) {\n                initial_date = this.props.meeting.initial_date;\n            } else {\n                initial_date = values['initial_date'].format('DD/MM/YYYY');\n            }\n\n            if(values.initial_hour === '' || values.initial_hour === undefined) {\n                initial_hour = this.props.meeting.initial_hour;\n            } else {\n                initial_hour = values['initial_hour'].format('HH:mm:ss');\n            }\n\n            if(values.status === undefined || values.status === 'pending' \n            || values.status === 'empty') {\n\n                const meeting = {\n                    meetingID: meetingID,\n                    status: 'Pendente',\n                    userID: userID,\n                    projectID: projectID,\n                    title: title,\n                    subject_matter: subject_matter,\n                    initial_date: initial_date,\n                    initial_hour: initial_hour\n                };\n\n                statusMeeting = await editMeeting(token, meeting);\n\n                if(statusMeeting !== true) {\n                    notification.open({ \n                        type: 'success',\n                        message: 'Reunião Atualizado!',\n                        description: 'A Reunião Foi Atualizada Com Sucesso!.',\n                    });\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Requerida!',\n                        description: 'Por Favor, Atualize a Página.',\n                    });\n                } else {\n                    notification.open({ \n                        type: 'error',\n                        message: 'Erro em Ação!',\n                        description: 'Erro ao Atualizar a Reunião, Tente Novamente!.',\n                    });\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Requerida!',\n                        description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n                    });\n                }\n            } else {\n                confirm ({\n                    title: 'Cancelamento de Reunião',\n                    content: 'Tem Certeza Que Deseja Cancelar Esta Reunião? ' + \n                    'Está Ação Não Poderá Ser Desfeita!',\n                    okText: 'Sim',\n                    okType: 'danger',\n                    cancelText: 'Não',\n                \n                    onOk() {\n                        const meeting = {\n                            meetingID: meetingID,\n                            status: 'Cancelada',\n                            userID: userID,\n                            projectID: projectID,\n                            title: title,\n                            subject_matter: subject_matter,\n                            initial_date: initial_date,\n                            initial_hour: initial_hour\n                        };\n\n                        editMeeting(token, meeting);\n                        \n                        Modal.success({\n                            title: 'Ação Concluída!',\n                            content: 'Reunião Cancelada Com Sucesso!',\n                        });\n                        notification.open({\n                            type: 'info',\n                            message: 'Ação Requerida',\n                            description: 'Por Favor, Atualize a Página.',\n                        });\n                    },\n                    onCancel() {\n                        notification.open({\n                            type: 'success',\n                            message: 'Ação Cancelada',\n                            description: 'Cancelamento de Reunião Cancelada Com Sucesso!',\n                        });\n                    },\n                });\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Reunião Não Atualizada',\n                description: 'Já Existe Uma Reunião Com Este Nome/Título Neste ou em Outro Setor. ' +\n                            'Utilize Outro Nome!'\n            });\n        }\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n    \n    render() {\n        const FormMeetingEdit = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Editar a Reunião: ${ this.props.meeting.title }` } \n                    onClose = { this.onClose } width = { 650 }\n                    visible = { this.state.visible } \n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }} >\n                                <SaveOutlined /> Salvar Alterações\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form layout = 'vertical' hideRequiredMark>\n                        <h1> Informações Cadastradas </h1>\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item label = 'Título da Reunião'>\n                                    <Input \n                                        disabled = { true } \n                                        placeholder = { this.props.meeting.title } \n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 6 }>\n                                <Form.Item label = 'Status da Reunião'>\n                                    <Input \n                                        disabled = { true } \n                                        placeholder = { this.props.meeting.status }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Ementa da Reunião'>\n                                    <TextArea \n                                        rows = { 4 } disabled = { true } \n                                        placeholder = {`${ this.props.meeting.subject_matter }`}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col span = { 16 }>\n                                <Form.Item label = 'Líder da Reunião'>\n                                    <Input \n                                        disabled = { true }\n                                        placeholder = { this.props.meeting.meeting_leader }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item label = 'Data da Reunião'>\n                                    <Input \n                                        disabled = { true }\n                                        placeholder = { this.props.meeting.initial_date }\n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'initial_hour' label = 'Hora de Início'\n                                >\n                                    <Input\n                                        disabled = { true }\n                                        placeholder = { this.props.meeting.initial_hour }\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <h1> Informações a Serem Alteradas </h1>\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'title' label = 'Título da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <Input \n                                        maxLength = { 40 } \n                                        placeholder = 'Insira o Título da Reunião'\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <Select>\n                                        <Option value = 'empty'> </Option>\n                                        <Option value = 'pending'> Pendente </Option>\n                                        <Option value = 'canceled'> Cancelar Reunião </Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'subject_matter' label = 'Ementa da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <TextArea rows = { 4 } maxLength = { 500 }/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'initial_date' label = 'Data da Reunião'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <DatePicker\n                                        locale = { locale }\n                                        initialValues = { moment('09/07/2020', 'DD/MM/YYYY')} \n                                        format = { dateFormatList } \n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'initial_hour' label = 'Hora de Início'\n                                    rules = {[{ required: false }]}\n                                >\n                                    <TimePicker \n                                        use24Hours\n                                        initialValues = { moment('00:00:00', 'HH:mm:ss')}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <Button type = 'default' className = 'edit' onClick = { this.showDrawer }> \n                    <EditOutlined/> Editar \n                </Button>\n                <FormMeetingEdit />\n            </div>\n        );\n    }\n}\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n\nexport default FormEditMeeting;","import React from 'react';\nimport { Button } from 'antd';\n\nconst ButtonTimerMeeting = (props) => {\n  \treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\t(props.status === 0) ? (\n\t\t\t\t\t<Button type = 'primary' ghost onClick = { props.start }>\n\t\t\t\t\t\tComeçar Reunião\n\t\t\t\t\t</Button>\n\t\t\t\t) : ''\n\t\t\t}\n\n\t\t\t{\n\t\t\t\t(props.status === 1) ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<Button type = 'primary' ghost onClick = { props.stop }>\n\t\t\t\t\t\t\tParar Contador\n\t\t\t\t\t\t</Button> &nbsp;&nbsp;\n\t\t\t\t\t\t<Button danger onClick = { props.reset }>\n\t\t\t\t\t\t\tReiniciar Contador\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t&nbsp;&nbsp; <Button onClick = { props.finish }> Finalizar Reunião </Button>\n\t\t\t\t\t</span>\n\t\t\t\t) : ''\n\t\t\t}\n\n\t\t\t{\n\t\t\t\t(props.status === 2) ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<Button type = 'primary' ghost onClick = { props.resume }>\n\t\t\t\t\t\t\tContinuar\n\t\t\t\t\t\t</Button> &nbsp;&nbsp;\n\t\t\t\t\t\t<Button danger onClick = { props.reset }>\n\t\t\t\t\t\t\tReiniciar Contador\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t&nbsp;&nbsp; <Button onClick = { props.finish }> Finalizar Reunião </Button>\n\t\t\t\t\t</span>\n\t\t\t\t) : ''\n\t\t\t}\n\t\t</div>\n  \t);\n}\n\nexport default ButtonTimerMeeting;","import React, { useState } from 'react';\n\nimport { finishMeeting } from '../../../store/meeting';\n\nimport BtnComponent from './ButtonTimerMeeting';\n\nfunction Timer(props) {\n\n    const [ time, setTime ] = useState({ ms: 0, seconds: 0, minutes: 0, hour: 0 });\n    const [interv, setInterv] = useState();\n\tconst [status, setStatus] = useState(0);\n\t\n\tlet updatedMs = time.ms;\n\tlet updatedSeconds = time.seconds; \n\tlet updatedMinutes = time.minutes; \n\tlet updatedHour = time.hour;\n\n    const start = () => {\n    \trun();\n        setStatus(1);\n        setInterv(setInterval(run, 10));\n\t};\n\n\tconst run = () => {\n\n        if(updatedMinutes === 60) {\n          \tupdatedHour++;\n          \tupdatedMinutes = 0;\n\t\t}\n\t\t\n        if(updatedSeconds === 60) {\n          \tupdatedMinutes++;\n          \tupdatedSeconds = 0;\n\t\t}\n\t\t\n        if(updatedMs === 100) {\n          \tupdatedSeconds++;\n          \tupdatedMs = 0;\n\t\t}\n\t\t\n        updatedMs++;\n\t\t\n\t\treturn setTime({\n\t\t\tms:updatedMs, \n\t\t\tseconds:updatedSeconds, \n\t\t\tminutes:updatedMinutes, \n\t\t\thour:updatedHour\n\t\t});\n\t};\n    \n\tconst stop = () => {\n        clearInterval(interv);\n        setStatus(2);\n\t};\n    \n\tconst reset = () => {\n        clearInterval(interv);\n        setStatus(0);\n        setTime({ ms: 0, seconds: 0, minutes: 0, hour: 0 })\n\t};\n\n\tconst resume = () => start();\n\n\tconst finish = () => {\n\t\tstop();\n\t\tconst token = props.token;\n\t\tconst duration_time = document.getElementById('time').innerText;\n\t\tconst meetingID = props.meeting.meetingID;\n\t\tconst projectID = props.meeting.project;\n\t\tconst userID = props.meeting.userID;\n\t\tconst title = props.meeting.title;\n\t\tconst status = 'Finalizada';\n\t\tconst initial_date = props.meeting.initial_date;\n\t\tconst initial_hour = props.meeting.initial_hour;\n\t\tconst subject_matter = props.meeting.subject_matter;\n\t\tconst real_hour = props.atualHour;\n\t\tconst real_date = props.atualDate;\n\n\t\tconst meeting = {\n\t\t\tmeetingID: meetingID,\n\t\t\tprojectID: projectID,\n\t\t\tuserID: userID,\n\t\t\ttitle: title,\n\t\t\tstatus: status,\n\t\t\tsubject_matter: subject_matter,\n\t\t\tinitial_date: initial_date,\n\t\t\tinitial_hour: initial_hour,\n\t\t\tduration_time: duration_time,\n\t\t\treal_hour: real_hour,\n\t\t\treal_date: real_date\n\t\t};\n\n\t\tfinishMeeting(token, meeting);\n\t\twindow.location.reload(false);\n\t}\n\n    return (\n\t\t<span align = 'center'>\n\t\t\t<h1> Tempo de Reunião </h1>\n\t\t\t<h1 id = 'time'>\n\t\t\t\t{ (time.hour >= 10)? time.hour : '0' + time.hour }:\n\t\t\t\t{ (time.minutes >= 10)? time.minutes : '0' + time.minutes }:\n\t\t\t\t{ (time.seconds >= 10)? time.seconds : '0' + time.seconds }\n\t\t\t</h1>\n\t\t\t<BtnComponent \n\t\t\t\tstatus = { status } resume = { resume } finish = { finish }\n\t\t\t\treset = { reset } stop = { stop } start = { start } \n\t\t\t/>\n\t\t</span>\n    );\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport { Button, Drawer, Descriptions, Badge } from 'antd';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nimport Timer from './timer/Timer';\n\nclass MeetingDetail extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tvisible: false,\n\t\t\tatualHour: null,\n\t\t\tatualDate: null,\n\t\t}\n\n\t\tthis.showDrawer = this.showDrawer.bind(this);\n\t\tthis.onClose = this.onClose.bind(this);\n\t\tthis.checkTime = this.checkTime.bind(this);\n\t}\n\n\tcheckTime(value) {\n\t\tif (value < 10) {\n\t\t\tvalue = '0' + value;\n\t\t}\n\t\treturn value;\n\t}\n\n\tshowDrawer = () => {\n\t\tlet today = new Date();\n\t\tlet hour  = today.getHours();\n\t\tlet minutes = today.getMinutes();\n\t\tlet seconds = today.getSeconds();\n\t\tlet day = today.getDate();\n\t\tlet month = today.getMonth();\n\t\tmonth = month + 1;\n\t\tlet year = today.getUTCFullYear();\n\n\t\tminutes = this.checkTime(minutes);\n\t\tseconds = this.checkTime(seconds);\n\n\t\tthis.setState({ \n\t\t\tvisible: true,\n\t\t\tatualHour: hour + ':' + minutes + ':' + seconds,\n\t\t\tatualDate: day + '/' + month + '/' + year\n\t\t});\n    };\n    \n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\t\n\trender() {\n\t\tconst atualDate = this.state.atualDate;\n\t\tconst atualHour = this.state.atualHour;\n\t\treturn (\n\t\t\t<span>\n\t\t\t\t<Button className = 'save' onClick = { this.showDrawer }>\n                    <CaretRightOutlined/> <b> Começar Reunião </b>\n                </Button>\n                <Drawer\n                    title = { `Reunião: ${ this.props.meeting.title } ` } closable = { false }\n\t\t\t\t\tonClose = { this.onClose } visible = { this.state.visible } width = { '100%' }\n                >\n\t\t\t\t\t<Timer \n\t\t\t\t\t\ttoken = { this.props.token } atualDate = { atualDate } atualHour = { atualHour } \n\t\t\t\t\t\tmeeting = { this.props.meeting } slug = { this.props.slug }\n\t\t\t\t\t/>  \n\t\t\t\t\t<br />\n\t\t\t\t\t<Descriptions \n\t\t\t\t\t\ttitle = { `Informações da Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\t\tbordered column = {{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Título </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.title }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Líder da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.meeting_leader }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Status da Reunião </b> }>\n\t\t\t\t\t\t\t<Badge status = 'processing' text = { this.props.meeting.status } />\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário Programado da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_hour }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário de Inicio Real da Reunião </b> } span = { 2 }>\n\t\t\t\t\t\t\t{ this.state.atualHour }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Programada da Reunião </b>}>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_date }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Real da Reunião </b> } span = { 2 }>\n\t\t\t\t\t\t\t{ this.state.atualDate }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Ementa </b> } span = { 3 }>\n\t\t\t\t\t\t\t{ this.props.meeting.subject_matter }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Usuários na Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.users.map(user => \n\t\t\t\t\t\t\t\t\t\t<li key = { user.key }> { user.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Pautas da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.agendas.map(agenda => \n\t\t\t\t\t\t\t\t\t\t<li key = { agenda.key }> { agenda.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Regras da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.rules.map(rules => \n\t\t\t\t\t\t\t\t\t\t<li key = { rules.key }> { rules.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t</Descriptions>\n                </Drawer>\n\t\t\t</span>\n\t\t);\n\t}\t\n}\n\nexport default MeetingDetail;","import React, { Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nclass MeetingAgenda extends Component {\n\n    render() {\n        return (\n            <Form form = { this.props.form }>\n                <h2 align = 'center'> Pautas da Reunião </h2>\n                <Form.List name = 'agendas'>\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                { fields.map((field, index) => (\n                                    <Form.Item\n                                        { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel) }\n                                        label = { index === 0 ? 'Tópicos' : ''}\n                                        required = { true }\n                                        key = { field.key }\n                                        className = 'formList'\n                                    >\n                                        <Form.Item\n                                            { ...field }\n                                            validateTrigger = {['onChange', 'onBlur']}\n                                            rules = {[{\n                                                required: true,\n                                                whitespace: true,\n                                                message: 'Por Favor, Adicione Pelo Menos um Tópico ' + \n                                                        'a Reunião, ou Exclua Este Campo!' \n                                            }]}\n                                            noStyle\n                                        >\n                                            <Input \n                                                placeholder = 'Tópico da Pauta' \n                                                style = {{ width: '60%' }} \n                                                maxLength = { 40 } \n                                                required = { true }\n                                            />\n                                        </Form.Item>\n                                        { fields.length > 1 ? (\n                                            <MinusCircleOutlined\n                                                className = 'dynamic-delete-button'\n                                                style = {{ margin: '0 8px' }}\n                                                onClick = {() => {\n                                                    remove(field.name);\n                                                }}\n                                            />\n                                        ) : null }\n                                    </Form.Item>\n                                ))}\n                                <Form.Item>\n                                    <Button\n                                        type = 'dashed' onClick = {() => { add() }}\n                                        style = {{ width: '60%', marginLeft: 120 }}\n                                    >\n                                        <PlusOutlined /> Adicionar Tópicos\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n            </Form>\n        );\n    }\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n    },\n};\nconst formItemLayoutWithOutLabel = {\n    wrapperCol: {\n        xs: { span: 20, offset: 0 },\n        sm: { span: 20, offset: 0 },\n    },\n};\n\nexport default MeetingAgenda;","import React, { Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nexport class RulesMeeting extends Component {\n    render() {\n        return (\n            <Form form = { this.props.form }>\n                <h2 align = 'center'> Regras da Reunião </h2>\n                <Form.List name = 'rules'>\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                { fields.map((field, index) => (\n                                    <Form.Item\n                                        { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel) }\n                                        label = { index === 0 ? 'Tópicos' : ''}\n                                        required = { true }\n                                        key = { field.key }\n                                        className = 'formList'\n                                    >\n                                        <Form.Item\n                                            { ...field }\n                                            validateTrigger = {['onChange', 'onBlur']}\n                                            rules = {[{\n                                                required: true,\n                                                whitespace: true,\n                                                message: 'Por Favor, Adicione Pelo Menos um Tópico ' + \n                                                        'a Reunião, ou Exclua Este Campo!' \n                                            }]}\n                                            noStyle\n                                        >\n                                            <Input \n                                                placeholder = 'Tópico da Pauta' \n                                                style = {{ width: '60%' }} \n                                            />\n                                        </Form.Item>\n                                        { fields.length > 1 ? (\n                                            <MinusCircleOutlined\n                                                className = 'dynamic-delete-button'\n                                                style = {{ margin: '0 8px' }}\n                                                onClick = {() => {\n                                                    remove(field.name);\n                                                }}\n                                            />\n                                        ) : null }\n                                    </Form.Item>\n                                ))}\n                                <Form.Item>\n                                    <Button\n                                        type = 'dashed' onClick = {() => { add() }}\n                                        style = {{ width: '60%', marginLeft: 120 }}\n                                    >\n                                        <PlusOutlined /> Adicionar Tópicos\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n            </Form>\n        );\n    }\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n    },\n};\nconst formItemLayoutWithOutLabel = {\n    wrapperCol: {\n        xs: { span: 20, offset: 0 },\n        sm: { span: 20, offset: 0 },\n    },\n};\n\nexport default RulesMeeting;","import React, { Component } from 'react';\nimport { Button, Drawer, Tabs, Form, notification } from 'antd';\nimport { \n    OrderedListOutlined, BookOutlined, AccountBookOutlined, SaveOutlined, StopOutlined \n} from '@ant-design/icons';\n\nimport MeetingAgenda from './MeetingAgenda';\nimport RulesMeeting from './RulesMeeting';\n\nimport { addItemsMeeting } from '../../../../store/meeting';\nimport { getUserToken } from '../../../../store/user';\n\nconst { TabPane } = Tabs;\n\nclass Items extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n    \n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    async handleSubmit(values) {\n        const token = getUserToken();\n        let agendas = [];\n        let rules = [];\n        let status = null;\n\n        if(values.agendas === undefined || values.rules === undefined) {\n            notification.open({ \n                type: 'warning',\n                message: 'Espaços Brancos!',\n                description: 'O Campo de Pauta ou de Regras Estão Vazios! Adicione Pelo Menos ' +\n                             'um Campo Neles!'\n            });\n        } else {\n\n            for(let aux = 0; aux < values.agendas.length; aux ++) {\n                agendas.push({ title: values.agendas[aux] });\n            }\n\n            for(let aux = 0; aux < values.rules.length; aux ++) {\n                rules.push({ title: values.rules[aux] });\n            }\n\n            const meeting = {\n                meetingID: this.props.meeting.key,\n                status: 'Agendada',\n                userID: this.props.meeting.userID,\n                projectID: this.props.meeting.project,\n                title: this.props.meeting.title,\n                initial_date: this.props.meeting.initial_date,\n                initial_hour: this.props.meeting.initial_hour,\n                subject_matter: this.props.meeting.subject_matter,\n                agendas,\n                rules\n            };\n    \n            status = await addItemsMeeting(token, meeting);\n    \n            if(status !== true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Itens Adicionados!',\n                    description: 'Os itens Foram Adicionados a Reunião Com Sucesso!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida!',\n                    description: 'Por Favor, Atualize a Página.',\n                });\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Erro em Ação!',\n                    description: 'Erro ao Adicionar os Itens a Reunião, Tente Novamente!.',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida!',\n                    description: 'Caso o Problema Persista, Entre em Contato com o Desenvolvedor!',\n                });\n            }\n        }\n    }\n\n    render() {\n        const FormItems = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = { `Itens Para Composição da Reunião: ${ this.props.meeting.title }` } \n                    onClose = { this.onClose } width = { '50%' }\n                    visible = { this.state.visible } \n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Itens\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form hideRequiredMark layout = 'vertical'>\n                        <Tabs defaultActiveKey = '1'>\n                            <TabPane\n                                tab = { <span><BookOutlined /> Pautas da Reunião </span> }\n                                key = '1'\n                            >\n                                <MeetingAgenda form = { form } />\n                            </TabPane>\n\n                            <TabPane\n                                tab = { <span><AccountBookOutlined /> Regras da Reunião </span> }   \n                                key = '2'\n                            >\n                                <RulesMeeting form = { form } />\n                            </TabPane>\n                        </Tabs>\n                    </Form>\n                </Drawer>\n            );\n        }\n        return (\n            <span>\n                <Button onClick = { this.showDrawer }>\n                    <OrderedListOutlined /> <b> Items </b>\n                </Button>\n                <FormItems />\n            </span>\n        );\n    }\n}\n\nexport default Items;","import React, { Component } from 'react';\nimport { Button, Drawer, Descriptions, Badge } from 'antd';\nimport { AuditOutlined } from '@ant-design/icons';\nimport { StopOutlined } from '@ant-design/icons';\n\nclass Record extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n\t\tthis.setState({ visible: false });\n    };    \n\n    render() {\n        return (\n            <span>\n                <Button type = 'primary' ghost onClick = { this.showDrawer }>\n                    <b><AuditOutlined /> Visualizar Ata </b>\n                </Button>\n                <Drawer\n\t\t\t\t    title = { `Ata da Reunião: ${ this.props.meeting.title }` }\n\t\t\t\t\twidth = { '100%' }\n\t\t\t\t\tclosable = { true }\n\t\t\t\t\tonClose = { this.onClose }\n\t\t\t\t\tvisible = { this.state.visible }\n\t\t\t\t\tfooter = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Fechar\n                            </Button>\n                        </div>\n                    }\n\t\t\t\t>\n                    <Descriptions \n\t\t\t\t\t\tbordered column = {{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Título </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.title }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Líder da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.meeting_leader }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Status da Reunião </b> }>\n\t\t\t\t\t\t\t<Badge status = 'success' text = { this.props.meeting.status } />\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário Programado da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_hour }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Horário de Inicio Real da Reunião </b> }>\n\t\t\t\t\t\t\t{ this.props.meeting.real_hour }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Duração da Reunião </b> }>\n                            { this.props.meeting.duration_time }\n                        </Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Programada da Reunião </b>}>\n\t\t\t\t\t\t\t{ this.props.meeting.initial_date }\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Data Real da Reunião </b> } span = { 2 }>\n\t\t\t\t\t\t\t{ this.props.meeting.real_date }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Ementa </b> } span = { 3 }>\n\t\t\t\t\t\t\t{ this.props.meeting.subject_matter }\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Usuários na Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.users.map(user => \n\t\t\t\t\t\t\t\t\t\t<li key = { user.key }> { user.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n                        <Descriptions.Item label = { <b> Pautas da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.agendas.map(agenda => \n\t\t\t\t\t\t\t\t\t\t<li key = { agenda.key }> { agenda.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t<Descriptions.Item label = { <b> Regras da Reunião </b> } span = { 3 }>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.meeting.rules.map(rules => \n\t\t\t\t\t\t\t\t\t\t<li key = { rules.key }> { rules.title } </li> \n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Descriptions.Item>\n                    </Descriptions>\n                </Drawer>\n            </span>\n        );\n    }\n}\n\nexport default Record;","import React, { Component } from 'react';\nimport { Steps, Button } from 'antd';\n\nconst Step = Steps.Step;\n\nclass Questions extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            current: 0\n        }\n    }\n\n    next() {\n        const current = this.state.current + 1;\n        this.setState({ current });\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({ current });\n    }    \n\n    render() {\n        const { current } = this.state;\n        const { questions } = this.props;\n        return (\n            <div>\n                <Steps progressDot current = { current }>\n                    { questions.map((q, index) => (\n                        <Step key = { index } />\n                    ))}\n                </Steps>\n                \n                <div>\n                    { questions[ current ] }\n                </div>\n\n                <div align = 'center'>\n                    { current < questions.length - 1 && (\n                        <Button type = 'primary' onClick={() => this.next()}>\n                            Próximo\n                        </Button>\n                    )}\n\n                    { current === questions.length - 1 && (\n                        <Button type = 'primary' onClick={() => this.props.submit()}>\n                            Concluir\n                        </Button>\n                    )}\n\n                    { current > 0 && (\n                        <Button style ={{ marginLeft: 8 }} onClick={() => this.prev()}>\n                            Voltar\n                        </Button>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Questions;","import React, { Component } from 'react';\nimport { Radio } from 'antd';\n\nclass Choices extends Component {\n\n    render() {\n        const { questionId } = this.props;\n\t\tconst { answers } = this.props;\n        return (\n            <Radio.Group\n\t\t\t\tonChange = {(e, qId) => this.props.change(e, questionId)}\n\t\t\t\tvalue = {\n\t\t\t\t\tanswers[questionId] !== undefined &&\n\t\t\t\t\tanswers[questionId] !== null\n\t\t\t\t\t\t? answers[questionId]\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ this.props.choices.map((choice, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Radio style = { radioStyle } value = { choice } key = { index }>\n\t\t\t\t\t\t\t{ choice }\n\t\t\t\t\t\t</Radio>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Radio.Group>\n        );\n    }\n}\n\nconst radioStyle = {\n\tdisplay: 'block',\n\theight: '30px',\n\tlineHeight: '30px'\n};\n\nexport default Choices;","import axios from 'axios';\n\nimport { BASE_URL_QUESTIONS } from '../consts';\n\nexport const getQuestions = async (token, questtionaireID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_QUESTIONS }detail/${ questtionaireID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};","import axios from 'axios';\n\nimport { BASE_URL_QUESTTIONAIRE } from '../consts';\n\nexport const getQuesttionaire = async (token, questtionaireID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_QUESTTIONAIRE }detail/${ questtionaireID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};","import axios from 'axios';\n\nimport { BASE_URL_CHOICES } from '../consts';\n\nexport const getChoices = async (token, questionID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_CHOICES }list_choices/${ questionID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\treturn false;\n\t}\n};","import axios from 'axios';\n\nimport { BASE_URL_GRADEDQUESTTIONAIRE } from '../consts';\n\nexport const saveGradedQuesttionaire = (token, gradedQuesttionaire) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        axios.post(`${ BASE_URL_GRADEDQUESTTIONAIRE }create/`, gradedQuesttionaire);\n\t\treturn true;    \n\t} catch (err) {\n\t\treturn false;\n\t}\n};\n\nexport const getUserInGraded = async (token, userID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_GRADEDQUESTTIONAIRE }user_in_graded/${ userID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const getGradedInQuesttionaire = async (token, questtionaireID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_GRADEDQUESTTIONAIRE }graded_questtionaire/${ questtionaireID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};","export function size(obj) {\n\t\t\n    var size = 0, key;\n    \n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n}","import React, { Component } from 'react';\nimport { Button, Card, Drawer, Rate, Modal, notification } from 'antd';\nimport { HighlightOutlined } from '@ant-design/icons';\n\nimport Questions from '../../forms/meeting/questions/Questions';\nimport Choices from '../../forms/meeting/questions/Choices';\n\nimport { getQuestions } from '../../../store/questions';\nimport { getQuesttionaire } from '../../../store/questtionaire';\nimport { getChoices } from '../../../store/choices';\nimport { saveGradedQuesttionaire } from '../../../store/gradedQuesttionaire';\nimport { size } from '../../../services/utils'; \n\nclass RespondQuiz extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            title: null,\n            questions: [],\n            answers: {},\n            visibleDrawer: false,\n            visibleModal: false,\n            value: 3\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showModal = this.showModal.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.saveGraded = this.saveGraded.bind(this);\n    }\n    \n    async componentDidMount() {\n        const token = this.props.token;\n        const questtionaire_id = this.props.meeting.questtionaire;\n        const questions = await getQuestions(token, questtionaire_id);\n        const questtionaire = await getQuesttionaire(token, questtionaire_id);\n\n        this.setState({\n            questions: questions,\n            title: questtionaire.title,\n        });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visibleDrawer: true\n        });\n    };\n    \n    onClose = () => {\n        this.setState({\n            visibleDrawer: false\n        });\n    };\n\n    onChange = (e, qId) => {\n        const { answers } = this.state;\n        answers[qId] = e.target.value;\n        this.setState({ answers });\n    };\n\n    showModal = () => {\n        this.setState({\n          visibleModal: true,\n        });\n    };\n    \n    handleOk = e => {\n        this.setState({\n          visibleModal: false\n        });\n    };\n\n    handleChange = value => {\n        this.setState({ value });\n    };\n\n    async saveGraded() {\n        const answers = this.state.answers;\n        const questions = this.state.questions;\n        let sizeAnswers = size(answers);\n        let questionsID = { questions: [] };\n        let choices = null;\n        let listChoices = { choices: [] };\n        let finalListChoices = { choices: [] };\n\n        const history = this.props.history;\n        const slug = this.props.slug;\n        const userID = this.props.userID;\n        const questtionaire_id = this.props.meeting.questtionaire;\n        const token = this.props.token;\n        let status = null;\n\n        for(let aux = 0; aux < questions.length; aux ++) {\n            questionsID.questions.push(questions[aux].id);\n            choices = await getChoices(token, questions[aux].id);\n            for(let auxChoices = 0; auxChoices < choices.length; auxChoices ++) {\n                listChoices.choices.push({\n                    id: choices[auxChoices].id,\n                    title: choices[auxChoices].title\n                });\n            }\n        }\n\n        for(let auxChoices = 0; auxChoices < listChoices.choices.length; auxChoices ++) {\n            for(let auxAnswers = 1; auxAnswers < sizeAnswers + 1; auxAnswers ++) {\n                if(answers[auxAnswers] === listChoices.choices[auxChoices].title) {\n                    finalListChoices.choices.push(listChoices.choices[auxChoices].id);\n                }\n            }\n        }\n\n        const gradedQuesttionaire = {\n            userID: userID,\n            questtionaire_id: questtionaire_id,\n            questionsID: questionsID.questions,\n            answers: finalListChoices.choices,\n            rate: this.state.value\n        };\n\n        status = saveGradedQuesttionaire(token, gradedQuesttionaire);\n        if(status === true) {\n            notification.open({\n                type: 'success',\n                message: 'Questionário Respondido!',\n                description: 'O Questionário Foi Respondido Com Sucesso!',\n            });\n            history.push(`/projeto/${ slug }`);\n        } else {\n            notification.open({\n                type: 'error',\n                message: 'Questionário Não Respondido!',\n                description: 'O Questionário Não Foi Respondido Com Sucesso! Tente Novamente!',\n            });\n            notification.open({\n                type: 'info',\n                message: 'Ação Requerida!',\n                description: 'Caso o Problema Persista, Entre em Contato Com o Desenvolvedor!',\n            });\n        }\n    }\n    \n    handleSubmit() {\n        const answers = this.state.answers;\n        const questions = this.state.questions;\n        let sizeAnswers = size(answers);\n\n        if(sizeAnswers !== questions.length) {\n            notification.open({\n                type: 'error',\n                message: 'Alguma Questão Está Faltando!',\n                description: 'O Número de Questões Respondidas Não Bate Com o Número de Perguntas! ' +\n                             'Responda Todas as Questões!'   \n            });\n        } else {\n            this.setState({ visibleModal: true });\n        }\n    }\n\n    render() {\n        const { title ,questions, answers, value } = this.state;\n        return (\n            <span>\n                <Button type = 'danger' ghost onClick = { this.showDrawer }>\n                    <HighlightOutlined /> <b> Responder Questionário </b> \n                </Button>\n                <Drawer\n                    title= { `Questionário: ${ title }` } width = { 'auto' }\n                    onClose = { this.onClose } visible = { this.state.visibleDrawer }\n                    bodyStyle = {{ paddingBottom: 80 }}\n                >\n                    <Card>\n                        <h1> Questionário : { title } </h1>\n                        <Questions\n                            submit ={() => this.handleSubmit()}\n                            questions = {questions.map(question => {\n                                return (\n                                    <Card\n                                        style = {{ marginTop: 20, marginBottom: 20 }}\n                                        type = 'inner'\n                                        key = { question.id }\n                                        title = {`${ question.order }. ${ question.title }`}\n                                    >\n                                        <Choices\n                                            questionId = { question.order }\n                                            choices = { question.choices }\n                                            change = { this.onChange }\n                                            answers = { answers }\n                                        />\n                                    </Card>\n                                );\n                            })}\n                        />\n                    </Card>\n                    <Modal\n                        title = 'Avaliação de Reunião' visible = { this.state.visibleModal }\n                        onOk = { this.handleOk } closable = { false }\n                        cancelButtonProps = {{ disabled: true }} afterClose = { this.saveGraded }\n                    >\n                        <div align = 'center'>\n                            <Rate tooltips = { desc } onChange = { this.handleChange } value = { value }/>\n                            { value ? <span className = 'ant-rate-text'> { desc[value - 1]}</span> : ''}\n                        </div>\n                    </Modal>\n                </Drawer>\n            </span>\n        );\n    }\n}\n\nconst desc = ['Péssima', 'Ruim', 'Normal', 'Boa', 'Ótima'];\n\nexport default RespondQuiz;","import React, { Component } from 'react';\nimport { PieChart, Pie, Cell } from 'recharts';\n\nimport { getGradedInQuesttionaire } from '../../../store/gradedQuesttionaire';\n\nclass ChartsQuesttionaire extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            gradeds: []\n        }\n    }\n\n    async componentDidMount() {\n        const token = this.props.token;\n        const questtionaireID = this.props.questtionaireID;\n        const graded = await getGradedInQuesttionaire(token, questtionaireID);\n\n        this.setState({\n            gradeds: graded\n        });\n    }\n    \n    render() {\n        return (\n            <PieChart width = { 400 } height = { 400 }>\n                <Pie\n                    data = { data } \n                    cx = { 200 } cy = { 200 } labelLine = { false }\n                    label = { renderCustomizedLabel } outerRadius = { 80 }\n                    fill = '#8884d8' dataKey = 'value'\n                >\n                    {\n                        data.map((entry, index) => \n                            <Cell key = { `cell-${ index }`} fill = { COLORS[ index % COLORS.length ]}/>\n                        )\n                    }\n                </Pie>\n            </PieChart>\n        );\n    }\n}\n\nconst data = [\n    { name: 'Group A', value: 400 },\n    { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 },\n    { name: 'Group D', value: 200 },\n];\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n  \nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n    cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n    return (\n        <text x = { x } y = { y } fill = 'white' textAnchor = {x > cx ? 'start' : 'end'} dominantBaseline = 'central'>\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nexport default ChartsQuesttionaire;","import React, { Component } from 'react';\nimport { Button, Drawer } from 'antd';\nimport { AreaChartOutlined } from '@ant-design/icons';\n\nimport ChartsQuesttionaire from '../../meeting/questions/ChartsQuesttionaire';\n\nclass ResultQuiz extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n    \n    showDrawer = () => {\n        this.setState({\n            visible: true\n        });\n    };\n    \n    onClose = () => {\n        this.setState({\n            visible: false\n        });\n    };\n\n    render() {\n        return (\n            <span>\n                <Button type = 'primary' ghost onClick = { this.showDrawer }> \n                    <b><AreaChartOutlined /> Resultado do Questionário </b> \n                </Button>\n                <Drawer\n                    title = { `Resultados da Reunião: ${ this.props.meeting.title }` }\n                    closable = { true } onClose = { this.onClose } visible = { this.state.visible }\n                    width = { 'auto' }\n                >\n                    <ChartsQuesttionaire\n                        token = { this.props.token } \n                        questtionaireID = { this.props.meeting.questtionaire }\n                    />\n                    {/* <NewComment \n                        token = { this.props.token }\n                        questtionaireID = { this.props.meeting.questtionaire }\n                    /> */}\n                    {/* <CommentList \n                        token = { this.props.token }\n                        meeting = { this.props.meeting }\n                    /> */}\n                </Drawer>\n            </span>\n        )\n    }\n}\n\nexport default ResultQuiz;","import React, { Component } from 'react';\nimport { Table, Tag, Space, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\n\nimport MeetingMembers from '../meeting/MeetingMembers';\nimport FormAddMembersMeeting from '../forms/meeting/FormAddMembersMeeting';\nimport FormRemoveMembersMeeting from '../forms/meeting/FormRemoveMembersMeeting';\nimport FormEditMeeting from '../forms/meeting/FormEditMeeting';\nimport StartMeeting from '../meeting/MeetingDetail';\nimport Items from '../forms/meeting/items/Items';\nimport Record from '../meeting/record/Record';\nimport RespondQuiz from '../meeting/questions/RespondQuestions';\nimport ResultQuiz from '../meeting/questions/ResultQuesttionaire';\n\nimport { getUserId, getUserToken, getCurrentUser, getUsers } from '../../store/user';\nimport { getMeetings } from '../../store/meeting';\nimport { getGradedInQuesttionaire } from '../../store/gradedQuesttionaire';\nimport { sort } from '../../services/sortService';\n\nclass ProjectList extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\n\t\tthis.state = {\n\t\t\tcurrentUser: {},\n            meetings: [],\n            users: [],\n            token: null\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n        const token = getUserToken();\n        const slug = this.props.match.params.slug;\n        const userId = getUserId();\n\t\tconst user = await getCurrentUser(token, userId);\n        const meetings = await getMeetings(token, slug);\n        const users = await getUsers(token);\n        let data_users = { valid: [] };\n\n        this.setState({ \n\t\t\tcurrentUser: user,\n            meetings: meetings,\n            token: token,\n            users: users\n        });\n\n        for(let aux = 0; aux < meetings.length; aux ++) {\n            let usersInGraded = await getGradedInQuesttionaire(token, meetings[aux].questtionaire);\n            if(usersInGraded !== undefined) {\n                data_users.valid.push(usersInGraded);\n            }\n        }\n\n        for(let aux = 0; aux < 1; aux ++) {\n            console.log(data_users.valid)\n        }\n        console.log(this.state.currentUser.id)\n\t}\n\t\n  \trender() {\n        const { currentUser } = this.state;\n        const token = this.state.token;\n        let data_meeting = { meeting: [] };\n        let meeting_leader = null;\n        let userID = null;\n        let slug = this.props.match.params.slug;\n        let rules_meeting = { rules: [] };\n        let agendas_meeting = { agendas: [] };\n        let users_meeting = { users: [] };\n        let respond = null;\n\n\t\tfor(let aux = 0; aux < this.state.meetings.length; aux ++) {\n            for(let auxUsers = 0; auxUsers < this.state.users.length; auxUsers ++) {\n                if(this.state.meetings[aux].meeting_leader === this.state.users[auxUsers].id) {\n                    meeting_leader = this.state.users[auxUsers].name;\n                    userID = this.state.users[auxUsers].id;\n                }\n            }\n\n            for(let auxRules = 0; auxRules < this.state.meetings[aux].rules.length; auxRules ++) {\n                rules_meeting.rules.push({\n                    key: this.state.meetings[aux].rules[auxRules].id,\n                    title: this.state.meetings[aux].rules[auxRules]\n                });\n            }\n\n            for(let auxAgendas = 0; auxAgendas < this.state.meetings[aux].agendas.length; auxAgendas ++) {\n                agendas_meeting.agendas.push({\n                    key: this.state.meetings[aux].id, \n                    title: this.state.meetings[aux].agendas[auxAgendas] \n                });\n            }\n\n            for(let auxUsers = 0; auxUsers < this.state.meetings[aux].users.length; auxUsers ++) {\n                users_meeting.users.push({\n                    key: this.state.meetings[aux].id,\n                    title: this.state.meetings[aux].users[auxUsers]\n                });\n            } \n\n            data_meeting.meeting.push({\n                key: this.state.meetings[aux].id,\n                meetingID: this.state.meetings[aux].id,\n                title: this.state.meetings[aux].title,\n                slug: this.state.meetings[aux].slug,\n                project: this.state.meetings[aux].project,\n                subject_matter: this.state.meetings[aux].subject_matter,\n                respondUser: respond,\n                meeting_leader: meeting_leader,\n                userID: userID,\n                initial_date: this.state.meetings[aux].initial_date,\n                initial_hour: this.state.meetings[aux].initial_hour,\n                real_hour: this.state.meetings[aux].real_hour,\n                real_date: this.state.meetings[aux].real_date,\n                duration_time: this.state.meetings[aux].duration_time,\n                questtionaire: this.state.meetings[aux].questtionaire,\n                status: this.state.meetings[aux].status,\n                tags: [ this.state.meetings[aux].status ],\n                rules: rules_meeting.rules,\n                agendas: agendas_meeting.agendas,\n                users: users_meeting.users\n            });\n\n            rules_meeting.rules = [];\n            agendas_meeting.agendas = [];\n            users_meeting.users = [];\n        }\n        \n        data_meeting.meeting.sort(sort('title'));\n\t\treturn (\n            <Table \n                dataSource = { data_meeting.meeting } bordered className = 'userList'\n                pagination = {{ defaultPageSize: 4 }} \n                columns = {\n                    [{\n                        title: 'Título da Reunião',\n                        dataIndex: 'title',\n                        key: 'title',\n                    },\n                    {\n                        title: 'Status',\n                        key: 'tags',\n                        dataIndex: 'tags',\n                        render: tags => (\n                            <span>\n                                {\n                                tags.map(tag => {\n                                    let color = null;\n\n                                    if (tag === 'Pendente') {\n                                        color = 'orange';\n                                    } else if(tag === 'Cancelada') {\n                                        color = 'red';\n                                    } else if(tag === 'Agendada') {\n                                        color = 'blue';\n                                    }\n                                    else {\n                                        color = 'green';\n                                    }\n\n                                    return (\n                                        <Tag color = { color } key = { tag } >\n                                            <b> { tag.toUpperCase() } </b> \n                                        </Tag>\n                                    );\n                                })\n                            }\n                            </span>\n                        ),\n                    },{\n                        title: 'Data da Reunião',\n                        dataIndex: 'initial_date',\n                        key: 'initial_date',\n                    },{\n\t\t\t\t\t\ttitle: 'Opções',\n\t\t\t\t\t\tkey: 'action',\n\t\t\t\t\t\trender: (record) => (\n                            <span>\n                                {\n                                    currentUser.is_administrator === false ? (\n                                        null\n                                    ) : (\n                                        <span>\n                                            {\n                                                record.status === 'Cancelada' ? (\n                                                    null \n                                                ) : (\n                                                    <span>\n                                                        {\n                                                            record.status === 'Agendada' ? (\n                                                                <Space size = 'middle'>\n                                                                    <StartMeeting \n                                                                        meeting = { record }\n                                                                        token = { token }\n                                                                    />\n                                                                </Space>\n                                                            ) : (\n                                                                <span>\n                                                                    {\n                                                                        record.status === 'Pendente' ? (\n                                                                            <Space size = 'middle'>\n                                                                                <FormAddMembersMeeting \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                <FormRemoveMembersMeeting \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                <MeetingMembers \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                <Items \n                                                                                    meeting = { record }\n                                                                                />\n                                                                                <FormEditMeeting \n                                                                                    meeting = { record } \n                                                                                />\n                                                                            </Space>\n                                                                        ) : (\n                                                                            <Space size = 'middle'>\n                                                                                <Record \n                                                                                    meeting = { record } \n                                                                                />\n                                                                                {\n                                                                                    record.respondUser === true ? (\n                                                                                        <ResultQuiz \n                                                                                            meeting = { record }\n                                                                                            token = { this.state.token }\n                                                                                        />\n                                                                                    ) : (\n                                                                                        <span>\n                                                                                            {\n                                                                                                record.questtionaire !== null ? (\n                                                                                                    <RespondQuiz \n                                                                                                        meeting = { record }\n                                                                                                        token = { this.state.token }\n                                                                                                        userID = { currentUser.id }\n                                                                                                        history = { this.props.history }\n                                                                                                        slug = { slug }\n                                                                                                    />\n                                                                                                ) : (\n                                                                                                    <Link to = { `/${ slug }/${ record.slug }/novo_questionario` }> \n                                                                                                        <Button type = 'primary' ghost>\n                                                                                                            <b><PlusOutlined /> Novo Questionário </b>\n                                                                                                        </Button>\n                                                                                                    </Link>\n                                                                                                )\n                                                                                            }\n                                                                                        </span>\n                                                                                    )\n                                                                                }\n                                                                            </Space>\n                                                                        )\n                                                                    }\n                                                                </span>\n                                                            )\n                                                        }\n                                                    </span>\n                                                )\n                                            }\n                                        </span>\n                                    )\n                                }\n                            </span>\n                        )\n                    }   \n                ]}\n            />\n        );\n\t}\n}\n\nexport default withRouter(ProjectList);","import React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport { Form } from '@ant-design/compatible';\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nimport Hoc from '../../../../hoc/hoc';\n\nconst FormItem = Form.Item;\n\nlet id = 0;\n\nclass QuestionForm extends Component {\n\n    remove = k => {\n\n\t\tconst { form } = this.props;\n\t\tconst keys = form.getFieldValue('keys');\n\t\t\n\t\tif (keys.length === 1) return;\n\t\t\n\t\tform.setFieldsValue({\n\t\t\tkeys: keys.filter(key => key !== k)\n\t\t});\n\t};\n\n  \tadd = () => {\n\t\t\n\t\tconst { form } = this.props;\n\t\tconst keys = form.getFieldValue('keys');\n\t\tconst nextKeys = keys.concat(++id);\n\t\t\n\t\tform.setFieldsValue({\n\t\t\tkeys: nextKeys\n\t\t});\n  \t};\n\n    render() {\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n\t\tgetFieldDecorator('keys', { initialValue: [] });\n\t\tconst keys = getFieldValue('keys');\n\t\tconst formItems = keys.map((k, index) => (\n\t\t\t<FormItem label = { index === 0 ? 'Escolhas' : ''} key = { k }>\n\t\t\t\t{\n\t\t\t\t\tgetFieldDecorator(`questions[${ this.props.id }]choices[${ k }]`, {\n\t\t\t\t\t\tvalidateTrigger: ['onChange', 'onBlur'],\n\t\t\t\t\t\trules: [{\n\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\twhitespace: true,\n\t\t\t\t\t\t\tmessage: 'Por Favor, Adicione Uma Opção Para Resposta.'\n\t\t\t\t\t\t}]\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tplaceholder = 'Escolha a Resposta'\n\t\t\t\t\t\t\tstyle = {{ marginLeft: 20, width: 335 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t{ keys.length > 1 ? (\n\t\t\t\t\t<MinusCircleOutlined\n\t\t\t\t\t\tstyle = {{ marginLeft: 20 }}\n\t\t\t\t\t\tdisabled = { keys.length === 1 }\n\t\t\t\t\t\tonClick = {() => this.remove(k)}\n\t\t\t\t\t/>\n\t\t\t\t) : null }\n\t\t\t</FormItem>\n\t\t));\n        return (\n            <Hoc>\n                <FormItem label = 'Pergunta: '>\n\t\t\t\t{\n\t\t\t\t\tgetFieldDecorator(`question[${ this.props.id }]`, {\n\t\t\t\t\t\tvalidateTrigger: ['onChange', 'onBlur'],\n\t\t\t\t\t\trules: [{\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\tmessage: 'Por Favor, Insira Uma Pergunta'\n\t\t\t\t\t\t}]\n\t\t\t\t\t})(\n\t\t\t\t\t\t<Input \n\t\t\t\t\t\t\tplaceholder = 'Adicionar Uma Pergunta'\n\t\t\t\t\t\t\tstyle = {{ marginLeft: 20, width: 335, marginBottom: 10 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</FormItem>\n\t\t\t\t\n\t\t\t\t{ formItems }\n\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<div align = 'center'>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\ttype = 'primary' onClick = { this.add } ghost \n\t\t\t\t\t\t\tstyle = {{ marginLeft: 90, marginTop: 10 }}>\n\t\t\t\t\t\t\t<PlusOutlined/><b> Adicione Uma Opção de Resposta </b>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n                </Form.Item>\n            </Hoc>\n        );\n    }\n}\n\nexport default QuestionForm;","import React, { Component } from 'react';\nimport { Button, Input, Divider, notification } from 'antd';\nimport { Form } from '@ant-design/compatible';\nimport { PlusOutlined, MinusCircleOutlined, SaveOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\n\nimport QuestionForm from './QuestionForm';\nimport Hoc from '../../../../hoc/hoc';\n\nimport { addQuesttionaire } from '../../../../store/meeting';\nimport { getUserToken } from '../../../../store/user';\n\nclass FormCreateQuiz extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            formCount: 1,\n            formLayout: 'vertical'\n        }\n        \n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n    }\n\n    add = () => {\n        const { formCount } = this.state;\n        this.setState({\n            formCount: formCount + 1\n        });\n    };\n    \n    remove = () => {\n        const { formCount } = this.state;\n        this.setState({\n            formCount: formCount - 1\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const questions = [];\n                const token = getUserToken();\n                const slugProjet = this.props.match.params.slugProjeto;\n                let status = null;\n\n                for (let aux = 0; aux < values.questions.length; aux ++) {\n                    questions.push({\n\n                        title: values.question[aux],\n                        choices: values.questions[aux].choices.filter(el => el !== null)\n                    });\n                }\n\n                const questtionaire = {\n                    title: values.title,\n                    questions\n                }\n\n                const meeting = {\n                    slug: this.props.match.params.slug,\n                    questtionaire: questtionaire\n                }\n\n                status = addQuesttionaire(token, meeting);\n                if(status === true) {\n                    notification.open({\n                        type: 'success',\n                        message: 'Questionário Criado!',\n                        description: 'O Questionário Foi Criado Com Sucesso!',\n                    });\n    \t\t\t\tthis.props.history.push(`/projeto/${ slugProjet }`);\n                } else {\n                    notification.open({\n                        type: 'error',\n                        message: 'Questionário Não Criado!',\n                        description: 'O Questionário Não Foi Criado! Tente Novamente!',\n                    });\n                    notification.open({\n                        type: 'info',\n                        message: 'Ação Requerida!',\n                        description: 'Caso o Problema Persista, Entre em Contato Com o Desenvolvedor!',\n                    });\n                }\n            }\n        });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const questions = [];\n\n        for (let aux = 0; aux < this.state.formCount; aux ++) {\n            questions.push(\n                <Hoc key = { aux }>\n                    { questions.length > 0 ? (\n                        <MinusCircleOutlined\n                            className = 'dynamic-delete-button'\n                            disabled = { questions.length === 0 }\n                            onClick={() => this.remove()}\n                        />\n                    ) : null }\n                    <QuestionForm id = { aux } { ...this.props } />\n                    <Divider />\n                </Hoc>\n            );\n        }\n\n        return (\n            <span className = 'quizComponent'>\n                <Form onSubmit = { this.handleSubmit } style = {{ width: 'auto', height: 'auto' }}>\n                    <h1 align = 'center'> Criar Questionário </h1>\n                    <Form.Item label = { 'Título do Questionário: '}>\n                        {\n                            getFieldDecorator(`title`, {\n                                validateTrigger: ['onChange', 'onBlur'],\n                                rules: [{\n                                    required: true,\n                                    message: 'Por Favor, Coloque o Título ao Questionário'\n                                }]\n                            })(\n                                <Input \n                                    placeholder = 'Adicione um Títúlo ao Questionário'\n                                    maxLength = { 50 } \n                                    style = {{ marginLeft: 20, width: 250, marginBottom: 10 }}\n                                />\n                            )\n                        }\n                    </Form.Item>\n\n                    { questions }\n\n                    <Form.Item>\n                        <Button \n                            type = 'primary' onClick = { this.add } ghost\n                            style = {{ marginLeft: 125 }}\n                        >\n                            <PlusOutlined/><b> Adicione Outra Questão </b>\n                        </Button>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button\n                            type = 'primary' \n                            htmlType = 'submit' \n                            style = {{ marginBottom: 100, marginLeft: 140, marginTop: 10 }}\n                            ghost\n                        >\n                            <SaveOutlined /><b> Salvar Questionário </b>\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </span>\n        );\n    }\n}\n\nconst QuizCreatorForm = Form.create()(FormCreateQuiz);\n\nexport default withRouter(QuizCreatorForm);","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Hoc from './hoc/hoc';\n\nimport Homepage from './components/homepage/Homepage';\n\nimport UserDetail from './components/user/UserDetail';\nimport UserList from './components/user/UserList';\n\nimport SectorDetail from './components/sector/SectorDetail';\nimport SectorList from './components/sector/SectorList';\n\nimport ProjectList from './components/project/ProjectList';\n\nimport FormCreateQuiz from './components/forms/meeting/questions/FormCreateQuiz';\n\nconst BaseRouter = (props) => (\n    <Hoc>\n        {\n            props.token === null ? (\n                <Route exact path = '/' component = { Homepage } />\n            ) : (\n                <div>\n                    <Route exact path = '/informacoes_usuario' component = { UserDetail } />\n                    <Route exact path = '/lista_de_usuarios' component = { UserList } />\n\n                    <Route exact path = '/setor/:slug' component = { SectorDetail } />\n                    <Route exact path = '/lista_de_setores' component = { SectorList } />\n\n                    <Route exact path = '/projeto/:slug' component = { ProjectList } />\n                    <Route exact path = '/:slugProjeto/:slug/novo_questionario' component = { FormCreateQuiz } />\n                </div>\n            )\n        }\n    </Hoc>\n);\n\nconst mapStateToProps = state => {\n    return { token: state.auth.token };\n};\n\nexport default withRouter(connect(mapStateToProps)(BaseRouter));","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, notification } from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\n\nimport { getUserToken } from '../../../store/user';\nimport { saveSector, getSectors } from '../../../store/sector';\n\nclass FormSectorCreate extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            visible: false,\n            token: null,\n            sectors: []\n        }\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ \n            sectors: sectors,\n            token: token,\n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    async handleSubmit(values) {\n\n        const sectors = this.state.sectors;\n\n        let found = sectors.find(sector => {\n            if(sector.name === values.name) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined) {\n            const token = this.state.token;\n            const initials = values.initials;\n            const name = values.name;\n\n            const sector = {\n                name: name,\n                initials: initials\n            };\n            const status = await saveSector(token, sector);\n\n            if(status === true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Setor Criado',\n                    description: 'Setor Criado Com Sucesso!',\n                });\n                this.props.history.push('/lista_de_setores');\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Ação Requerida',\n                    description: 'Erro Inesperado.. Tente Novamente!',\n                });\n                this.props.history.push('/lista_de_setores');\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Setor Não Criado',\n                description: 'Já Existe um Setor Com Este Nome! Por Favor, Cadastre Outro!',\n            });\n        }\n    }\n\n    render() {\n        const CreateFormSector = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = 'Registro de Setor' onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible } style = {{ height: 320 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Setor\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 6 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'name' label = 'Nome'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Nome do Setor',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Setor'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 6 }>\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'initials' label = 'Iniciais do Setor'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira as Iniciais',\n                                    }]}\n                                >\n                                    <Input maxLength = { 6 } placeholder = 'Iniciais' />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Setor </span>\n                <CreateFormSector />\n            </div>\n        );\n    } \n}\n\nexport default withRouter(FormSectorCreate);","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, InputNumber, notification } from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\n\nimport { getUserToken, authSignup } from '../../../store/user';\nimport { getSectors } from '../../../store/sector';\nimport { typeUserValidate } from '../../../services/userService';\n\nconst { Option } = Select;\n\nclass FormUserCreate extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            sectors: []\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n\n        this.setState({ sectors: sectors });\n    }\n\n    async handleSubmit(values) {\n        let is_administrator_valid = typeUserValidate(values.type_user);\n        let description = null;\n\n        if(values.description === undefined || values.description === '') {\n            description = 'Descrição Padrão';\n        } else {\n            description = values.description;\n        }\n\n        const user = {\n            username: values.username,\n            email: values.email,\n            password1: values.password1,\n            password2: values.password1,\n            is_administrator: is_administrator_valid,\n            is_participant: !is_administrator_valid,\n            description: description,\n            name: values.name,\n            ramal: values.ramal,\n            sector: values.sector,\n        };\n\n        const status = await authSignup(user);\n\n        if(status !== false) {\n            notification.open({ \n                type: 'success',\n                message: 'Usuário Criado',\n                description: `O Usuário ${ values.name } Foi Salvo Com Sucesso!`,\n            });\n            notification.open({\n                type: 'info',\n                message: 'Ação Requerida',\n                description: 'O Usuário já Foi Adicionado, Verifique a Lista de Usuários.',\n            });\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Usuário Não Cadastrado',\n                description: 'Não Foi Possível Cadastrar o Usuário!',\n            });\n            notification.open({\n                type: 'info',\n                message: 'Ação Requerida',\n                description: 'Se o Problema Persistir, Entre em Contato Com o Desenvolvedor.',\n            });\n        }\n\n        this.setState({ visible: false });\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n    \n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n    \n    render() {\n        let data = { sectors: [] };\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n            });            \n        }\n\n        const CreateFormUser = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer \n                    title = 'Registro de Usuário' onClose = { this.onClose } width = { 720 }\n                    visible = { this.state.visible }\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Usuário\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 12 }>\n                                <Form.Item\n                                    name = 'name' label = 'Nome Completo'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Nome Completo' \n                                    }]}\n                                >\n                                    <Input \n                                        maxLength = { 100 } \n                                        placeholder = 'Por Favor, Insira Seu Nome Completo' \n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 12 }>\n                                <Form.Item\n                                    name = 'email' label = 'Email'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Email' \n                                    }]}\n                                >\n                                <Input\n                                    style = {{ width: '100%' }}\n                                    placeholder = 'Por Favor, Insira Seu Email'\n                                    maxLength = { 40 }\n                                />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 8 }>\n                                <Form.Item\n                                    name = 'username' label = 'Usuário'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Usuário' \n                                    }]}\n                                >\n                                    <Input \n                                        maxLength = { 20 } \n                                        placeholder = 'Por Favor, Insira Seu Usuário' \n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 4 }>\n                                <Form.Item\n                                    name = 'ramal' label = 'Ramal'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Seu Ramal' \n                                    }]}\n                                >\n                                    <InputNumber \n                                        maxLength = { 6 } \n                                        placeholder = 'Ramal' \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 12 }>\n                                <Form.Item\n                                    name = 'password1' label = 'Senha'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira Sua Senha' \n                                    }]}\n                                >\n                                    <Input.Password \n                                        maxLength = { 40 } \n                                        placeholder = 'Por Favor, Insira Sua Senha' \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 20 }>\n                            <Col span = { 6 }>\n                                <Form.Item \n                                    name = 'type_user' label = 'Tipo de Usuário' \n                                    rules = {[{ required: true }]}\n                                >\n                                    <Select>\n                                        <Option key = '1' value = { 'Administrador' }> \n                                            Administrador \n                                        </Option>\n                                        <Option key = '2' value = { 'Participante' }>\n                                            Participante\n                                        </Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'sector' label = 'Setor' \n                                    rules = {[{ \n                                        required: true,\n                                        message: 'Por Favor, Escolha o Setor' \n                                    }]}\n                                >\n                                    <Select>\n                                        { data.sectors.map(sector =>\n                                            <Option value = { sector.key } key = { sector.key }> \n                                                { sector.name } \n                                            </Option> \n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 24 }>\n                                <Form.Item\n                                    name = 'description' label = 'Descrição (Opcional)'\n                                    rules = {[{\n                                        required: false,\n                                        message: 'Por Favor, Insira Uma Descrição Sua',\n                                    },\n                                ]}\n                                >\n                                    <Input.TextArea \n                                        rows = { 4 } \n                                        placeholder = 'Por Favor, Insira Uma Descrição Sua' \n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Usuário </span>\n                <CreateFormUser />\n            </div>\n        );\n    }\n}\n\nexport default FormUserCreate; ","import React, { Component } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, notification } from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\n\nimport { getUserToken } from '../../../store/user';\nimport { getSectors } from '../../../store/sector';\nimport { saveProject, getAllProjects } from '../../../store/project';\n\nconst { Option } = Select;\n\nclass FormProjectCreate extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            projects: [],\n            sectors: [],\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const sectors = await getSectors(token);\n        const projects = await getAllProjects(token);\n\n        this.setState({ \n            sectors: sectors,\n            token: token,\n            projects: projects \n        });\n    }\n\n    async handleSubmit(values) {\n\n        const projects = this.state.projects;\n\n        let found = projects.find(project => {\n            if(project.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined) {\n            const token = this.state.token;\n            const title = values.title;\n            const sector = values.sector;\n            const statusProject = 'Pendente';\n            const project = {\n                title: title,\n                sector: sector,\n                status: statusProject,\n                slug: ''\n            };\n\n            const status = await saveProject(token, project);\n\n            if(status !== true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Projeto Criado',\n                    description: `O Projeto ${ project.title } Foi Salvo Com Sucesso!`,\n                });\n                this.props.history.push('/lista_de_setores');\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Projeto Não Foi Criado',\n                    description: 'Não Foi Possível Cadastrar o Projeto! Tente Novamente!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Se o Problema Persistir, Entre em Contato Com o Desenvolvedor!',\n                });\n            }\n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Projeto Não Criado',\n                description: 'Já Existe Um Projeto Com Este Nome/Título Neste ou em Outro Setor. ' +\n                             'Cadastre Com Outro Nome!' \n            });\n        }\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n    \n    render() {\n        let data = { sectors: [] };\n\n        for(let aux = 0; aux < this.state.sectors.length; aux ++) {\n            data.sectors.push({\n                key: this.state.sectors[aux].id,\n                name: this.state.sectors[aux].name,\n            });            \n        }\n\n        const CreateFormProject = () => {\n            const [form] = Form.useForm();\n            return (\n                <Drawer\n                    title = 'Registro de Projeto' onClose = { this.onClose } width = { 680 } \n                    visible = { this.state.visible } style = {{ height: 420 }}\n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Projeto\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 20 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'title' label = 'Nome do Projeto'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Nome do Projeto',\n                                    }]}\n                                >\n                                    <Input maxLength = { 100 } placeholder = 'Insira o Nome do Projeto'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'sector' label = 'Setor' \n                                    rules = {[{ \n                                        required: true,\n                                        message: 'Por Favor, Escolha o Setor', \n                                    }]}\n                                >\n                                    <Select>\n                                        { data.sectors.map(sector =>\n                                            <Option value = { sector.key } key = { sector.key }> \n                                                { sector.name } \n                                            </Option> \n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 8 }>\n                            <Col span = { 8 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status do Projeto'\n                                    rules = {[{ \n                                        required: false, \n                                    }]}\n                                >\n                                    <Input disabled = { true } placeholder = 'Pendente'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return(\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Projeto </span>\n                <CreateFormProject />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(FormProjectCreate);","import React, { Component } from 'react';\nimport { \n    Drawer, Form, Button, Col, Row, Input, DatePicker, TimePicker, \n    TreeSelect, Select, notification \n} from 'antd';\nimport { SaveOutlined, StopOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router';\nimport locale from 'antd/es/date-picker/locale/pt_BR';\nimport moment from 'moment';\n\nimport { getUserToken, getUsers } from '../../../store/user';\nimport { getSectors } from '../../../store/sector';\nimport { getAllProjects } from '../../../store/project';\nimport { saveMeeting, getAllMeetings } from '../../../store/meeting';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nclass FormMeetingCreate extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            visible: false,\n            token: null,\n            projects: [],\n            users: [],\n            sector: [],\n            meetings: []\n        }\n\n        this.showDrawer = this.showDrawer.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const users = await getUsers(token);\n        const projects = await getAllProjects(token);\n        const sector = await getSectors(token);\n        const meetings = await getAllMeetings(token);\n\n        this.setState({ \n            users: users,\n            token: token,\n            projects: projects,\n            sector: sector,\n            meetings: meetings\n        });\n    }\n\n    showDrawer = () => {\n        this.setState({ visible: true });\n    };\n\n    onClose = () => {\n        this.setState({ visible: false });\n    };\n\n    async handleSubmit(values) {\n        const meetings = this.state.meetings;\n\n        let found = meetings.find(meeting => {\n            if(meeting.title === values.title) {\n                return true;\n            } else {\n                return undefined;\n            }\n        });\n\n        if(found === 'undefined' || found === undefined) {\n            const token = this.state.token;\n            const meeting = {\n                title: values.title,\n                meeting_leader: values.meeting_leader,\n                project: values.project,\n                subject_matter: values.subject_matter,\n                initial_date: values['initial_date'].format('DD/MM/YYYY'),\n                initial_hour: values['initial_hour'].format('HH:mm:ss'),\n                status: 'Pendente'\n            };\n            let slug = null;\n\n            for(let aux = 0; aux < this.state.projects.length; aux ++) {\n                if(this.state.projects[aux].id === values.project) {\n                    slug = this.state.projects[aux].slug;\n                }\n            }\n            \n            const status = await saveMeeting(token, meeting);\n\n            if(status !== true) {\n                notification.open({ \n                    type: 'success',\n                    message: 'Reunião Criada',\n                    description: `A Reunião ${ meeting.title } Foi Salva Com Sucesso!`,\n                });\n                this.props.history.push(`/projeto/${ slug }`);\n            } else {\n                notification.open({ \n                    type: 'error',\n                    message: 'Reunião Não Criada',\n                    description: 'Não Foi Possível Cadastrar a Reunião! Tente Novamente!',\n                });\n                notification.open({\n                    type: 'info',\n                    message: 'Ação Requerida',\n                    description: 'Se o Problema Persistir, Entre em Contato Com o Desenvolvedor!',\n                });\n            }            \n        } else {\n            notification.open({ \n                type: 'error',\n                message: 'Reunião Não Criada',\n                description: 'Já Existe Uma Reunião Com Este Nome/Título Neste ou em Outro Setor. ' +\n                             'Cadastre Com Outro Nome!' \n            });\n        }    \n    }\n    \n    onSearch(val) {\n        console.log('search:', val);\n    }\n\n    render() {\n        let data_users = { users: [] };\n\n        for(let aux = 0; aux < this.state.users.length; aux ++) {\n            data_users.users.push({\n                key: this.state.users[aux].id,\n                name: this.state.users[aux].name\n            });\n        }\n\n        let projects_list = [];\n        let data = { projects: [] }\n        let count = 0;\n\n        for(let aux = 0; aux < this.state.sector.length; aux ++) {\n            data.projects.push({\n                id: this.state.sector[aux].id,\n                title: this.state.sector[aux].name,\n                disabled: true\n            });\n            for(let auxProject = 0; auxProject < this.state.projects.length; auxProject ++) {\n                if(this.state.sector[aux].id === this.state.projects[auxProject].sector) {\n                    if(this.state.projects[auxProject].status === 'Cancelada') {\n\n                    } else {\n                        data.projects.push({\n                            pId: this.state.projects[auxProject].id,\n                            value: this.state.projects[auxProject].id,\n                            title: this.state.projects[auxProject].title\n                        });\n                    }\n                    projects_list[count] = this.state.projects[auxProject];\n                    count ++;\n                }\n            }\n            count = 0;\n            projects_list = [];\n        }\n\n        const CreateFormMeeting = () => {\n            const [form] = Form.useForm();\n            return(\n                <Drawer\n                    title = 'Registro de Reunião' onClose = { this.onClose } width = { 650 }\n                    visible = { this.state.visible } \n                    footer = { \n                        <div style = {{ textAlign: 'center' }}>\n                            <Button onClick = { this.onClose } style = {{ marginRight: 8 }}>\n                                <StopOutlined /> Cancelar\n                            </Button>\n                            <Button onClose = { this.onClose } type = 'primary' \n                                onClick = { () => {\n                                    form.validateFields().then(values => {\n                                        form.resetFields();\n                                        this.handleSubmit(values);\n                                    }).catch(info => {\n                                        console.log('Validate Failed:', info);\n                                    });\n                                }}>\n                                <SaveOutlined /> Cadastrar Reunião\n                            </Button>\n                        </div>\n                    }\n                >\n                    <Form form = { form } hideRequiredMark layout = 'vertical'>\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'title' label = 'Título da Reunião'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira o Título da Reunião',\n                                    }]}\n                                >\n                                    <Input \n                                        maxLength = { 40 } \n                                        placeholder = 'Insira o Título da Reunião'\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'status' label = 'Status da Reunião'\n                                    rules = {[{ \n                                        required: false, \n                                    }]}\n                                >\n                                    <Input disabled = { true } placeholder = 'Pendente'/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'subject_matter' label = 'Ementa da Reunião'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira a Ementa da Reunião',\n                                    }]}\n                                >\n                                    <TextArea rows = { 4 } maxLength = { 500 }/>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'meeting_leader' label = 'Líder da Reunião'\n                                    rules = {[{\n                                        required: true,\n                                        message: 'Por Favor, Escolha o Líder da Reunião'\n                                    }]}\n                                >\n                                    <Select\n                                        showSearch\n                                        style = {{ width: '100%' }}\n                                        placeholder = 'Selecione o Líder da Reunião'\n                                        optionFilterProp = 'children'\n                                        onSearch = { this.onSearch }\n                                        filterOption = {(input, option) =>\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                        }\n                                    >\n                                        { data_users.users.map(user =>\n                                            <Option value = { user.key } key = { user.key }>\n                                                { user.name }\n                                            </Option>\n                                        )}\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 10 }>\n                                <Form.Item\n                                    name = 'initial_date' label = 'Data da Reunião'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira a Data de Abertura da Reunião',\n                                    }]}\n                                >\n                                    <DatePicker\n                                        locale = { locale }\n                                        initialValues = { moment('09/07/2020', 'DD/MM/YYYY')} \n                                        format = { dateFormatList } \n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span = { 6 }>\n                                <Form.Item\n                                    name = 'initial_hour' label = 'Hora de Início'\n                                    rules = {[{ \n                                        required: true, \n                                        message: 'Por Favor, Insira a Hora de Abertura da Reunião',\n                                    }]}\n                                >\n                                    <TimePicker \n                                        use24Hours\n                                        initialValues = { moment('00:00:00', 'HH:mm:ss')}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter = { 16 }>\n                            <Col span = { 16 }>\n                                <Form.Item\n                                    name = 'project' label = 'Projeto'\n                                >\n                                    <TreeSelect\n                                        style = {{ width: '100%' }}\n                                        value = { this.state.value }\n                                        dropdownStyle = {{ maxHeight: 400, overflow: 'auto' }}\n                                        treeData = { data.projects }\n                                        placeholder = 'Selecione o Projeto'\n                                        treeDefaultExpandAll\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Drawer>\n            );\n        };\n        return (\n            <div>\n                <span onClick = { this.showDrawer }> Adicionar Reunião </span>\n                <CreateFormMeeting />\n            </div>\n        )\n    }\n}\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n\nexport default withRouter(FormMeetingCreate);","import React, { Component } from 'react';\nimport { Menu, Dropdown, Divider } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { \n    DownOutlined, UserOutlined, TeamOutlined, \n    LogoutOutlined, UserAddOutlined, EnvironmentOutlined,\n    OrderedListOutlined, AppstoreAddOutlined, AuditOutlined \n} from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport FormSectorCreate from '../forms/sector/FormSectorCreate';\nimport FormUserCreate from '../forms/user/FormUserCreate';\nimport FormProjectCreate from '../forms/project/FormProjectCreate';\nimport FormMeetingCreate from '../forms/meeting/FormMeetingCreate';\n\nimport { getCurrentUser, getUserToken, getUserId } from '../../store/user';\nimport { typeUser } from '../../services/userService';\nimport { logout } from '../../store/auth';\n\nclass DropdownNav extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            currentUser: {},\n        }\n    }\n\n    async componentDidMount() {\n        const token = getUserToken();\n        const userId = getUserId();\n        const user = await getCurrentUser(token, userId);\n        this.setState({ currentUser: user });\n    }    \n\n    render() {\n        const { currentUser } = this.state;\n        const username = currentUser.username;\n        const type = typeUser(currentUser.is_administrator);\n        return (\n            <div>\n                <Dropdown overlay = { \n                    <Menu>\n                        <Menu.Item key = '1'> \n                            <UserOutlined /> \n                            <Link to = { '/informacoes_usuario' }> Meu Perfil </Link>\n                        </Menu.Item>\n                        <Divider/>\n\n                        <Menu.Item key = '2'> \n                            <TeamOutlined />\n                            <Link to = { '/lista_de_usuarios' }> Lista de Usuários </Link>\n                        </Menu.Item>\n                        <Divider/>\n\n                        {\n                            type === 'Administrador' ? (\n                                <Menu.Item key = '3'> \n                                    <UserAddOutlined />\n                                    <FormUserCreate />\n                                    <Divider/>\n                                </Menu.Item>\n                            ) : null\n                        }\n\n                        <Menu.Item key = '4' onClick = { this.props.logout }> \n                            <LogoutOutlined />\n                            <Link to = { '/' }> Sair da Sessão </Link>\n                        </Menu.Item>\n                    </Menu> \n                }>\n                    <span className = 'ant-dropdown-link'>\n                        <UserOutlined/> \n                            Olá, { username } \n                        <DownOutlined />\n                    </span>\n                </Dropdown>\n\n                <Dropdown overlay = { \n                    <Menu>\n                        <Menu.Item key = '5'> \n                            <OrderedListOutlined /> \n                            <Link to = { '/lista_de_setores' }> Lista de Setores </Link>\n                        </Menu.Item>\n                        {\n                            type === 'Administrador' ? (\n                                <Menu.Item key = '6'> \n                                    <AppstoreAddOutlined />\n                                    <FormSectorCreate />\n                                </Menu.Item>\n                            ) : null\n                        }\n                    </Menu> \n                }>\n                    <span className = 'ant-dropdown-link'>\n                        <EnvironmentOutlined/> Setor <DownOutlined />\n                    </span>\n                </Dropdown>\n\n                {\n                    type === 'Administrador' ? (\n                        <Dropdown overlay = { \n                            <Menu>\n                                <Menu.Item key = '7'> \n                                    <AppstoreAddOutlined />\n                                    <FormProjectCreate />\n                                </Menu.Item>\n                            </Menu> \n                        }>\n                            <span className = 'ant-dropdown-link'>\n                                <EnvironmentOutlined/> Projetos <DownOutlined />\n                            </span>\n                        </Dropdown>\n                    ) : null\n                }\n\n                {\n                    type === 'Administrador' ? (\n                        <Dropdown overlay = { \n                            <Menu>\n                                <Menu.Item key = '7'> \n                                    <AppstoreAddOutlined />\n                                    <FormMeetingCreate />\n                                </Menu.Item>\n                            </Menu> \n                        }>\n                            <span className = 'ant-dropdown-link'>\n                                <AuditOutlined/> Reuniões <DownOutlined />\n                            </span>\n                        </Dropdown>\n                    ) : null\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    \n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logout: () => dispatch(logout())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DropdownNav));","import React, { Component } from 'react';\nimport { Form, Modal, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { validateFields } from '../../../services/userService';\nimport { authLogin } from '../../../store/auth';\n\nclass FormLogin extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            visible: false\n        }\n    \n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.visibleForm = this.visibleForm.bind(this);\n        this.cancel = this.cancel.bind(this);\n    }\n\n    visibleForm() {\n        this.setState({ visible: true });\n    }\n\n    cancel() {\n        this.setState({ visible: false });\n    }\n\n    handleSubmit(values) {\n        const username = values.username;\n        const password = values.password;\n\n        if(validateFields(username) === true) {\n\n        } else {\n            this.props.onAuth(username, password);\n            this.props.history.push('/lista_de_setores');\n        }\n    }\n\n    render() {\n        const CollectionCreateForm = () => {\n            const [form] = Form.useForm();\n            return (\n                <Modal\n                    visible = { this.state.visible } title = 'Realize o Login' okText = 'Entrar'\n                    cancelText = 'Cancelar' onCancel = { this.cancel }\n                    onOk = {() => {\n                        form.validateFields().then(values => {\n                            form.resetFields();\n                            this.handleSubmit(values);\n                        }).catch(info => {\n                            console.log('Validate Failed:', info);\n                        });\n                    }}\n                >\n                    <Form form = { form } layout = 'vertical'>\n                        <Form.Item \n                            label = 'Usuário' name = 'username' className = 'inputFormLogin'\n                            rules = {[{ required: true, message: 'Por Favor, Insira o Seu Usuário!' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label = 'Senha' name = 'password' className = 'inputFormLogin'\n                            rules = {[{ required: true, message: 'Por Favor, Insira a Sua Senha!' }]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </Form>\n              </Modal>\n            );\n        };\n        return(\n            <div>\n                <span className = 'textNavbar' onClick = { this.visibleForm }> Login </span>\n                <CollectionCreateForm />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return { \n        onAuth: (username, password) => dispatch(authLogin(username, password)) \n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FormLogin));","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\n\nimport Dropdown from './Dropdown';\nimport FormLogin from '../forms/login/FormLogin';\n\nconst { Header } = Layout;\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <Header className = 'header'>\n                <Menu className = 'menu' mode = 'horizontal'>\n                    {\n                        this.props.isLogged === null ? (\n                            null\n                        ) : (\n                            <Menu.Item>\n                                <Dropdown />\n                            </Menu.Item>\n                        )\n                    }\n                    {\n                        this.props.isLogged === null ? (\n                            <Menu.Item>\n                                <FormLogin props = { this.props } />\n                            </Menu.Item>\n                        ) : (\n                            null\n                        )\n                    }\n                </Menu>\n            </Header>\n        );\n    }\n}\n\nexport default Navbar;","import React, { useState } from 'react';\nimport { Input, AutoComplete } from 'antd';\n\nfunction getRandomInt(max, min = 0) {\n    return Math.floor(Math.random() * (max - min + 1)) + min; \n}\n\nconst searchResult = query =>\n    new Array(getRandomInt(5)).join('.').split('.').map((item, idx) => {\n        const category = `${ query }${ idx }`;\n        return {\n            value: category,\n            label: (\n                <div\n                    style = {{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                    <span>\n                    Found { query } on{' '}\n                    <a\n                        href = { `https://s.taobao.com/search?q=${ query }` }\n                        rel = ''\n                    >\n                        { category }\n                    </a>\n                    </span>\n                    <span>{ getRandomInt(200, 100)} results</span>\n                </div>\n            ),\n        };\n    });\n\nconst Complete = () => {\n    const [ options, setOptions ] = useState([]);\n    const handleSearch = value => {\n    setOptions(value ? searchResult(value) : []);\n};\n\nconst onSelect = value => {\n    console.log('onSelect', value);\n};\n\n  return (\n        <AutoComplete \n            dropdownMatchSelectWidth = { 252 }\n            options = { options }\n            className = 'autoComplete'\n            onSelect = { onSelect }\n            onSearch = { handleSearch }\n        >\n            <Input.Search size = 'large' \n                placeholder = 'Pesquise Aqui Sobre Projetos, Reuniões, Setores, Pessoas...' enterButton \n            />\n        </AutoComplete>\n    );\n};\n\nexport default Complete;","import React from 'react';\nimport { Layout } from 'antd';\nimport { GithubOutlined, InstagramOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from './Navbar';\nimport AutoComplete from './AutoComplete';\n\nimport '../../css/layout.css';\nimport '../../css/icon.css';\nimport '../../css/text.css';\nimport '../../css/project.css';\nimport '../../css/user.css';\nimport '../../css/buttons.css';\nimport '../../css/img.css';\nimport '../../css/alert.css';\nimport '../../css/forms.css';\nimport '../../css/quiz.css';\n\nconst { Footer, Content } = Layout;\n\nconst CustomLayout = (props) => {\n\treturn (\n\t\t<Layout>\n\t\t\t<Navbar isLogged = { props.token }/>\n\t\t\t<Content>\n\t\t\t\t{\n\t\t\t\t\tprops.token !== null ? (\n\t\t\t\t\t\t<AutoComplete />\n\t\t\t\t\t) : null\n\t\t\t\t}\n\t\t\t\t{ props.children }\n\t\t\t</Content>\n\t\t\t<Footer className = 'footer'>\n\t\t\t\t<b> \n\t\t\t\t\tGrata - Gerenciamento de Reuniões e Atas ©2020 \n\t\t\t\t\tCriado por Victor Hugo Lopes Mota. Contatos:\n\t\t\t\t\t<a href = 'https://github.com/MrVictor42/'>\n\t\t\t\t\t\t<GithubOutlined />\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href = 'https://www.instagram.com/mrvictor42/'>\n\t\t\t\t\t\t<InstagramOutlined />\n\t\t\t\t\t</a>\n\t\t\t\t</b>\n\t\t\t</Footer>\n\t\t</Layout>\n\t);\n}\n\nconst mapStateToProps = state => {\n    return { token: state.auth.token };\n};\n\nexport default withRouter(connect(mapStateToProps)(CustomLayout));","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\n\nimport 'antd/dist/antd.css';\nimport './css/App.css';\n\nimport { authCheckState } from './store/auth';\nimport Layout from './components/layout/Layout';\n\nclass App extends Component {\n\t  \n\tcomponentDidMount() {\n\t\tthis.props.onTryAutoSignup();\n  \t}\n\n  \trender() {\n    \treturn (\n\t\t\t<Router>\n\t\t\t\t<Layout {...this.props}>\n\t\t\t\t\t<BaseRouter />\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = () => {\n  \treturn { };\n};\n\nconst mapDispatchToProps = dispatch => {\n  \treturn { onTryAutoSignup: () => dispatch(authCheckState()) };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const isLocalhost = Boolean(\n  \twindow.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  \tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\tif (isLocalhost) {\n\t\t\tcheckValidServiceWorker(swUrl, config);\n\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\tconsole.log(\n\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n\t\t});\n  \t}\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n    .then(response => {\n\t\tconst contentType = response.headers.get('content-type');\n\t\tif (\n\t\t\tresponse.status === 404 ||\n\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t) {\n\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister().then(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t});\n\t\t} else {\n\t\t\tregisterValidSW(swUrl, config);\n\t\t}\n    })\n    .catch(() => {\n      \tconsole.log(\n        \t'No internet connection found. App is running in offline mode.'\n      \t);\n    });\n}\n\nexport function unregister() {\n  \tif ('serviceWorker' in navigator) {\n    \tnavigator.serviceWorker.ready\n\t\t.then(registration => {\n\t\t\tregistration.unregister();\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error.message);\n\t\t});\n\t}\n}","export const updateObject = (oldObject, updateProperties) => {\n    return {\n        ...oldObject,\n        ...updateProperties \n    }\n}","import { AUTH_START, AUTH_SUCCESS, AUTH_FAIL, AUTH_LOGOUT } from '../../consts';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n\tcurrentUser: {},\n\tis_administrator: null,\n    token: null,\n    error: null,\n    loading: false\n};\n\nconst authStart = (state, action) => {\n\treturn updateObject(state, {\n\t\terror: null,\n\t\tloading: true\n\t});\n};\n\nconst authSuccess = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: action.user.token,\n\t\tcurrentUser: action.user,\n\t\tis_administrator: action.user.is_administrator,\n\t\terror: null,\n\t\tloading: false\n\t});\n};\n\nconst authFail = (state, action) => {\n\treturn updateObject(state, {\n\t\terror: action.error,\n\t\tloading: false\n\t});\n};\n\nconst authLogout = (state, action) => {\n\treturn updateObject(state, {\n\t\ttoken: null\n\t});\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase AUTH_START:\n\t\t\treturn authStart(state, action);\n\t\tcase AUTH_SUCCESS:\n\t\t\treturn authSuccess(state, action);\n\t\tcase AUTH_FAIL:\n\t\t\treturn authFail(state, action);\n\t\tcase AUTH_LOGOUT:\n\t\t\treturn authLogout(state, action);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { ConfigProvider } from 'antd';\nimport pt_BR from 'antd/es/locale/pt_BR';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/index.css';\n\nimport authReducer from './store/authReducers/authReducer';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n\tauth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhances(applyMiddleware(thunk)));\n\nconst app = (\n\t<ConfigProvider locale = { pt_BR }>\n\t\t<Provider store = { store } >\n\t\t\t<App />\n\t\t</Provider>\n\t</ConfigProvider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();","import axios from 'axios';\n\nimport { BASE_URL_IMAGES } from '../consts';\n\nexport const getImage = async (token, imageID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.get(`${ BASE_URL_IMAGES }detail/${ imageID }/`);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const saveImage = async (token, image) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.post(`${ BASE_URL_IMAGES }create/`, image);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};\n\nexport const editImage = async (token, image, imageID) => {\n\taxios.defaults.headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Token ${ token }`\n\t};\n\n\ttry {\n        const { data } = await axios.put(`${ BASE_URL_IMAGES }update/${ imageID }/`, image);\n\t\treturn data;    \n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t\treturn false;\n\t}\n};"],"sourceRoot":""}